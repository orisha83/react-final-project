{"version":3,"sources":["firebase.js","components/Utils.js","components/MoviesContaxtApi.js","components/MembersContextApi.js","components/UsersContaxtApi.js","components/SubscriptionsContaxtApi.js","components/LogInContaxtApi.js","components/MoviesWatchedComp.js","components/MemberComp.js","components/AddMemberComp.js","components/SubscriptionsComp.js","components/SubscriptionWatchedComp.js","components/MovieComp.js","components/AddMovieComp.js","components/MoviesComp.js","components/EditMovieComp.js","components/EditMemberComp.js","components/EditUserComp.js","components/UserComp.js","components/AddUserComp.js","components/UsersManagmentComp.js","components/CreatAccountComp.js","components/LoginComp.js","components/EntryComp.js","components/MainComp.js","components/WrapperComp.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","getDataFromServer","collection","a","get","snapshot","DataArr","myData","forEach","doc","data","id","push","getSpecificDocFromServer","docId","deleteDataFromServer","delete","response","sendDataToServer","jsonObj","add","getAllItems","url","axios","user","updateServer","set","MoviesContext","createContext","MoviesContextProvider","props","useState","movies","setMovies","Provider","value","children","MembersContext","MembersContextProvider","members","setMembers","UsersContext","UsersContextProvider","users","setUsers","SubscriptionsContext","SubscriptionsContextProvider","subscriptions","setSubscriptions","LogInContext","LogInContextProvider","isLogedIn","setIsLogedIn","logInUsers","setLogInUsers","logInUser","setLogInUser","isAdmin","setIsAdmin","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","paper","padding","borderColor","borderStyle","borderWidth","MoviesWatchedComp","classes","useContext","moviesAndDates","setMoviesAndDates","subscribePage","setSubscribePage","selectedMovie","setSelectedMovie","filteredMovies","setFilteredMovies","date","setDate","newId","setNewId","setPressed","clickedSubscribeToMovie","newsubscriptionToSubscriptions","newMovieToSubscriptions","MovieId","DateWatched","subscriptionsIndex","localSubscription","findIndex","x","MemberId","memberId","moviesRecoredInMemberRecored","Movies","newsubscriptionToServer","Utils","res","initialRender","useRef","useEffect","current","createMoviesAndDatesArray","moviesAndDatesArray","subscriptionsForMemberTemp","find","watchedMovies","item","MovieAndDateObj","movieId","movieName","Title","Grid","container","direction","Typography","variant","gutterBottom","align","Button","style","textTransform","onClick","filteredMoviesTemp","filter","className","FormControl","InputLabel","Select","onChange","e","target","map","index","MenuItem","width","height","type","data-date","data-date-format","to","root","flexGrow","MemberComp","member","setMember","showEdit","setShowEdit","showDelete","setShowDelete","logInUserVar","isUsingProps","setIsUsingProps","history","useHistory","loadPage","memberDetails","userPermissions","match","params","newMember","currentUser","UserName","Permissions","checkWhichBottonsToShow","alignItems","Name","Email","City","justify","textDecoration","startIcon","size","confirmAlert","title","message","buttons","label","MembersArrayAfterDelete","deleteMember","AddMemberComp","name","setName","email","setEmail","city","setCity","clickedSave","MemberObj","clickedAllMembers","MemberObjToMembers","currentMembersArray","FormGroup","TextField","required","SubscriptionsComp","allMembersPage","setAllMembersPage","addMembersPage","setAddMembersPage","allMembersButtonColor","setAllMembersButtonColor","addMembersButtonColor","setAddMembersButtonColor","permissionsObj","setPermissionsObj","showViewParam","setShowViewParam","showCreateParam","setShowCreateParam","showEditParam","showDeleteParam","color","SubscriptionsWatchedComp","subscriptionAndDatesArray","setSubscriptionAndDatesArray","subscriptionAndDatesObj","Member","element","MemberName","createSubscriptionsArray","variantMapping","MovieComp","movie","setMovie","movieDetails","newMovie","Genres","join","src","ImageUrl","SubscriptionWatchedComp","moviesArrayAfterDelete","deleteMovie","AddMovieComp","setTitle","genres","setGenres","imageUrl","setImageUrl","premierd","setPremierd","genresArry","split","moviesObj","clickedAllMovies","moviesObjtoMovies","currentMoviesArray","MoviesComp","allMoviesButtonColor","setAllMoviesButtonColor","useSearch","setUseSearch","addMoviesButtonColor","setAddMoviesButtonColor","searchWord","setSearchWord","allMoviesPage","setAllMoviesPage","addMoviesPage","setAddMoviesPage","filteredMoviesArray","toUpperCase","startsWith","placeholder","InputProps","endAdornment","InputAdornment","position","IconButton","EditMovieComp","editMovie","setEditMovie","movieIndex","form","newGenres","row","moviesObjtoServer","moviesArray","EditMemberComp","setEditMember","memberIndex","MemberObjToServer","MembersArray","MemberIndex","EditUserComp","editUser","setEditUser","fname","setFName","lname","setLName","userName","setUserName","sessionTimeOut","setSessionTimeOut","viewSubscription","setViewSubscription","createSubscription","setCreateSubscription","deleteSubscription","setDeleteSubscription","updateSubscription","setUpdateSubscription","viewMovies","setViewMovies","createMovies","setCreateMovies","deleteMovies","setDeleteMovies","updateMovies","setUpdateMovies","userIndex","FirstName","LastName","SessionTimeOut","CreatedDate","toDate","toString","FormControlLabel","control","Checkbox","checked","UserToUsers","UserObjToServer","UsersArray","UserIndex","UserComp","logInUsersVar","setLogInUsersVar","userDetails","usersArrayAfterDelete","usersLoginArrayAfterDelete","deleteUser","AddUserComp","newUsersId","setNewUsersId","newUsersLoginId","setNewUsersLoginId","setPressed2","setPermissions","userObj","Date","userLoginObj","Password","result","clickedAllUsers","initialRender2","allUsersButtonColor","setAllUsersButtonColor","addUserButtonColor","setAddUserButtonColor","allUsersPage","setAllUsersPage","addUserPage","setAddUserPage","CreateAccountComp","setUser","pass","setPass","isLogInFailed","setIsLogInFailed","logedUser","newUserObjToServer","newUserObjToUsersLogin","currentUsersLogin","link","button","LoginComp","setIsLogedInVar","setLogInUserVar","setIsAdminVar","EntryComp","display","marginLeft","marginRight","appbar","menuButton","MainComp","isLogedInVar","isAdminVar","anchorEl","setAnchorEl","open","Boolean","handleClose","getUsers","getMovies","getMembers","getSubscriptions","getUsersLogin","AppBar","Toolbar","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","exact","path","component","UserManagmentComp","WrapperComp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19cadbb2.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\n // Your web app's Firebase configuration\r\n var firebaseConfig = {\r\n    apiKey: \"AIzaSyAcrC8WFMcfXI8NVwjNDqL-WzqSmpttCeA\",\r\n    authDomain: \"react-final-project-eba09.firebaseapp.com\",\r\n    databaseURL: \"https://react-final-project-eba09-default-rtdb.firebaseio.com\",\r\n    projectId: \"react-final-project-eba09\",\r\n    storageBucket: \"react-final-project-eba09.appspot.com\",\r\n    messagingSenderId: \"446437310002\",\r\n    appId: \"1:446437310002:web:3dbcf986d210e41d16062b\"\r\n    \r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase","import firebase from '../firebase'\r\nimport axios from 'axios'\r\n\r\nlet firestore = firebase.firestore();\r\n\r\nconst getDataFromServer = async function (collection) \r\n{\r\n    let snapshot = await firestore.collection(collection).get()\r\n    let DataArr = []\r\n    let myData = \"\"\r\n    snapshot.forEach(doc =>{\r\n        myData = {data : doc.data() , id : doc.id}\r\n        DataArr.push(myData)\r\n    })\r\n    return DataArr\r\n}\r\n\r\nconst getSpecificDocFromServer = async function (collection, docId) \r\n{\r\n    let snapshot = firestore.collection(collection).doc(docId)\r\n    let doc = await snapshot.get()\r\n    if(doc){\r\n        return doc.data()\r\n    }\r\n}\r\n\r\nconst deleteDataFromServer = async function (collection, id ) \r\n{\r\n    let response = await firestore.collection(collection).doc(id).delete()\r\n    return response\r\n}\r\n\r\nconst sendDataToServer = async function (collection, jsonObj ) \r\n{\r\n    let response = await firestore.collection(collection).add(jsonObj)\r\n    return response\r\n}\r\n\r\nconst updateServer = function (collection, id , jsonObj ) \r\n{\r\n    firestore.collection(collection).doc(id).set(jsonObj)\r\n}\r\n\r\nconst getAllItems = async function(url)\r\n{\r\n  let user = await axios.get(url)\r\n  return user.data\r\n}\r\n\r\nexport default {sendDataToServer, getDataFromServer, getAllItems, updateServer, deleteDataFromServer, getSpecificDocFromServer};\r\n\r\n","\r\nimport React, {  createContext, useState } from \"react\";\r\n\r\nexport const MoviesContext = createContext();\r\n\r\n  export const MoviesContextProvider = props => {\r\n    const [movies, setMovies] = useState(\"\")\r\n  \r\n    return (\r\n      <MoviesContext.Provider value={[movies, setMovies]}>\r\n        {props.children}\r\n      </MoviesContext.Provider>\r\n    );\r\n  };","\r\nimport React, {  createContext, useState } from \"react\";\r\n\r\nexport const MembersContext = createContext();\r\n\r\n  export const MembersContextProvider = props => {\r\n    const [members, setMembers] = useState(\"\")\r\n  \r\n    return (\r\n      <MembersContext.Provider value={[members, setMembers]}>\r\n        {props.children}\r\n      </MembersContext.Provider>\r\n    );\r\n  };","\r\nimport React, {  createContext, useState } from \"react\";\r\n\r\nexport const UsersContext = createContext();\r\n\r\n  export const UsersContextProvider = props => {\r\n    const [users, setUsers] = useState(\"\")\r\n  \r\n    return (\r\n      <UsersContext.Provider value={[users, setUsers]}>\r\n        {props.children}\r\n      </UsersContext.Provider>\r\n    );\r\n  };","\r\nimport React, {  createContext, useState } from \"react\";\r\n\r\nexport const SubscriptionsContext = createContext();\r\n\r\n  export const SubscriptionsContextProvider = props => {\r\n    const [subscriptions, setSubscriptions] = useState(\"\")\r\n  \r\n    return (\r\n      <SubscriptionsContext.Provider value={[subscriptions, setSubscriptions]}>\r\n        {props.children}\r\n      </SubscriptionsContext.Provider>\r\n    );\r\n  };","\r\nimport React, {  createContext, useState } from \"react\";\r\n\r\nexport const LogInContext = createContext();\r\n\r\n  export const LogInContextProvider = props => {\r\n    const [isLogedIn,setIsLogedIn] = useState(false)\r\n    const [logInUsers,setLogInUsers] = useState(\"\")\r\n    const [logInUser,setLogInUser] = useState(\"\")\r\n    const [isAdmin,setIsAdmin] = useState(false)\r\n  \r\n    return (\r\n      <LogInContext.Provider value={{ isLogedIn : [isLogedIn,setIsLogedIn], logInUsers : [logInUsers,setLogInUsers], logInUser : [logInUser,setLogInUser], isAdmin : [isAdmin,setIsAdmin]}}>\r\n        {props.children}\r\n      </LogInContext.Provider>\r\n    );\r\n  };","import {useState, useEffect, useContext, useRef} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport { SubscriptionsContext } from './SubscriptionsContaxtApi'\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Utils from './Utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 220\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    }\r\n  }));\r\n\r\nfunction MoviesWatchedComp(props)\r\n{\r\n    const classes = useStyles();\r\n    const [subscriptions, setSubscriptions] = useContext(SubscriptionsContext);\r\n    const [moviesAndDates, setMoviesAndDates] = useState(\"\")\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [subscribePage, setSubscribePage] = useState(false)\r\n    const [selectedMovie, setSelectedMovie] = useState()\r\n    const [filteredMovies, setFilteredMovies] = useState([])\r\n    const [date, setDate] = useState(\"2015-08-09\")\r\n    const [newId, setNewId] = useState(\"\")\r\n    const [pressed, setPressed] = useState(false)\r\n\r\n\r\n    const clickedSubscribeToMovie = async () =>\r\n    {\r\n        let newsubscriptionToSubscriptions = {}\r\n        let newMovieToSubscriptions = {MovieId : selectedMovie.id, DateWatched : date}\r\n        let localSubscription = subscriptions\r\n        let subscriptionsIndex = localSubscription.findIndex(x => x.data.MemberId == props.memberId)\r\n        if(subscriptionsIndex >= 0 )\r\n        {\r\n            let moviesRecoredInMemberRecored = localSubscription[subscriptionsIndex].data.Movies\r\n            moviesRecoredInMemberRecored.push(newMovieToSubscriptions)\r\n            newsubscriptionToSubscriptions = {id: localSubscription[subscriptionsIndex].id , data: {MemberId : props.memberId, Movies : moviesRecoredInMemberRecored}}\r\n            localSubscription[subscriptionsIndex] = newsubscriptionToSubscriptions\r\n            setSubscriptions(localSubscription)\r\n            let newsubscriptionToServer = {MemberId : props.memberId, Movies : moviesRecoredInMemberRecored}\r\n            Utils.updateServer('Subscriptions', localSubscription[subscriptionsIndex].id, newsubscriptionToServer)\r\n        }\r\n        else //new subscription\r\n        {\r\n            newsubscriptionToSubscriptions = {MemberId : props.memberId, Movies : [newMovieToSubscriptions]}\r\n            let res = await Utils.sendDataToServer('Subscriptions',newsubscriptionToSubscriptions)\r\n            setNewId(res.id)\r\n        }\r\n        setSubscribePage(false)\r\n    }\r\n\r\n    const initialRender = useRef(true);\r\n    useEffect(() =>\r\n    {\r\n        if(initialRender.current){\r\n            initialRender.current = false;\r\n        }else{\r\n                let newMovieToSubscriptions = {MovieId : selectedMovie.id, DateWatched : date}\r\n                let newsubscriptionToSubscriptions = {id: newId , data: {MemberId : props.memberId, Movies : [newMovieToSubscriptions]}}\r\n                let localSubscription = subscriptions\r\n                localSubscription.push(newsubscriptionToSubscriptions)\r\n                setSubscriptions(localSubscription)\r\n                setPressed(true)\r\n            }\r\n    },[newId])\r\n\r\n    const ClickedToClose = () =>\r\n    {\r\n        setSubscribePage(false)\r\n    }\r\n\r\n    const clickedSubscribe = () =>\r\n    {\r\n        setSubscribePage(true)\r\n        let filteredMoviesTemp = movies.filter(x => x.data.Title != moviesAndDates.movieName)\r\n        setFilteredMovies(filteredMoviesTemp)\r\n    }\r\n\r\n    const selectChanged = (e) =>\r\n    {\r\n        setSelectedMovie(e.target.value);\r\n    }\r\n\r\n    const createMoviesAndDatesArray = () =>\r\n    {\r\n        let moviesAndDatesArray = []\r\n        let subscriptionsForMemberTemp = subscriptions.find(x => x.data.MemberId == props.memberId)\r\n        if(subscriptionsForMemberTemp) //adds to current subscription\r\n        {\r\n            let moviesAndDatesWithId = subscriptionsForMemberTemp.data.Movies\r\n            moviesAndDatesWithId.forEach(x => {\r\n            let watchedMovies = movies.find(item => item.id == x.MovieId)\r\n            if(watchedMovies)\r\n            {\r\n                let MovieAndDateObj = {movieId : watchedMovies.id, movieName : watchedMovies.data.Title , date : x.DateWatched}\r\n                moviesAndDatesArray.push(MovieAndDateObj)\r\n            }\r\n            })\r\n            \r\n        }\r\n        setMoviesAndDates(moviesAndDatesArray)\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        createMoviesAndDatesArray()\r\n    },[])\r\n\r\n    useEffect(() =>\r\n    {\r\n        createMoviesAndDatesArray()\r\n    },[subscribePage, props])\r\n\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                    <Typography variant=\"h6\" gutterBottom align=\"center\">\r\n                        Movies Watched\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                   {subscribePage \r\n                    ? <Button style={{textTransform: 'none'}} variant=\"contained\" onClick={ClickedToClose}>Close</Button>\r\n                    : <Button style={{textTransform: 'none'}} variant=\"contained\" onClick={clickedSubscribe}>Subscribe to a new movie</Button>\r\n                    }\r\n                </Grid>\r\n                {subscribePage && <div className={classes.paper}><Grid item>Add a New Movie </Grid>\r\n                                        <Grid item container direction=\"row\">\r\n                                            <Grid item>\r\n                                                <FormControl  className={classes.formControl}>\r\n                                                    <InputLabel>Select a Movie</InputLabel>\r\n                                                    <Select onChange={selectChanged}>\r\n                                                        {\r\n                                                            filteredMovies.map((item,index) => {\r\n                                                                return <MenuItem key={index} value={item}>{item.data.Title}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <input style={{width:\"150px\", height:\"50px\" }} type=\"date\" data-date=\"\" data-date-format=\"DD/MM/YYYY\" value={date} onChange={e =>setDate(e.target.value) }/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item><Button style={{textTransform: 'none'}} variant=\"contained\" onClick={clickedSubscribeToMovie}>Subscribe</Button></Grid>\r\n                                </div>\r\n                }\r\n                <Grid item container direction=\"column\">\r\n                <ul>\r\n                {\r\n                 moviesAndDates && moviesAndDates.map((item,index) =>{\r\n                    return <Grid item><li key={index}><Link to={`/Movie/${item.movieId}`}>{item.movieName}</Link>, {item.date}</li></Grid>\r\n                    })\r\n                }\r\n                </ul>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviesWatchedComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport MoviesWatchedComp from './MoviesWatchedComp'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport {LogInContext} from './LogInContaxtApi'\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport Utils from './Utils'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction MemberComp(props)\r\n{\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const classes = useStyles()\r\n    const [member, setMember] = useState()\r\n    const [showEdit, setShowEdit] = useState(false)\r\n    const [showDelete, setShowDelete] = useState(false)\r\n    const {logInUser} = useContext(LogInContext)\r\n    const [logInUserVar,setLogInUserVar] = logInUser\r\n    const [users, setUsers] = useContext(UsersContext);\r\n    const [isUsingProps, setIsUsingProps] = useState(true)\r\n    const history = useHistory()\r\n\r\n   const deleteMember = () =>\r\n    {\r\n        let currentMembersArray = members\r\n        let MembersArrayAfterDelete = currentMembersArray.filter(x => x.id != member.id)\r\n        setMembers(MembersArrayAfterDelete)\r\n        Utils.deleteDataFromServer(\"Members\", member.id)\r\n        if(isUsingProps == false)\r\n        {\r\n          history.push('/Subscriptions')\r\n        }\r\n    }\r\n\r\n   const clickedDelete = () =>\r\n    {\r\n        confirmAlert({\r\n            title: 'Are you sure you want to delete Member:',  // Title dialog\r\n            message: member.data.Name,               // Message dialog\r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => deleteMember()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n    const checkWhichBottonsToShow = () =>\r\n    {\r\n      let currentUser = users.find(x => x.data.UserName == logInUserVar.user)\r\n      if(currentUser)\r\n      {\r\n          currentUser.data.Permissions.forEach(item => {\r\n          if(item == \"Update Movies\")\r\n          {\r\n            setShowEdit(true)\r\n          }\r\n          if(item == \"Delete Movies\")\r\n          {\r\n            setShowDelete(true)\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    const loadPage = () =>\r\n    {\r\n        if(props.memberDetails)\r\n        {\r\n            setIsUsingProps(true)\r\n            setMember(props.memberDetails)\r\n            setShowEdit(props.userPermissions.showEdit)\r\n            setShowDelete(props.userPermissions.showDelete)\r\n        }\r\n        else if(props.match.params.id)\r\n        {\r\n            setIsUsingProps(false)\r\n            let newMember = members.find(x => x.id == props.match.params.id)\r\n            if(newMember)\r\n            {\r\n                setMember(newMember)\r\n                checkWhichBottonsToShow()\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n      loadPage()\r\n    },[props])\r\n\r\n       return(\r\n       \r\n            <Grid container direction=\"column\" alignItems=\"center\" >\r\n                <Grid item>\r\n                    <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                        {member && member.data.Name}<br/>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                        Email : {member && member.data.Email}<br/>\r\n                        City : {member && member.data.City}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item>\r\n                    {member && showEdit && <Link to={`/Subscriptions/Edit/${member.id}`} style={{ textDecoration: 'none' }}><Button style={{textTransform: 'none'}} startIcon={<EditIcon />} size=\"large\" variant=\"contained\"></Button></Link>}\r\n                    </Grid>\r\n                    <Grid item>\r\n                    {showDelete &&  <Button style={{textTransform: 'none'}} variant=\"contained\" size=\"large\" startIcon={<DeleteIcon />} onClick={clickedDelete}></Button> }\r\n                    </Grid>\r\n                </Grid>\r\n                <br/>\r\n                <Grid item className={classes.paper}>\r\n                    {member && <MoviesWatchedComp memberId={member.id}/>}\r\n                </Grid>\r\n                <br/>\r\n            </Grid>\r\n       \r\n    )\r\n}\r\n\r\nexport default MemberComp;\r\n\r\n","import {useState, useContext, useRef, useEffect} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Utils from './Utils'\r\n\r\nfunction AddMemberComp(params)\r\n{\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [newId, setNewId] = useState(0)\r\n    const [pressed, setPressed] = useState(false)\r\n\r\n    const clickedSave = async () =>\r\n    {\r\n        let MemberObj = {Name : name, Email : email, City : city}\r\n        let res = await Utils.sendDataToServer('Members', MemberObj)\r\n        setNewId(res.id)\r\n        params.clickedAllMembers()\r\n    }\r\n\r\n    const initialRender = useRef(true);\r\n    useEffect(() =>\r\n    {\r\n        if(initialRender.current){\r\n            initialRender.current = false;\r\n        }else{\r\n                let MemberObjToMembers = {id : newId , data : {Name : name, Email : email, City : city}}\r\n                let currentMembersArray = members\r\n                currentMembersArray.push(MemberObjToMembers)\r\n                setMembers(currentMembersArray)\r\n                setPressed(true)\r\n            }\r\n    },[newId])\r\n   \r\n       return(\r\n        <div>\r\n            <br/>\r\n            <FormGroup>\r\n           Name :  <TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setName(e.target.value)}/><br/>\r\n           Email : &nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setEmail(e.target.value)}/><br/>\r\n           City  : &nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setCity(e.target.value)}/><br/>\r\n           </FormGroup>\r\n           <br/>\r\n           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Button style={{textTransform: 'none'}} startIcon={<SaveIcon />} variant=\"contained\" size=\"large\" onClick={clickedSave}></Button> \r\n            <Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size=\"large\" onClick={() => params.clickedAllMembers()}></Button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMemberComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport MemberComp from './MemberComp'\r\nimport AddMemberComp from './AddMemberComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {LogInContext} from './LogInContaxtApi'\r\nimport {UsersContext} from './UsersContaxtApi'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction SubscriptionsComp()\r\n{\r\n    const classes = useStyles()\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [allMembersPage, setAllMembersPage] = useState(true)\r\n    const [addMembersPage, setAddMembersPage] = useState(false)\r\n    const [allMembersButtonColor,setAllMembersButtonColor] = useState(\"primary\")\r\n    const [addMembersButtonColor,setAddMembersButtonColor] = useState(\"\")\r\n    const {logInUser} = useContext(LogInContext)\r\n    const [logInUserVar,setLogInUserVar] = logInUser\r\n    const [users, setUsers] = useContext(UsersContext);\r\n    const [permissionsObj, setPermissionsObj] = useState()\r\n    const [showViewParam, setShowViewParam] = useState(false)\r\n    const [showCreateParam, setShowCreateParam] = useState(false)\r\n\r\n    const checkWhichBottonsToShow = () =>\r\n    {\r\n      let currentUser = users.find(x => x.data.UserName == logInUserVar.user)\r\n      if(currentUser)\r\n      {\r\n        let showEditParam = false\r\n        let showDeleteParam = false\r\n        currentUser.data.Permissions.forEach(item => {\r\n          if(item == \"Update Subscription\")\r\n          {\r\n            showEditParam = true\r\n          }\r\n          if(item == \"Delete Subscription\")\r\n          {\r\n            showDeleteParam = true\r\n          }\r\n          if(item == \"View Subscription\")\r\n          {\r\n            setShowViewParam(true)\r\n          }\r\n          if(item == \"Create Subscription\")\r\n          {\r\n            setShowCreateParam(true)\r\n          }\r\n        })\r\n        setPermissionsObj({showEdit : showEditParam, showDelete : showDeleteParam})\r\n      }\r\n    }\r\n\r\n    useEffect(() => \r\n    {\r\n        checkWhichBottonsToShow()\r\n    },[])\r\n\r\n    const clickedAllMembers = () => \r\n    {\r\n        setAddMembersButtonColor(\"\")\r\n        setAllMembersButtonColor(\"primary\")\r\n        setAllMembersPage(true)\r\n        setAddMembersPage(false)\r\n    }\r\n\r\n    const clickedAddMembers = () => \r\n    {\r\n        setAllMembersButtonColor(\"\")\r\n        setAddMembersButtonColor(\"primary\")\r\n        setAllMembersPage(false)\r\n        setAddMembersPage(true)\r\n    }\r\n\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Subscriptions\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={allMembersButtonColor} onClick={clickedAllMembers}>All Members</Button> \r\n                    </Grid>\r\n                    <Grid item>\r\n                      {showCreateParam  && <Button style={{textTransform: 'none'}} variant=\"contained\" color={addMembersButtonColor} onClick={clickedAddMembers}>Add Member</Button>}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"center\" >\r\n                     {showViewParam ? \"\" : <div>You Don't Have \"View Subscriptions\" Permissions!</div>}\r\n                    {allMembersPage && showViewParam && members && members.map((item,index) => {return <Grid item key={index} className={classes.paper}><MemberComp memberDetails={item} userPermissions={permissionsObj}/></Grid>})}\r\n                    {addMembersPage && <div className={classes.paper}><AddMemberComp clickedAllMembers={clickedAllMembers}/></div>}\r\n                </Grid> \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { SubscriptionsContext } from './SubscriptionsContaxtApi'\r\nimport {MembersContext} from './MembersContextApi'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nfunction SubscriptionsWatchedComp(props)\r\n{\r\n   const [subscriptions, setSubscriptions] = useContext(SubscriptionsContext);\r\n   const [members, setMembers] = useContext(MembersContext);\r\n   const [subscriptionAndDatesArray, setSubscriptionAndDatesArray] = useState([])\r\n\r\n   const createSubscriptionsArray = () =>\r\n    {\r\n        let subscriptionAndDatesArray = []\r\n        let subscriptionAndDatesObj = {}\r\n        let Member = {}\r\n\r\n        subscriptions.forEach(function(element)\r\n        {\r\n            element.data.Movies.forEach(function(item)\r\n            {\r\n                if(item.MovieId == props.movieId)\r\n                {\r\n                    Member = members.find(x => x.id == element.data.MemberId)\r\n                    if(Member)\r\n                    {\r\n                        subscriptionAndDatesObj = {memberId : Member.id, MemberName : Member.data.Name, date : item.DateWatched}\r\n                        subscriptionAndDatesArray.push(subscriptionAndDatesObj)\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        setSubscriptionAndDatesArray(subscriptionAndDatesArray)\r\n    }\r\n\r\n   useEffect(() =>\r\n   {\r\n    createSubscriptionsArray()\r\n   },[])\r\n\r\n\r\n       return(\r\n        <div>\r\n          <Typography variant=\"h5\" variantMapping=\"h1\" gutterBottom align=\"center\">\r\n                        Subscriptions watched\r\n                    </Typography>\r\n            \r\n            <ul>\r\n              {\r\n                  subscriptionAndDatesArray.map((item,index) =>{\r\n                      return <li key={index}><Link to={`/Member/${item.memberId}`}>{item.MemberName}</Link>, {item.date}</li>\r\n                  })\r\n              }\r\n            </ul>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsWatchedComp;\r\n\r\n","import {useContext, useEffect, useState} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport SubscriptionWatchedComp from \"./SubscriptionWatchedComp\"\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport {LogInContext} from './LogInContaxtApi'\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport Utils from './Utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction MovieComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [movie, setMovie] = useState()\r\n    const [showEdit, setShowEdit] = useState(false)\r\n    const [showDelete, setShowDelete] = useState(false)\r\n    const {logInUser} = useContext(LogInContext)\r\n    const [logInUserVar,setLogInUserVar] = logInUser\r\n    const [users, setUsers] = useContext(UsersContext);\r\n    const [isUsingProps, setIsUsingProps] = useState(true)\r\n    const history = useHistory()\r\n\r\n    const deleteMovie = () =>\r\n    {\r\n        let currentMoviesArray = movies\r\n        let moviesArrayAfterDelete = currentMoviesArray.filter(x => x.id != movie.id)\r\n        setMovies(moviesArrayAfterDelete)\r\n        Utils.deleteDataFromServer(\"Movies\", movie.id)\r\n        if(isUsingProps == false)\r\n        {\r\n          history.push('/Movies')\r\n        }\r\n    }\r\n\r\n    const clickedDelete = () =>\r\n    {\r\n        confirmAlert({\r\n            title: 'Are you sure you want to delete the movie:',                        // Title dialog\r\n            message: movie.data.Title,               // Message dialog\r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => deleteMovie()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n    const checkWhichBottonsToShow = () =>\r\n    {\r\n      let currentUser = users.find(x => x.data.UserName == logInUserVar.user)\r\n      if(currentUser)\r\n      {\r\n          currentUser.data.Permissions.forEach(item => {\r\n          if(item == \"Update Movies\")\r\n          {\r\n            setShowEdit(true)\r\n          }\r\n          if(item == \"Delete Movies\")\r\n          {\r\n            setShowDelete(true)\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    const loadPage = () =>\r\n    {\r\n      if(props.movieDetails)\r\n        {\r\n            setIsUsingProps(true)\r\n            setMovie(props.movieDetails)\r\n            setShowEdit(props.userPermissions.showEdit)\r\n            setShowDelete(props.userPermissions.showDelete)\r\n        }\r\n        else if(props.match.params.id)\r\n        {\r\n            setIsUsingProps(false)\r\n            let newMovie = movies.find(x => x.id == props.match.params.id)\r\n            if(newMovie)\r\n            {\r\n              setMovie(newMovie)\r\n              checkWhichBottonsToShow()\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n      loadPage()\r\n    },[props])\r\n    \r\n    return(\r\n        \r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                    <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n                    {movie && movie.data.Title} , {movie && movie.data.date}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                    Genres: {movie && movie.data.Genres.join(\", \")}\r\n                    </Typography>\r\n               </Grid>\r\n                <Grid item>    \r\n                </Grid>\r\n                <Grid  container direction=\"row\" justify=\"space-around\" alignItems=\"flex-start\" >\r\n                    <Grid item  >\r\n                        {movie && <img src={movie.data.ImageUrl} width=\"200\" height=\"300\"/> }\r\n                    </Grid>\r\n                    <Grid item  className={classes.paper}>\r\n                        {movie && <SubscriptionWatchedComp movieId={movie.id}/>}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                   {movie &&  showEdit && <Link to={`/Movies/Edit/${movie.id}`} style={{ textDecoration: 'none' }}>\r\n                        <Button style={{textTransform: 'none'}} size='large' startIcon={<EditIcon />} variant=\"contained\"></Button></Link>}\r\n                   {showDelete && <Button style={{textTransform: 'none'}} size='large' variant=\"contained\" startIcon={<DeleteIcon />} onClick={clickedDelete}></Button>}\r\n                </Grid>\r\n            </Grid>\r\n        \r\n    )\r\n}\r\n\r\nexport default MovieComp;\r\n\r\n","import {useState, useContext, useEffect, useRef} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport Utils from './Utils'\r\n\r\n\r\nconst AddMovieComp = (params) =>\r\n{\r\n    const [title, setTitle] = useState(\"\")\r\n    const [genres, setGenres] = useState(\"\")\r\n    const [imageUrl, setImageUrl] = useState(\"\")\r\n    const [premierd, setPremierd] = useState()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [newId, setNewId] = useState(0)\r\n    const [pressed, setPressed] = useState(false)\r\n\r\n    const clickedSave = async () =>\r\n    {\r\n        let genresArry = genres.split(\" \")\r\n        let moviesObj = {Title : title, date : premierd, ImageUrl : imageUrl, Genres : genresArry}\r\n        let res = await Utils.sendDataToServer('Movies', moviesObj)\r\n        setNewId(res.id)\r\n        params.clickedAllMovies()\r\n    }\r\n\r\n    const initialRender = useRef(true);\r\n    useEffect(() =>\r\n    {\r\n        if(initialRender.current){\r\n            initialRender.current = false;\r\n        }else{\r\n                let genresArry = genres.split(\" \")\r\n                let moviesObjtoMovies = {id : newId , data : {Title : title, date : premierd, ImageUrl : imageUrl, Genres : genresArry}}\r\n                let currentMoviesArray = movies\r\n                currentMoviesArray.push(moviesObjtoMovies)\r\n                setMovies(currentMoviesArray)\r\n                setPressed(true)\r\n            }\r\n    },[newId])\r\n\r\n    return(\r\n        <div>\r\n            <br/>\r\n            <FormGroup>\r\n                Name :  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setTitle(e.target.value)}/><br/>\r\n                Genres : &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" size=\"small\" onChange={e =>setGenres(e.target.value)}/><br/>\r\n                Image URL : <TextField variant=\"outlined\" size=\"small\" onChange={e =>setImageUrl(e.target.value)}/><br/>\r\n                Premierd : &nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" size=\"small\" onChange={e =>setPremierd(e.target.value)}/>\r\n            </FormGroup><br/><br/>\r\n\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Button style={{textTransform: 'none'}} startIcon={<SaveIcon />} size=\"large\" variant=\"contained\" onClick={clickedSave}></Button>  \r\n            <Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size=\"large\" onClick={() => params.clickedAllMovies()}></Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMovieComp;\r\n\r\n","import {useState, useEffect, useContext,useRef } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MovieComp from './MovieComp'\r\nimport AddMovieComp from './AddMovieComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { MoviesContext } from \"./MoviesContaxtApi\";\r\nimport {LogInContext} from './LogInContaxtApi'\r\nimport {UsersContext} from './UsersContaxtApi'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction MoviesComp()\r\n{\r\n    const [allMoviesButtonColor,setAllMoviesButtonColor] = useState(\"primary\")\r\n    const classes = useStyles()\r\n    const [useSearch, setUseSearch] = useState(true)\r\n    const [addMoviesButtonColor,setAddMoviesButtonColor] = useState(\"\")\r\n    const [searchWord, setSearchWord] = useState(\"\")\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [allMoviesPage, setAllMoviesPage] = useState(true)\r\n    const [addMoviesPage, setAddMoviesPage] = useState(false)\r\n    const [filteredMovies, setFilteredMovies] = useState()\r\n    const {logInUser} = useContext(LogInContext)\r\n    const [logInUserVar,setLogInUserVar] = logInUser\r\n    const [users, setUsers] = useContext(UsersContext);\r\n    const [permissionsObj, setPermissionsObj] = useState()\r\n    const [showViewParam, setShowViewParam] = useState(false)\r\n    const [showCreateParam, setShowCreateParam] = useState(false)\r\n    const [pressed, setPressed] = useState(false)\r\n    const [pressed2, setPressed2] = useState(false)\r\n\r\n    const checkWhichBottonsToShow = () =>\r\n    {\r\n      let currentUser = users.find(x => x.data.UserName == logInUserVar.user)\r\n      if(currentUser)\r\n      {\r\n        let showEditParam = false\r\n        let showDeleteParam = false\r\n        currentUser.data.Permissions.forEach(item => {\r\n          if(item == \"Update Movies\")\r\n          {\r\n            showEditParam = true\r\n          }\r\n          if(item == \"Delete Movies\")\r\n          {\r\n            showDeleteParam = true\r\n          }\r\n          if(item == \"View Movies\")\r\n          {\r\n            setShowViewParam(true)\r\n          }\r\n          if(item == \"Create Movies\")\r\n          {\r\n            setShowCreateParam(true)\r\n          }\r\n        })\r\n        setPermissionsObj({showEdit : showEditParam, showDelete : showDeleteParam})\r\n      }\r\n    }\r\n\r\n    useEffect(() => \r\n    {\r\n      setFilteredMovies(movies)\r\n        checkWhichBottonsToShow()\r\n    },[])\r\n\r\n    const initialRender = useRef(true);\r\n    useEffect(() =>  {\r\n    if(initialRender.current)\r\n    {\r\n      initialRender.current = false;\r\n    }\r\n    else\r\n    {\r\n      let filteredMoviesArray\r\n        if(searchWord != \"\")\r\n        {\r\n          filteredMoviesArray = movies.filter(x => x.data.Title.toUpperCase().startsWith(searchWord))\r\n        }\r\n        else\r\n        {\r\n          filteredMoviesArray = movies\r\n        }\r\n        setFilteredMovies(filteredMoviesArray)\r\n      setPressed(true)\r\n    }\r\n    },[searchWord, movies])\r\n\r\n    const clickedAllMovies = () => \r\n    {\r\n        setSearchWord(\"\")\r\n        setAddMoviesButtonColor(\"\")\r\n        setAllMoviesButtonColor(\"primary\")\r\n        setUseSearch(true)\r\n        setAllMoviesPage(true)\r\n        setAddMoviesPage(false)\r\n        setFilteredMovies(movies)\r\n    }\r\n\r\n    const clickedAddMovies = () => \r\n    {\r\n        setAllMoviesButtonColor(\"\")\r\n        setAddMoviesButtonColor(\"primary\")\r\n        setUseSearch(false)\r\n        setAllMoviesPage(false)\r\n        setAddMoviesPage(true)\r\n    }\r\n\r\n       return(\r\n           \r\n        <div>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Movies\r\n                    </Typography>\r\n                   \r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={allMoviesButtonColor} onClick={clickedAllMovies}>All Movies</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {showCreateParam && <Button style={{textTransform: 'none'}} variant=\"contained\" color={addMoviesButtonColor} onClick={clickedAddMovies}>Add Movie</Button>}\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    </Grid>\r\n                    <Grid item>\r\n                   {useSearch ? <label><TextField placeholder=\"e.g., Titanic\" value={searchWord} onChange={e => setSearchWord(e.target.value.toUpperCase())} InputProps={{endAdornment: (<InputAdornment position=\"end\"><IconButton><SearchIcon /></IconButton></InputAdornment>)}}\r\n                            variant=\"outlined\" style={{width: 205}} size=\"small\"/><br/></label> : \"\"}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"center\">\r\n                    {showViewParam ? \"\" : <div>You Don't Have \"View Movies\" Permissions!</div>}\r\n                    {allMoviesPage && showViewParam && filteredMovies && filteredMovies.map((item,index) => {return <div><Grid item key={index} className={classes.paper}><MovieComp movieDetails={item} userPermissions={permissionsObj}/></Grid><br/></div>})}\r\n                    {addMoviesPage && <div className={classes.paper}><AddMovieComp  clickedAllMovies={clickedAllMovies}/></div>}\r\n                </Grid> \r\n           </Grid>\r\n        </div>    )\r\n}\r\n\r\nexport default MoviesComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Utils from './Utils'\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction EditMovieComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [genres, setGenres] = useState(\"\")\r\n    const [imageUrl, setImageUrl] = useState(\"\")\r\n    const [premierd, setPremierd] = useState()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [editMovie, setEditMovie] = useState(\"\")\r\n\r\n    const clickedUpdate = () =>\r\n    {\r\n        let moviesObjtoMovies = {id : props.match.params.id , data : {Title : editMovie.data.Title, date : premierd, ImageUrl : imageUrl, Genres : genres}}\r\n        let moviesObjtoServer = {Title : editMovie.data.Title, date : premierd, ImageUrl : imageUrl, Genres : genres}\r\n        let moviesArray = movies\r\n        let movieIndex = movies.findIndex(x => x.id == moviesObjtoMovies.id )\r\n        if(movieIndex >= 0 )\r\n        {\r\n          moviesArray[movieIndex] = moviesObjtoMovies\r\n          setMovies(moviesArray)\r\n          Utils.updateServer('Movies', moviesObjtoMovies.id, moviesObjtoServer)\r\n        }\r\n    }\r\n\r\n    const updateGenres = (e) =>\r\n    {\r\n      let newGenres = e.target.value\r\n      newGenres = newGenres.split(\" \")\r\n      setGenres(newGenres)\r\n    }\r\n\r\n    const form = () => \r\n    {\r\n      let movieIndex = movies.findIndex(x => x.id == props.match.params.id )\r\n      if(movieIndex >= 0 )\r\n      {\r\n        setEditMovie(movies[movieIndex])\r\n        setGenres(movies[movieIndex].data.Genres)\r\n        setImageUrl(movies[movieIndex].data.ImageUrl)\r\n        setPremierd(movies[movieIndex].data.date)\r\n      }     \r\n    }\r\n\r\n    useEffect(() => {\r\n      form()\r\n    },[])\r\n   \r\n       return(\r\n        <div >\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n            {\r\n                <FormGroup className={classes.paper}>\r\n                  <h2>Edit Movie : {editMovie && editMovie.data.Title}</h2>\r\n                  Name : <TextField variant=\"outlined\" value={editMovie && editMovie.data.Title}/><br/>\r\n                  Genres : <TextField variant=\"outlined\" placeholder={editMovie && editMovie.data.Genres} onChange={updateGenres}/><br/>\r\n                  Image URL :  <TextField variant=\"outlined\" placeholder={editMovie && editMovie.data.ImageUrl} onChange={e =>setImageUrl(e.target.value)}/><br/>\r\n                  Premierd :  <TextField variant=\"outlined\" placeholder={editMovie && editMovie.data.date} onChange={e =>setPremierd(e.target.value)}/>\r\n                  <br/>\r\n                  <br/>\r\n                  <FormGroup row>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/Movies\"><Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large' onClick={clickedUpdate}></Button></Link>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/Movies\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} size='large' variant=\"contained\"></Button></Link>\r\n                 </FormGroup>    \r\n                </FormGroup>\r\n            }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMovieComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Utils from './Utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction EditMemberComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [editMember, setEditMember] = useState(\"\")\r\n\r\n    const clickedUpdate = () =>\r\n    {\r\n        let MemberObjToMembers = {id : props.match.params.id , data : {Name : name, Email : email, City : city}}\r\n        let MemberObjToServer = {Name : name, Email : email, City : city}\r\n        let MembersArray = members\r\n        let MemberIndex = members.findIndex(x => x.id == MemberObjToMembers.id )\r\n        if(MemberIndex >= 0 )\r\n        {\r\n          MembersArray[MemberIndex] = MemberObjToMembers\r\n          setMembers(MembersArray)\r\n          Utils.updateServer('Members', MemberObjToMembers.id, MemberObjToServer)\r\n        }\r\n    }\r\n\r\n    const form = () => \r\n    {\r\n      let memberIndex = members.findIndex(x => x.id == props.match.params.id )\r\n      if(memberIndex >= 0 )\r\n      {\r\n        setEditMember(members[memberIndex])\r\n        setName(members[memberIndex].data.Name)\r\n        setEmail(members[memberIndex].data.Email)\r\n        setCity(members[memberIndex].data.City)\r\n      }     \r\n    }\r\n\r\n    useEffect(() => {\r\n      form()\r\n    },[])\r\n   \r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                <FormGroup className={classes.paper}>   \r\n                    <h3>Edit Member : {name}</h3>\r\n                    Name :  <TextField variant=\"outlined\" placeholder={name} onChange={e =>setName(e.target.value)}/><br/>\r\n                    Email : &nbsp;<TextField variant=\"outlined\" placeholder={email} onChange={e =>setEmail(e.target.value)}/><br/>\r\n                    City : &nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" placeholder={city} onChange={e =>setCity(e.target.value)}/><br/>\r\n                  <br/>\r\n                    <FormGroup row>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Link style={{ textDecoration: 'none' }} to=\"/Subscriptions\"><Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large' onClick={clickedUpdate}></Button></Link> \r\n                        <Link style={{ textDecoration: 'none' }} to=\"/Subscriptions\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size='large'></Button></Link>\r\n                    </FormGroup>\r\n                </FormGroup>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMemberComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport Utils from './Utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\n\r\nfunction EditUserComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [users, setUsers] = useContext(UsersContext);\r\n    const [editUser, setEditUser] = useState(\"\")\r\n    \r\n    const [fname, setFName] = useState(\"\")\r\n    const [lname, setLName] = useState(\"\")\r\n    const [userName, setUserName] = useState(\"\")\r\n    const [sessionTimeOut, setSessionTimeOut] = useState(0)\r\n\r\n    const [viewSubscription, setViewSubscription] = useState(\"\")\r\n    const [createSubscription, setCreateSubscription] = useState(\"\");\r\n    const [deleteSubscription, setDeleteSubscription] = useState(\"\")\r\n    const [updateSubscription, setUpdateSubscription] = useState(\"\")\r\n    const [viewMovies, setViewMovies] = useState(\"\")\r\n    const [createMovies, setCreateMovies] = useState(\"\")\r\n    const [deleteMovies, setDeleteMovies] = useState(\"\")\r\n    const [updateMovies, setUpdateMovies] = useState(\"\")\r\n\r\n\r\n    const assignCheckBoxses = () =>\r\n    {\r\n        if(editUser != \"\")\r\n        {                \r\n            editUser.data.Permissions.forEach(item =>\r\n            {\r\n                switch(item) {\r\n                    case 'Delete Movies': \r\n                    setDeleteMovies(\"Delete Movies\")\r\n                    break;\r\n                \r\n                    case 'Create Movies':  \r\n                    setCreateMovies(\"Create Movies\")\r\n                    break;\r\n\r\n                    case 'Update Movies':  \r\n                    setUpdateMovies(\"Update Movies\")\r\n                    break;\r\n                \r\n                    case 'View Movies':  \r\n                    setViewMovies(\"View Movies\")\r\n                    break;\r\n\r\n                    case 'Create Subscription': \r\n                    setCreateSubscription(\"Create Subscription\")\r\n                    break;\r\n                \r\n                    case 'Delete Subscription': \r\n                    setDeleteSubscription(\"Delete Subscription\")\r\n                    break;\r\n\r\n                    case 'Update Subscription': \r\n                    setUpdateSubscription(\"Update Subscription\")\r\n                    break;\r\n                \r\n                    case 'View Subscription':  \r\n                    setViewSubscription(\"View Subscription\")\r\n                    break;\r\n                \r\n                    default:\r\n                    //code here\r\n                    break;\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const clickedUpdate = () =>\r\n    {\r\n        let permissionsObj = []\r\n        if(viewSubscription != \"\")\r\n        permissionsObj.push(viewSubscription)\r\n        \r\n        if(createSubscription != \"\")\r\n        permissionsObj.push(createSubscription)\r\n        \r\n        if(deleteSubscription != \"\")\r\n        permissionsObj.push(deleteSubscription)\r\n\r\n        if(updateSubscription != \"\")\r\n        permissionsObj.push(updateSubscription)\r\n\r\n        if(viewMovies != \"\")\r\n        permissionsObj.push(viewMovies)\r\n\r\n        if(createMovies != \"\")\r\n        permissionsObj.push(createMovies)\r\n\r\n        if(deleteMovies != \"\")\r\n        permissionsObj.push(deleteMovies)\r\n\r\n        if(updateMovies != \"\")\r\n        permissionsObj.push(updateMovies)\r\n\r\n        let UserToUsers = {id : props.match.params.id , data : {FirstName : fname, LastName : lname, UserName : userName, SessionTimeOut : sessionTimeOut, CreatedDate : editUser.data.CreatedDate, Permissions : permissionsObj}}\r\n        let UserObjToServer = {FirstName : fname, LastName : lname, UserName : userName, SessionTimeOut : sessionTimeOut, CreatedDate : editUser.data.CreatedDate, Permissions : permissionsObj}\r\n        let UsersArray = users\r\n        let UserIndex = users.findIndex(x => x.id == UserToUsers.id )\r\n        if(UserIndex >= 0 )\r\n        {\r\n            UsersArray[UserIndex] = UserToUsers\r\n            setUsers(UsersArray)\r\n             Utils.updateServer('Users', UserToUsers.id, UserObjToServer)\r\n        }\r\n    }\r\n\r\n    const form = () => \r\n    {\r\n      let userIndex = users.findIndex(x => x.id == props.match.params.id )\r\n      if(userIndex >= 0 )\r\n      {\r\n        setEditUser(users[userIndex])\r\n        setFName(users[userIndex].data.FirstName)\r\n        setLName(users[userIndex].data.LastName)\r\n        setUserName(users[userIndex].data.UserName)\r\n        setSessionTimeOut(users[userIndex].data.SessionTimeOut)\r\n      }     \r\n    }\r\n\r\n    useEffect(() => {\r\n      form()\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        assignCheckBoxses()\r\n      },[editUser])\r\n\r\n\r\n      useEffect(() =>\r\n    {\r\n        if(createSubscription != \"\" && deleteSubscription != \"\" && updateSubscription != \"\")\r\n        {\r\n            setViewSubscription(\"View Subscription\")\r\n        }\r\n        else\r\n        {\r\n            setViewSubscription(\"\")\r\n        }\r\n    },[createSubscription, deleteSubscription, updateSubscription])\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(createMovies != \"\" && deleteMovies != \"\" && updateMovies != \"\")\r\n        {\r\n            setViewMovies(\"View Movies\")\r\n        }\r\n        else\r\n        {\r\n            setViewMovies(\"\")\r\n        }\r\n    },[createMovies, deleteMovies, updateMovies])\r\n\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                <FormGroup className={classes.paper}>\r\n                    <h3>Edit User : {props.match.params.name}</h3>\r\n                \r\n                    First Name:<TextField required id=\"outlined-basic\" placeholder={editUser && editUser.data.FirstName} onChange={e =>setFName(e.target.value)} variant=\"outlined\"/><br/>\r\n                    Last Name:<TextField required id=\"outlined-basic\" placeholder={editUser && editUser.data.LastName} onChange={e =>setLName(e.target.value)} variant=\"outlined\" /><br/>\r\n                    User Name:<TextField required id=\"outlined-basic\" placeholder={editUser && editUser.data.UserName} onChange={e =>setUserName(e.target.value)} variant=\"outlined\" /><br/>\r\n                    Session time out (Minuts):\r\n                    <TextField required id=\"outlined-basic\" placeholder={editUser && editUser.data.SessionTimeOut} onChange={e =>setSessionTimeOut(e.target.value)} variant=\"outlined\" /><br/>\r\n                    Created date : {editUser && editUser.data.CreatedDate.toDate().toString()}<br/>\r\n                    <h3>Permissions :</h3>\r\n                    <FormGroup row>\r\n                        <FormControlLabel control={<Checkbox checked={viewSubscription} onChange={e => {if(e.target.checked){setViewSubscription(e.target.name)}else{setViewSubscription(\"\")}}} size=\"small\"/>}label=\"View Subscription\" name=\"View Subscription\"/>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <FormControlLabel control={<Checkbox checked={createSubscription} onChange={e => {if(e.target.checked){setCreateSubscription(e.target.name)}else{setCreateSubscription(\"\")}}} size=\"small\"/>}label=\"Create Subscription\" name=\"Create Subscription\"/>\r\n                        <FormControlLabel control={<Checkbox checked={deleteSubscription} onChange={e => {if(e.target.checked){setDeleteSubscription(e.target.name)}else{setDeleteSubscription(\"\")}}} size=\"small\"/>}label=\"Delete Subscription\" name=\"Delete Subscription\"/>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <FormControlLabel control={<Checkbox checked={updateSubscription} onChange={e => {if(e.target.checked){setUpdateSubscription(e.target.name)}else{setUpdateSubscription(\"\")}}} size=\"small\"/>}label=\"Update Subscription\" name=\"Update Subscription\"/>\r\n                        <FormControlLabel control={<Checkbox checked={viewMovies} onChange={e => {if(e.target.checked){setViewMovies(e.target.name)}else{setViewMovies(\"\")}}} size=\"small\"/>}label=\"View Movies\" name=\"View Movies\"/>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\r\n                        <FormControlLabel control={<Checkbox checked={createMovies} onChange={e => {if(e.target.checked){setCreateMovies(e.target.name)}else{setCreateMovies(\"\")}}} size=\"small\"/>}label=\"Create Movies\" name=\"Create Movies\"/>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <FormControlLabel control={<Checkbox checked={deleteMovies} onChange={e => {if(e.target.checked){setDeleteMovies(e.target.name)}else{setDeleteMovies(\"\")}}} size=\"small\"/>}label=\"Delete Movies\" name=\"Delete Movies\"/>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <FormControlLabel control={<Checkbox checked={updateMovies} onChange={e => {if(e.target.checked){setUpdateMovies(e.target.name)}else{setUpdateMovies(\"\")}}} size=\"small\"/>}label=\"Update Movies\" name=\"Update Movies\"/>\r\n                    </FormGroup>\r\n                    \r\n                <Grid container direction=\"row\" justify=\"center\" >\r\n                    <Grid item>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/UsersManagment\"><Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large' onClick={clickedUpdate}></Button></Link>\r\n                    </Grid>\r\n                     <Grid item>\r\n                        <Link style={{ textDecoration: 'none' }} to=\"/UsersManagment\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} size='large' variant=\"contained\"></Button></Link> \r\n                    </Grid>\r\n                </Grid> \r\n            </FormGroup>\r\n        </Grid>\r\n            \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default EditUserComp;\r\n\r\n","import {useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport {LogInContext} from './LogInContaxtApi'\r\nimport Utils from './Utils'\r\n\r\n\r\nfunction UserComp(props)\r\n{\r\n    const [users, setUsers] = useContext(UsersContext); \r\n    const {logInUsers} = useContext(LogInContext)\r\n    const [logInUsersVar,setLogInUsersVar] = logInUsers\r\n\r\n    const deleteUser = () =>\r\n    {\r\n        let currentUsersArray = users\r\n        let usersArrayAfterDelete = currentUsersArray.filter(x => x.id != props.userDetails.id)\r\n        setUsers(usersArrayAfterDelete)\r\n        Utils.deleteDataFromServer(\"Users\", props.userDetails.id)\r\n\r\n\r\n        let currentUsersLoginArray = logInUsersVar\r\n        let usersLoginArrayAfterDelete = currentUsersLoginArray.filter(x => x.id != props.userDetails.id)\r\n        setLogInUsersVar(usersLoginArrayAfterDelete)\r\n        Utils.deleteDataFromServer(\"UsersLogin\", props.userDetails.id)\r\n    }\r\n\r\n    const clickedDelete = () =>\r\n    {\r\n        confirmAlert({\r\n            title: 'Are you sure you want to delete User:',  // Title dialog\r\n            message: props.userDetails.data.FirstName,               // Message dialog\r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => deleteUser()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n   \r\n       return(\r\n        <div>\r\n            Name :  {props.userDetails.data.FirstName}  {props.userDetails.data.LastName}<br/>\r\n            User Name : {props.userDetails.data.UserName}<br/>\r\n            Session time out (Minuts) : {props.userDetails.data.SessionTimeOut}<br/>\r\n            Created date : {props.userDetails.data && props.userDetails.data.CreatedDate.toDate().toString()}<br/>\r\n            Permissions:\r\n            <ul>\r\n                {props.userDetails.data.Permissions && props.userDetails.data.Permissions.map((item,index) => {return <li key={index}>{item}</li>})}\r\n            </ul>\r\n            <Grid container direction=\"row\" justify=\"center\" >\r\n                <Grid item>\r\n                    <Link to={`/UsersManagment/Edit/${props.userDetails.id}`} style={{ textDecoration: 'none' }}><Button style={{textTransform: 'none'}} startIcon={<EditIcon />} size='large' variant=\"contained\"></Button></Link>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={{textTransform: 'none'}} variant=\"contained\" startIcon={<DeleteIcon />} size='large' onClick={clickedDelete}></Button> \r\n                </Grid>\r\n            </Grid> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserComp;\r\n\r\n","import {useState, useEffect, useRef, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport {LogInContext} from './LogInContaxtApi'\r\nimport Utils from './Utils'\r\n\r\n\r\nfunction AddUserComp(params)\r\n{\r\n    const [fname, setFName] = useState(\"\")\r\n    const [lname, setLName] = useState(\"\")\r\n    const [userName, setUserName] = useState(\"\")\r\n    const [sessionTimeOut, setSessionTimeOut] = useState(0)\r\n    const [newUsersId, setNewUsersId] = useState(\"\")\r\n    const [newUsersLoginId, setNewUsersLoginId] = useState(\"\")\r\n    const [pressed, setPressed] = useState(false)\r\n    const [pressed2, setPressed2] = useState(false)\r\n    const [permissions, setPermissions] = useState([])\r\n    const [viewSubscription, setViewSubscription] = useState(\"\")\r\n    const [createSubscription, setCreateSubscription] = useState(\"\");\r\n    const [deleteSubscription, setDeleteSubscription] = useState(\"\")\r\n    const [updateSubscription, setUpdateSubscription] = useState(\"\")\r\n    const [viewMovies, setViewMovies] = useState(\"\")\r\n    const [createMovies, setCreateMovies] = useState(\"\")\r\n    const [deleteMovies, setDeleteMovies] = useState(\"\")\r\n    const [updateMovies, setUpdateMovies] = useState(\"\")\r\n    const [users, setUsers] = useContext(UsersContext);\r\n    const {logInUsers} = useContext(LogInContext)\r\n    const [logInUsersVar,setLogInUsersVar] = logInUsers\r\n\r\n    const clickedSave = async () =>\r\n    {\r\n        let permissionsObj = []\r\n        if(viewSubscription != \"\")\r\n        permissionsObj.push(viewSubscription)\r\n        \r\n        if(createSubscription != \"\")\r\n        permissionsObj.push(createSubscription)\r\n        \r\n        if(deleteSubscription != \"\")\r\n        permissionsObj.push(deleteSubscription)\r\n\r\n        if(updateSubscription != \"\")\r\n        permissionsObj.push(updateSubscription)\r\n\r\n        if(viewMovies != \"\")\r\n        permissionsObj.push(viewMovies)\r\n\r\n        if(createMovies != \"\")\r\n        permissionsObj.push(createMovies)\r\n\r\n        if(deleteMovies != \"\")\r\n        permissionsObj.push(deleteMovies)\r\n\r\n        if(updateMovies != \"\")\r\n        permissionsObj.push(updateMovies)\r\n        setPermissions(permissionsObj)\r\n\r\n\r\n        let userObj = {FirstName : fname, LastName : lname, UserName : userName, SessionTimeOut : sessionTimeOut, CreatedDate : new Date(), Permissions : permissionsObj}\r\n        let userLoginObj = {UserName : userName, Password : \"\"}\r\n        let res = await Utils.sendDataToServer(\"Users\", userObj)\r\n        setNewUsersId(res.id)\r\n\r\n        let result = await Utils.sendDataToServer(\"UsersLogin\", userLoginObj)\r\n        setNewUsersLoginId(result.id)\r\n        params.clickedAllUsers()\r\n    }\r\n\r\n    const initialRender = useRef(true);\r\n    useEffect( async () =>\r\n    {\r\n        if(initialRender.current){\r\n            initialRender.current = false;\r\n        }else{\r\n                let res = await Utils.getDataFromServer(\"Users\")\r\n                setUsers(res)\r\n                setPressed(true)\r\n            }\r\n    },[newUsersId])\r\n\r\n    const initialRender2 = useRef(true);\r\n    useEffect( async () =>\r\n    {\r\n        if(initialRender2.current){\r\n            initialRender2.current = false;\r\n        }else{\r\n                let res = await Utils.getDataFromServer(\"UsersLogin\")\r\n                setLogInUsersVar(res)\r\n                setPressed2(true)\r\n            }\r\n    },[newUsersLoginId])\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(createSubscription != \"\" && deleteSubscription != \"\" && updateSubscription != \"\")\r\n        {\r\n            setViewSubscription(\"View Subscription\")\r\n        }\r\n    },[createSubscription, deleteSubscription, updateSubscription])\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(createMovies != \"\" && deleteMovies != \"\" && updateMovies != \"\")\r\n        {\r\n            setViewMovies(\"View Movies\")\r\n        }\r\n    },[createMovies, deleteMovies, updateMovies])\r\n\r\n       return(\r\n        <div>\r\n             <FormGroup>\r\n                First Name:<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setFName(e.target.value)}/><br/>\r\n                Last Name:<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setLName(e.target.value)}/><br/>\r\n                User Name:<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setUserName(e.target.value)}/><br/>\r\n                Session time out (Minuts):\r\n                <TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setSessionTimeOut(e.target.value)}/>\r\n                <h3>Permissions :</h3>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n                <FormControlLabel control={<Checkbox checked={viewSubscription} onChange={e => {if(e.target.checked){setViewSubscription(e.target.name)}else{setViewSubscription(\"\")}}} size=\"small\"/>}label=\"View Subscription\" name=\"View Subscription\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp;         \r\n                <FormControlLabel control={<Checkbox onChange={e => {if(e.target.checked){setCreateSubscription(e.target.name)}else{setCreateSubscription(\"\")}}} size=\"small\"/>}label=\"Create Subscription\" name=\"Create Subscription\"/>\r\n                <FormControlLabel control={<Checkbox onChange={e => {if(e.target.checked){setDeleteSubscription(e.target.name)}else{setDeleteSubscription(\"\")}}} size=\"small\"/>}label=\"Delete Subscription\" name=\"Delete Subscription\"/>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n                <FormControlLabel control={<Checkbox onChange={e => {if(e.target.checked){setUpdateSubscription(e.target.name)}else{setUpdateSubscription(\"\")}}} size=\"small\"/>}label=\"Update Subscription\" name=\"Update Subscription\"/>\r\n                <FormControlLabel control={<Checkbox checked={viewMovies} onChange={e => {if(e.target.checked){setViewMovies(e.target.name)}else{setViewMovies(\"\")}}} size=\"small\"/>}label=\"View Movies\" name=\"View Movies\"/>\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <FormControlLabel control={<Checkbox onChange={e => {if(e.target.checked){setCreateMovies(e.target.name)}else{setCreateMovies(\"\")}}} size=\"small\"/>}label=\"Create Movies\" name=\"Create Movies\"/>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n                <FormControlLabel control={<Checkbox onChange={e => {if(e.target.checked){setDeleteMovies(e.target.name)}else{setDeleteMovies(\"\")}}} size=\"small\"/>}label=\"Delete Movies\" name=\"Delete Movies\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <FormControlLabel control={<Checkbox onChange={e => {if(e.target.checked){setUpdateMovies(e.target.name)}else{setUpdateMovies(\"\")}}} size=\"small\"/>}label=\"Update Movies\" name=\"Update Movies\"/>\r\n            </FormGroup>\r\n                \r\n            <Grid container direction=\"row\" justify=\"center\" >\r\n                <Grid item>\r\n                    <Button style={{textTransform: 'none'}} startIcon={<SaveIcon />} variant=\"contained\" size='large' onClick={clickedSave}></Button> \r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size='large' onClick={() => params.clickedAllUsers()}></Button> \r\n                </Grid>\r\n            </Grid> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUserComp;\r\n\r\n","import {useState, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport UserComp from './UserComp'\r\nimport AddUserComp from './AddUserComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {UsersContext} from './UsersContaxtApi'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(5),     \r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction SubscriptionsComp()\r\n{\r\n    const classes = useStyles()\r\n    const [allUsersButtonColor,setAllUsersButtonColor] = useState(\"primary\")\r\n    const [addUserButtonColor,setAddUserButtonColor] = useState(\"\")\r\n    const [allUsersPage, setAllUsersPage] = useState(true)\r\n    const [addUserPage, setAddUserPage] = useState(false)\r\n    const [users, setUsers] = useContext(UsersContext);\r\n\r\n\r\n    const clickedAllUsers = () => \r\n    {\r\n        setAddUserButtonColor(\"\")\r\n        setAllUsersButtonColor(\"primary\")\r\n        setAllUsersPage(true)\r\n        setAddUserPage(false)\r\n    }\r\n\r\n    const clickedAddUser = () => \r\n    {\r\n        setAllUsersButtonColor(\"\")\r\n        setAddUserButtonColor(\"primary\")\r\n        setAllUsersPage(false)\r\n        setAddUserPage(true)\r\n    }\r\n\r\n       return(\r\n        <div >\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid  item >\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Users Managment\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item >\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={allUsersButtonColor} onClick={clickedAllUsers}>All Users</Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={addUserButtonColor} onClick={clickedAddUser}>Add User</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"center\"> \r\n                    {allUsersPage && users && users.map((item,index) => {return <div><Grid item className={classes.paper}><UserComp userDetails={item}/></Grid><br/></div>})}\r\n                    {addUserPage && <Grid item className={classes.paper}><AddUserComp clickedAllUsers={clickedAllUsers}/></Grid>}\r\n                </Grid>\r\n           </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsComp;\r\n\r\n","import {useState, useContext} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {LogInContext} from './LogInContaxtApi'\r\nimport Utils from './Utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction CreateAccountComp() \r\n{\r\n    const classes = useStyles()\r\n    const {logInUsers} = useContext(LogInContext)\r\n    const [logInUsersVar,setLogInUsersVar] = logInUsers\r\n    const [user,setUser] = useState(\"\")\r\n    const [pass,setPass] = useState(\"\")\r\n    const [isLogInFailed, setIsLogInFailed] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const ClickedCreated = () =>\r\n    {\r\n        let logedUser = logInUsersVar.find(x => x.data.UserName == user)\r\n        if(logedUser)\r\n        {\r\n            let newUserObjToServer = {UserName : logedUser.data.UserName, Password : pass}\r\n            let newUserObjToUsersLogin = {id : logedUser.id, data : {UserName : logedUser.data.UserName, Password : pass}}\r\n            Utils.updateServer('UsersLogin', logedUser.id, newUserObjToServer)\r\n            let currentUsersLogin = logInUsersVar\r\n            currentUsersLogin.push(newUserObjToUsersLogin)\r\n            setLogInUsersVar(currentUsersLogin)\r\n            history.push('/LogIn')\r\n        }\r\n        else\r\n        {\r\n            setIsLogInFailed(true)\r\n            setUser(\"\")\r\n            setPass(\"\")\r\n        }\r\n    }\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n            {\r\n            <FormGroup className={classes.paper}>\r\n                       <h2>Create an Account</h2>\r\n                <TextField required id=\"outlined-basic\" label=\"User Name\" variant=\"outlined\" value={user} onChange={e => setUser(e.target.value)}/><br/><br/>\r\n                <TextField required  id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" value={pass} onChange={e => setPass(e.target.value)}/><br/><br/>\r\n            <Grid container direction=\"row\" justify=\"center\" >\r\n            <Grid item>\r\n                {isLogInFailed && <h3>Failed To Create!</h3>}\r\n                {isLogInFailed && <h3>To Create An Account the User Must</h3>} \r\n                {isLogInFailed && <h3>be created in the system by the Admin</h3>}\r\n            </Grid>\r\n                <Grid item>\r\n                    <Button style={{textTransform: 'none'}} variant=\"contained\" size='large' onClick={ClickedCreated}>Create</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/LogIn\"><Button style={{textTransform: 'none'}}  size='large' variant=\"contained\">Cancel</Button></Link>\r\n                </Grid>\r\n            </Grid>\r\n            </FormGroup>\r\n            }\r\n          </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateAccountComp;\r\n\r\n","import {useState, useContext} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useHistory} from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {LogInContext} from './LogInContaxtApi'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    link: {\r\n        textDecoration: 'none',\r\n      },\r\n    button: {\r\n        color : 'white'\r\n      },\r\n      paper: {\r\n        padding: theme.spacing(3),\r\n        borderColor : 'black',\r\n        borderStyle: 'solid',\r\n        borderWidth: '2px',\r\n      },\r\n  }));\r\n\r\nfunction LoginComp()\r\n{\r\n    const classes = useStyles();\r\n    const [user,setUser] = useState(\"\")\r\n    const [pass,setPass] = useState(\"\")\r\n    const [isLogInFailed, setIsLogInFailed] = useState(false)\r\n    const history = useHistory()\r\n    const {isLogedIn, logInUsers, logInUser, isAdmin } = useContext(LogInContext)\r\n\r\n    const [isLogedInVar,setIsLogedInVar] = isLogedIn\r\n    const [logInUsersVar,setLogInUsersVar] = logInUsers\r\n    const [logInUserVar,setLogInUserVar] = logInUser\r\n    const [isAdminVar,setIsAdminVar] = isAdmin\r\n\r\n    const clickedLogin = () =>\r\n    {\r\n        let logedUser = logInUsersVar.find(x => x.data.UserName == user && x.data.Password == pass)\r\n        if(logedUser)\r\n        {\r\n            let LogedInUser = {user: user , pass : pass}\r\n            setLogInUserVar(LogedInUser)\r\n            if(user == 'orisha')\r\n            {\r\n                setIsAdminVar(true)\r\n            }\r\n            else\r\n            {\r\n                setIsAdminVar(false)\r\n            }\r\n            history.push('/')\r\n            setIsLogedInVar(true)\r\n            setIsLogInFailed(false)\r\n        }\r\n        else\r\n        {\r\n            setIsLogInFailed(true)\r\n            setUser(\"\")\r\n            setPass(\"\")\r\n        }\r\n    }\r\n\r\n    const clickedNewAccount = () =>\r\n    {\r\n        history.push('/NewAccount')\r\n    }\r\n\r\n       return(\r\n        <div> \r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                        <FormGroup className={classes.paper}>\r\n                            <h2>Welcome To The Log In Page</h2>\r\n                            <TextField required id=\"outlined-basic\" label=\"User Name\" variant=\"outlined\" value={user} onChange={e => setUser(e.target.value)}/><br/>\r\n                            <TextField required  id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" value={pass} onChange={e => setPass(e.target.value)}/><br/>\r\n                            <Grid container direction=\"row\" justify=\"center\" >\r\n                                <Grid item>\r\n                                    <Button style={{textTransform: 'none'}} variant=\"contained\" onClick={clickedLogin}>Login</Button>\r\n                                </Grid>\r\n                                <Grid item container direction=\"column\" alignItems=\"center\"><br/>\r\n                                <Grid item>\r\n                                    {isLogInFailed && <h3>Failed To LogIn!</h3>}\r\n                                    {isLogInFailed && <h3>User or Password are Incorrect</h3>} \r\n                                    {isLogInFailed && <h3>please try again</h3>}\r\n                                </Grid>\r\n                                    Don't have an account yet? \r\n                                <Button style={{textTransform: 'none'}} variant=\"contained\" onClick={clickedNewAccount}>Create A New Account</Button>\r\n                            </Grid>\r\n                            </Grid>\r\n                        </FormGroup>       \r\n                    </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginComp;\r\n\r\n","\r\nfunction EntryComp()\r\n{\r\n    \r\n       return(\r\n        <div> \r\n           <img src=\"https://zigzorg.com/wp-content/uploads/2015/12/Collage-Movies-5-50p.jpg\" width=\"1500\" height=\"1000\" \r\n                    style={{display:\"block\",  marginLeft:\"auto\",  marginRight:\"auto\"}}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EntryComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link, Switch,Route, useHistory} from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Utils from './Utils'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport { MoviesContext } from \"./MoviesContaxtApi\";\r\nimport {MembersContext} from './MembersContextApi'\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport {LogInContext} from './LogInContaxtApi'\r\nimport { SubscriptionsContext } from './SubscriptionsContaxtApi'\r\nimport SubscriptionsComp from './SubscriptionsComp'\r\nimport MoviesComp from './MoviesComp'\r\nimport MovieComp from './MovieComp'\r\nimport EditMovieComp from './EditMovieComp'\r\nimport EditMemberComp from './EditMemberComp'\r\nimport EditUserComp from './EditUserComp'\r\nimport MemberComp from './MemberComp'\r\nimport UserManagmentComp from './UsersManagmentComp'\r\nimport CreateAccountComp from './CreatAccountComp'\r\nimport LoginComp from './LoginComp'\r\nimport EntryComp from './EntryComp'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appbar: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n      },\r\n    button: {\r\n        color : 'white'\r\n      },\r\n      paper: {\r\n        padding: theme.spacing(3),\r\n        borderColor : 'black',\r\n        borderStyle: 'solid',\r\n        borderWidth: '2px',\r\n      },\r\n  }));\r\n\r\nfunction MainComp()\r\n{\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n    const {isLogedIn, logInUsers, logInUser , isAdmin} = useContext(LogInContext)\r\n\r\n    const [isLogedInVar,setIsLogedInVar] = isLogedIn\r\n    const [logInUsersVar,setLogInUsersVar] = logInUsers\r\n    const [logInUserVar,setLogInUserVar] = logInUser\r\n    const [isAdminVar,setIsAdminVar] = isAdmin\r\n\r\n    const [movies, setMovies] = useContext(MoviesContext)\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [users, setUsers] = useContext(UsersContext);\r\n    const [subscriptions, setSubscriptions] = useContext(SubscriptionsContext);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    \r\n    const logingOut = () =>\r\n    {\r\n        setLogInUserVar(\"\")\r\n        setIsLogedInVar(false)\r\n        history.push('/LogIn')\r\n    }\r\n\r\n    const clickedLogOut = () =>\r\n    {\r\n        handleClose()\r\n        confirmAlert({\r\n            title: 'Are you sure you want to Log Out?',                \r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => logingOut()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n\r\n    const getUsers = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Users\")\r\n        setUsers(res)\r\n    }\r\n\r\n    const getMovies = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Movies\")\r\n        setMovies(res)\r\n    }\r\n\r\n    const getMembers = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Members\")\r\n        setMembers(res)\r\n    }\r\n\r\n    const getSubscriptions = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Subscriptions\")\r\n        setSubscriptions(res)\r\n    }\r\n\r\n    const getUsersLogin = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"UsersLogin\")\r\n        setLogInUsersVar(res)\r\n    }\r\n\r\n    useEffect( async () => {\r\n        getMovies()\r\n        getMembers()\r\n        getUsers()\r\n        getSubscriptions()\r\n        getUsersLogin()\r\n        setIsLogedInVar(false)\r\n    },[])\r\n   \r\n       return(\r\n        <div >\r\n           <AppBar position=\"sticky\" className={classes.appbar}>\r\n          <Toolbar >\r\n              <Grid container direction=\"row\" justify=\"center\" spacing={5}>\r\n                    <Grid item>\r\n                       {isLogedInVar \r\n                        ? <Link to=\"/Movies\" className={classes.link}><Button className={classes.button} >Movies</Button></Link>\r\n                        : <Link to=\"/LogIn\" className={classes.link}><Button className={classes.button} >Log In</Button></Link> \r\n                       }\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {isLogedInVar \r\n                            ? <Link to=\"/Subscriptions\" className={classes.link}><Button className={classes.button}>Subscriptions</Button></Link>\r\n                            : <Link to=\"/NewAccount\" className={classes.link}><Button className={classes.button}>Sign In</Button></Link>\r\n                        }\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {isAdminVar && isLogedInVar && <Link to=\"/UsersManagment\" className={classes.link}><Button className={classes.button}>User Managment</Button></Link>}\r\n                    </Grid>\r\n                    <Grid item>\r\n                    {isLogedInVar && \r\n                                <div>\r\n                                    <IconButton aria-label=\"account of current user\" aria-controls=\"menu-appbar\" aria-haspopup=\"true\" onClick={handleMenu} color=\"inherit\">\r\n                                        <AccountCircle />\r\n                                    </IconButton>\r\n                                    <Menu id=\"menu-appbar\" anchorEl={anchorEl} anchorOrigin={{vertical: 'top',horizontal: 'right',}} keepMounted \r\n                                                transformOrigin={{vertical: 'top',horizontal: 'right',}} open={open} onClose={handleClose}>\r\n                                        <MenuItem onClick={handleClose}>{logInUserVar.user}</MenuItem>\r\n                                        <MenuItem onClick={clickedLogOut} >Log Out</MenuItem>\r\n                                    </Menu>\r\n                                </div>\r\n                    }\r\n                    </Grid>\r\n                </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={EntryComp}/>    \r\n            <Route path=\"/LogIn\" component={LoginComp}/>   \r\n            <Route path=\"/NewAccount\" component={CreateAccountComp}/>\r\n            <Route path=\"/Movies/Edit/:id\" component={EditMovieComp}/>\r\n            <Route path=\"/Movies\" component={MoviesComp}/>\r\n            <Route path=\"/Movie/:id\" component={MovieComp}/>\r\n            <Route path=\"/Member/:id\" component={MemberComp}/>\r\n            <Route path=\"/Subscriptions/Edit/:id\" component={EditMemberComp}/>\r\n            <Route path=\"/Subscriptions\" component={SubscriptionsComp}/>\r\n            <Route path=\"/UsersManagment/Edit/:id\" component={EditUserComp}/>\r\n            <Route path=\"/UsersManagment\" component={UserManagmentComp}/>       \r\n        </Switch>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainComp;\r\n\r\n","import {useEffect} from 'react'\r\nimport Utils from './Utils'\r\nimport { MoviesContextProvider } from \"./MoviesContaxtApi\"\r\nimport { MembersContextProvider } from './MembersContextApi'\r\nimport { UsersContextProvider } from './UsersContaxtApi'\r\nimport { SubscriptionsContextProvider } from './SubscriptionsContaxtApi'\r\nimport { LogInContextProvider } from './LogInContaxtApi'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MainComp from './MainComp'\r\n\r\nfunction WrapperComp()\r\n{\r\n    const loadMembersToServer = async () =>\r\n    {\r\n        let usersUrl = \"https://jsonplaceholder.typicode.com/users\"\r\n        let users = []\r\n        users = await Utils.getAllItems(usersUrl)\r\n\r\n        let usersObj = []\r\n        usersObj = users.map(item => \r\n        {\r\n            return {Name : item.name, Email : item.email, City : item.address.city}\r\n        })\r\n\r\n        usersObj.forEach(x => Utils.sendDataToServer(\"Members\", x))\r\n    }\r\n\r\n    const loadMoviesToServer = async () =>\r\n    {\r\n        let moviesUrl = \"https://api.tvmaze.com/shows\"\r\n        let movies = []\r\n        movies = await Utils.getAllItems(moviesUrl)\r\n\r\n        let moviesObj = []\r\n        moviesObj = movies.map(item => \r\n        {\r\n            return {Title : item.name, date : item.premiered, ImageUrl : item.image.medium, Genres : item.genres}\r\n        })\r\n\r\n        moviesObj.forEach(x => Utils.sendDataToServer(\"Movies\", x))\r\n    }\r\n\r\n    useEffect( async () => {\r\n        //loadMembersToServer()\r\n        //loadMoviesToServer()\r\n    },[])\r\n\r\n       return(\r\n        <div>\r\n             <Typography variant=\"h3\" gutterBottom align=\"center\">\r\n                Movies - Subscription Web Site\r\n            </Typography>\r\n            \r\n            <LogInContextProvider>\r\n            <SubscriptionsContextProvider>\r\n            <UsersContextProvider>\r\n            <MembersContextProvider>\r\n            <MoviesContextProvider>\r\n                <MainComp />\r\n            </MoviesContextProvider>\r\n            </MembersContextProvider>\r\n            </UsersContextProvider>\r\n            </SubscriptionsContextProvider>\r\n            </LogInContextProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WrapperComp;\r\n\r\n","import './App.css';\nimport WrapperComp from './components/WrapperComp'\n\nfunction App() {\n  return (\n    <div >\n      <WrapperComp /> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n <Router>\n    <App />\n    </Router>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}