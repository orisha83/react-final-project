{"version":3,"sources":["components/LoginComp.js","components/MoviesContaxtApi.js","components/SubscriptionsContaxtApi.js","components/MoviesWatchedComp.js","components/MembersContextApi.js","firebase.js","components/Utils.js","components/MemberComp.js","components/AddMemberComp.js","components/SubscriptionsComp.js","components/SubscriptionWatchedComp.js","components/MovieComp.js","components/AddMovieComp.js","components/MoviesComp.js","components/EditMovieComp.js","components/EditMemberComp.js","components/EditUserComp.js","components/UsersContaxtApi.js","components/UserComp.js","components/AddUserComp.js","components/UsersManagmentComp.js","components/MainComp.js","reportWebVitals.js","components/WrapperComp.js","App.js","index.js"],"names":["LoginComp","MoviesContext","createContext","MoviesContextProvider","props","useState","movies","setMovies","Provider","value","children","SubscriptionsContext","SubscriptionsContextProvider","subscriptions","setSubscriptions","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","paper","padding","borderColor","borderStyle","borderWidth","MoviesWatchedComp","classes","useContext","moviesAndDates","setMoviesAndDates","subscribePage","setSubscribePage","setSelectedMovie","filteredMovies","setFilteredMovies","setDate","useEffect","moviesAndDatesArray","subscriptionsForMemberTemp","find","x","data","MemberId","memberId","Movies","forEach","MovieAndDateObj","movieName","item","id","MovieId","Title","date","DateWatched","push","Grid","container","direction","Typography","variant","gutterBottom","align","Button","style","textTransform","onClick","filteredMoviesTemp","filter","className","FormControl","InputLabel","Select","onChange","e","target","map","index","MenuItem","width","height","type","data-date","data-date-format","Link","href","MembersContext","MembersContextProvider","members","setMembers","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","getDataFromServer","collection","a","get","snapshot","DataArr","myData","doc","getSpecificDocFromServer","docId","deleteDataFromServer","delete","response","sendDataToServer","jsonObj","add","getAllItems","url","axios","user","updateServer","set","root","flexGrow","MemberComp","alignItems","memberDetails","Name","Email","City","justify","to","textDecoration","startIcon","size","confirmAlert","title","message","buttons","label","MembersArrayAfterDelete","Utils","deleteMember","AddMemberComp","params","name","setName","email","setEmail","city","setCity","newId","setNewId","setPressed","clickedSave","MemberObj","res","clickedAllMembers","initialRender","useRef","current","MemberObjToMembers","currentMembersArray","FormGroup","TextField","required","SubscriptionsComp","allMembersPage","setAllMembersPage","addMembersPage","setAddMembersPage","allMembersButtonColor","setAllMembersButtonColor","addMembersButtonColor","setAddMembersButtonColor","color","SubscriptionsWatchedComp","variantMapping","MovieComp","movieDetails","Genres","join","src","ImageUrl","SubscriptionWatchedComp","console","log","moviesArrayAfterDelete","deleteMovie","AddMovieComp","setTitle","genres","setGenres","imageUrl","setImageUrl","premierd","setPremierd","genresArry","split","moviesObj","clickedAllMovies","moviesObjtoMovies","currentMoviesArray","MoviesComp","allMoviesButtonColor","setAllMoviesButtonColor","useSearch","setUseSearch","addMoviesButtonColor","setAddMoviesButtonColor","searchWord","setSearchWord","allMoviesPage","setAllMoviesPage","addMoviesPage","setAddMoviesPage","page","toUpperCase","startsWith","placeholder","InputProps","endAdornment","InputAdornment","position","IconButton","EditMovieComp","editMovie","setEditMovie","movieIndex","findIndex","match","form","newGenres","row","moviesObjtoServer","moviesArray","EditMemberComp","setEditMember","memberIndex","MemberObjToServer","MembersArray","MemberIndex","EditUserComp","setChecked","handleChange","event","checked","FormControlLabel","control","Checkbox","UsersContext","UsersContextProvider","users","setUsers","UserComp","userDetails","FirstName","LastName","UserName","SessionTimeOut","CreatedDate","usersArrayAfterDelete","deleteUser","AddUserComp","fname","setFName","lname","setLName","userName","setUserName","sessionTimeOut","setSessionTimeOut","viewSubscription","setViewSubscription","createSubscription","setCreateSubscription","deleteSubscription","setDeleteSubscription","updateSubscription","setUpdateSubscription","viewMovies","setViewMovies","createMovies","setCreateMovies","deleteMovies","setDeleteMovies","updateMovies","setUpdateMovies","permissionsObj","userObj","Date","permissions","clickedAllUsers","allUsersButtonColor","setAllUsersButtonColor","addUserButtonColor","setAddUserButtonColor","allUsersPage","setAllUsersPage","addUserPage","setAddUserPage","appbar","menuButton","marginRight","link","button","MainComp","isAdmin","getUsers","getMovies","getMembers","getSubscriptions","AppBar","Toolbar","path","component","UserManagmentComp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WrapperComp","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56291d05.chunk.js","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\nfunction LoginComp()\r\n{\r\n\r\n       return(\r\n        <div>\r\n            \r\n            <form autoComplete=\"off\">\r\n                <h1>Movies - Subscription Web Site</h1>\r\n                <h3>Log In Page</h3>\r\n                <TextField required id=\"outlined-basic\" label=\"User Name\" variant=\"outlined\" /><br/><br/>\r\n                <TextField required  id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" /><br/><br/>\r\n                <Button variant=\"contained\">Login</Button><br/><br/>\r\n                Don't have an account yet? <Link href=\"#\">Create a New Account</Link>\r\n            </form>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginComp;\r\n\r\n","\r\nimport React, {  createContext, useState } from \"react\";\r\n\r\nexport const MoviesContext = createContext();\r\n\r\n  export const MoviesContextProvider = props => {\r\n    const [movies, setMovies] = useState(\"\")\r\n  \r\n    return (\r\n      <MoviesContext.Provider value={[movies, setMovies]}>\r\n        {props.children}\r\n      </MoviesContext.Provider>\r\n    );\r\n  };","\r\nimport React, {  createContext, useState } from \"react\";\r\n\r\nexport const SubscriptionsContext = createContext();\r\n\r\n  export const SubscriptionsContextProvider = props => {\r\n    const [subscriptions, setSubscriptions] = useState(\"\")\r\n  \r\n    return (\r\n      <SubscriptionsContext.Provider value={[subscriptions, setSubscriptions]}>\r\n        {props.children}\r\n      </SubscriptionsContext.Provider>\r\n    );\r\n  };","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport { SubscriptionsContext } from './SubscriptionsContaxtApi'\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 220\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    }\r\n  }));\r\n\r\nfunction MoviesWatchedComp(props)\r\n{\r\n    const classes = useStyles();\r\n    const [subscriptions, setSubscriptions] = useContext(SubscriptionsContext);\r\n    const [moviesAndDates, setMoviesAndDates] = useState(\"\")\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [subscribePage, setSubscribePage] = useState(false)\r\n    const [selectedMovie, setSelectedMovie] = useState(\"\")\r\n    const [filteredMovies, setFilteredMovies] = useState([])\r\n    const [date, setDate] = useState(\"\")\r\n\r\n    const clickedSubscribeToMovie = () =>\r\n    {\r\n\r\n    }\r\n\r\n    const clickedSubscribe = () =>\r\n    {\r\n        setSubscribePage(true)\r\n        let filteredMoviesTemp = movies.filter(x => x.data.Title != moviesAndDates.movieName)\r\n        setFilteredMovies(filteredMoviesTemp)\r\n    }\r\n\r\n    const handleChange = (e) =>\r\n    {\r\n        setSelectedMovie(e.target.value);\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        let moviesAndDatesArray = []\r\n        let subscriptionsForMemberTemp = subscriptions.find(x => x.data.MemberId == props.memberId)\r\n        if(subscriptionsForMemberTemp)\r\n        {\r\n            let moviesAndDatesWithId = subscriptionsForMemberTemp.data.Movies\r\n            moviesAndDatesWithId.forEach(x => {\r\n            let watchedMovies = movies.find(item => item.id == x.MovieId)\r\n            let MovieAndDateObj = {movieName : watchedMovies.data.Title , date : x.DateWatched}\r\n            moviesAndDatesArray.push(MovieAndDateObj)\r\n            })\r\n            setMoviesAndDates(moviesAndDatesArray)\r\n        }\r\n        \r\n    },[])\r\n\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                    <Typography variant=\"h6\" gutterBottom align=\"center\">\r\n                        Movies Watched\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={{textTransform: 'none'}} variant=\"contained\" onClick={clickedSubscribe}>Subscribe to a new movie</Button>\r\n                </Grid>\r\n                {subscribePage && <div className={classes.paper}><Grid item>Add a New Movie </Grid>\r\n                                        <Grid item container direction=\"row\">\r\n                                            <Grid item>\r\n                                                <FormControl  className={classes.formControl}>\r\n                                                    <InputLabel>Select a Movie</InputLabel>\r\n                                                    <Select onChange={handleChange}>\r\n                                                        {\r\n                                                            filteredMovies.map((item,index) => {\r\n                                                                return <MenuItem key={index} value={item.data.Title}>{item.data.Title}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <input style={{width:\"150px\", height:\"50px\" }} type=\"date\" data-date=\"\" data-date-format=\"DD/MM/YYYY\" value=\"2015-08-09\" onChange={e =>setDate(e.target.value) }/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item><Button style={{textTransform: 'none'}} variant=\"contained\" onClick={clickedSubscribeToMovie}>Subscribe</Button></Grid>\r\n                                </div>\r\n                }\r\n                <Grid item container direction=\"column\">\r\n                <ul>\r\n                {\r\n                 moviesAndDates && moviesAndDates.map((item,index) =>{\r\n                    return <Grid item><li key={index}><Link href=\"#\">{item.movieName}</Link>, {item.date}</li></Grid>\r\n                    })\r\n                }\r\n                </ul>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviesWatchedComp;\r\n\r\n","\r\nimport React, {  createContext, useState } from \"react\";\r\n\r\nexport const MembersContext = createContext();\r\n\r\n  export const MembersContextProvider = props => {\r\n    const [members, setMembers] = useState(\"\")\r\n  \r\n    return (\r\n      <MembersContext.Provider value={[members, setMembers]}>\r\n        {props.children}\r\n      </MembersContext.Provider>\r\n    );\r\n  };","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\n // Your web app's Firebase configuration\r\n var firebaseConfig = {\r\n    apiKey: \"AIzaSyAcrC8WFMcfXI8NVwjNDqL-WzqSmpttCeA\",\r\n    authDomain: \"react-final-project-eba09.firebaseapp.com\",\r\n    databaseURL: \"https://react-final-project-eba09-default-rtdb.firebaseio.com\",\r\n    projectId: \"react-final-project-eba09\",\r\n    storageBucket: \"react-final-project-eba09.appspot.com\",\r\n    messagingSenderId: \"446437310002\",\r\n    appId: \"1:446437310002:web:3dbcf986d210e41d16062b\"\r\n    \r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase","import firebase from '../firebase'\r\nimport axios from 'axios'\r\n\r\nlet firestore = firebase.firestore();\r\n\r\nconst getDataFromServer = async function (collection) \r\n{\r\n    let snapshot = await firestore.collection(collection).get()\r\n    let DataArr = []\r\n    let myData = \"\"\r\n    snapshot.forEach(doc =>{\r\n        myData = {data : doc.data() , id : doc.id}\r\n        DataArr.push(myData)\r\n    })\r\n    return DataArr\r\n}\r\n\r\nconst getSpecificDocFromServer = async function (collection, docId) \r\n{\r\n    let snapshot = firestore.collection(collection).doc(docId)\r\n    let doc = await snapshot.get()\r\n    if(doc){\r\n        return doc.data()\r\n    }\r\n}\r\n\r\nconst deleteDataFromServer = async function (collection, id ) \r\n{\r\n    let response = await firestore.collection(collection).doc(id).delete()\r\n    return response\r\n}\r\n\r\nconst sendDataToServer = async function (collection, jsonObj ) \r\n{\r\n    let response = await firestore.collection(collection).add(jsonObj)\r\n    return response\r\n}\r\n\r\nconst updateServer = function (collection, id , jsonObj ) \r\n{\r\n    firestore.collection(collection).doc(id).set(jsonObj)\r\n}\r\n\r\nconst getAllItems = async function(url)\r\n{\r\n  let user = await axios.get(url)\r\n  return user.data\r\n}\r\n\r\nexport default {sendDataToServer, getDataFromServer, getAllItems, updateServer, deleteDataFromServer, getSpecificDocFromServer};\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport MoviesWatchedComp from './MoviesWatchedComp'\r\nimport {Link} from 'react-router-dom'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport './Main.css'\r\nimport Utils from './Utils'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction MemberComp(props)\r\n{\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const classes = useStyles()\r\n\r\n   const deleteMember = () =>\r\n    {\r\n        let currentMembersArray = members\r\n        let MembersArrayAfterDelete = currentMembersArray.filter(x => x.id != props.memberDetails.id)\r\n        setMembers(MembersArrayAfterDelete)\r\n        Utils.deleteDataFromServer(\"Members\", props.memberDetails.id)\r\n    }\r\n\r\n   const clickedDelete = () =>\r\n    {\r\n        confirmAlert({\r\n            title: 'Are you sure you want to delete Member:',  // Title dialog\r\n            message: props.memberDetails.data.Name,               // Message dialog\r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => deleteMember()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n       return(\r\n       \r\n            <Grid container direction=\"column\" alignItems=\"center\" >\r\n                <Grid item>\r\n                    <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                        {props.memberDetails.data.Name}<br/>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                        Email : {props.memberDetails.data.Email}<br/>\r\n                        City : {props.memberDetails.data.City}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item>\r\n                        <Link to={`/Subscriptions/Edit/${props.memberDetails.id}`} style={{ textDecoration: 'none' }}><Button style={{textTransform: 'none'}} startIcon={<EditIcon />} size=\"large\" variant=\"contained\"></Button></Link>            \r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" size=\"large\" startIcon={<DeleteIcon />} onClick={clickedDelete}></Button> \r\n                    </Grid>\r\n                </Grid>\r\n                <br/>\r\n                <Grid item className={classes.paper}>\r\n                    <MoviesWatchedComp memberId={props.memberDetails.id}/>\r\n                </Grid>\r\n                <br/>\r\n            </Grid>\r\n       \r\n    )\r\n}\r\n\r\nexport default MemberComp;\r\n\r\n","import {useState, useContext, useRef, useEffect} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Utils from './Utils'\r\n\r\nfunction AddMemberComp(params)\r\n{\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [newId, setNewId] = useState(0)\r\n    const [pressed, setPressed] = useState(false)\r\n\r\n    const clickedSave = async () =>\r\n    {\r\n        let MemberObj = {Name : name, Email : email, City : city}\r\n        let res = await Utils.sendDataToServer('Members', MemberObj)\r\n        setNewId(res.id)\r\n        params.clickedAllMembers()\r\n    }\r\n\r\n    const initialRender = useRef(true);\r\n    useEffect(() =>\r\n    {\r\n        if(initialRender.current){\r\n            initialRender.current = false;\r\n        }else{\r\n                let MemberObjToMembers = {id : newId , data : {Name : name, Email : email, City : city}}\r\n                let currentMembersArray = members\r\n                currentMembersArray.push(MemberObjToMembers)\r\n                setMembers(currentMembersArray)\r\n                setPressed(true)\r\n            }\r\n    },[newId])\r\n   \r\n       return(\r\n        <div>\r\n            <br/>\r\n            <FormGroup>\r\n           Name :  <TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setName(e.target.value)}/><br/>\r\n           Email : &nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setEmail(e.target.value)}/><br/>\r\n           City  : &nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setCity(e.target.value)}/><br/>\r\n           </FormGroup>\r\n           <br/>\r\n           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Button style={{textTransform: 'none'}} startIcon={<SaveIcon />} variant=\"contained\" size=\"large\" onClick={clickedSave}></Button> \r\n            <Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size=\"large\" onClick={() => params.clickedAllMembers()}></Button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMemberComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport MemberComp from './MemberComp'\r\nimport AddMemberComp from './AddMemberComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n  /*\r\n  useState([{Name : \"ori shalom\", Email : \"shalom.ori@gmail.com\", City : \"Hod Hasharon\"},\r\n                                            {Name : \"Anat shalom\", Email : \"anatbarer@gmail.com\", City : \"TLV\"}])\r\n                                            */\r\n\r\nfunction SubscriptionsComp()\r\n{\r\n    const classes = useStyles()\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [allMembersPage, setAllMembersPage] = useState(true)\r\n    const [addMembersPage, setAddMembersPage] = useState(false)\r\n    const [allMembersButtonColor,setAllMembersButtonColor] = useState(\"primary\")\r\n    const [addMembersButtonColor,setAddMembersButtonColor] = useState(\"\")\r\n\r\n    const clickedAllMembers = () => \r\n    {\r\n        setAddMembersButtonColor(\"\")\r\n        setAllMembersButtonColor(\"primary\")\r\n        setAllMembersPage(true)\r\n        setAddMembersPage(false)\r\n    }\r\n\r\n    const clickedAddMembers = () => \r\n    {\r\n        setAllMembersButtonColor(\"\")\r\n        setAddMembersButtonColor(\"primary\")\r\n        setAllMembersPage(false)\r\n        setAddMembersPage(true)\r\n    }\r\n\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Subscriptions\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={allMembersButtonColor} onClick={clickedAllMembers}>All Members</Button> \r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={addMembersButtonColor} onClick={clickedAddMembers}>Add Member</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"center\" >\r\n                    {allMembersPage && members && members.map((item,index) => {return <Grid item key={index} className={classes.paper}><MemberComp memberDetails={item}/></Grid>})}\r\n                    {addMembersPage && <div className={classes.paper}><AddMemberComp clickedAllMembers={clickedAllMembers}/></div>}\r\n                </Grid> \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsComp;\r\n\r\n","import {useState, useEffect} from 'react'\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nfunction SubscriptionsWatchedComp()\r\n{\r\n   const [subscriptions, setSubscriptions] = useState([{name : \"Avi Cohen\" , date : \"12/11/1998\"}])\r\n\r\n       return(\r\n        <div>\r\n          <Typography variant=\"h5\" variantMapping=\"h1\" gutterBottom align=\"center\">\r\n                        Subscriptions watched\r\n                    </Typography>\r\n            \r\n            <ul>\r\n              {\r\n                  subscriptions.map((item,index) =>{\r\n                      return <li key={index}><Link href=\"#\">{item.name}</Link>, {item.date}</li>\r\n                  })\r\n              }\r\n            </ul>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsWatchedComp;\r\n\r\n","import {useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport SubscriptionWatchedComp from \"./SubscriptionWatchedComp\"\r\nimport {Link} from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport Utils from './Utils'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction MovieComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n\r\n    const deleteMovie = () =>\r\n    {\r\n        console.log(\"in delete\")\r\n        let currentMoviesArray = movies\r\n        let moviesArrayAfterDelete = currentMoviesArray.filter(x => x.id != props.movieDetails.id)\r\n        setMovies(moviesArrayAfterDelete)\r\n        Utils.deleteDataFromServer(\"Movies\", props.movieDetails.id)\r\n    }\r\n\r\n    const clickedDelete = () =>\r\n    {\r\n        confirmAlert({\r\n            title: 'Are you sure you want to delete the movie:',                        // Title dialog\r\n            message: props.movieDetails.data.Title,               // Message dialog\r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => deleteMovie()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n    //Genres: {props.movieDetails.Genres.join(\", \")}\r\n    \r\n    return(\r\n        \r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                    <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n                    {props.movieDetails.data.Title} , {props.movieDetails.data.date}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                    Genres: {props.movieDetails.data.Genres.join(\", \")}\r\n                    </Typography>\r\n               </Grid>\r\n                <Grid item>    \r\n                </Grid>\r\n                <Grid  container direction=\"row\" justify=\"space-around\" alignItems=\"flex-start\" >\r\n                    <Grid item  >\r\n                        <img src={props.movieDetails.data.ImageUrl} width=\"200\" height=\"300\"/> \r\n                    </Grid>\r\n                    <Grid item  className={classes.paper}>\r\n                        <SubscriptionWatchedComp />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Link to={`/Movies/Edit/${props.movieDetails.id}`} style={{ textDecoration: 'none' }}>\r\n                        <Button style={{textTransform: 'none'}} size='large' startIcon={<EditIcon />} variant=\"contained\"></Button></Link>\r\n                    <Button style={{textTransform: 'none'}} size='large' variant=\"contained\" startIcon={<DeleteIcon />} onClick={clickedDelete}></Button>\r\n                </Grid>\r\n            </Grid>\r\n        \r\n    )\r\n}\r\n\r\nexport default MovieComp;\r\n\r\n","import {useState, useContext, useEffect, useRef} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport Utils from './Utils'\r\n\r\n\r\nconst AddMovieComp = (params) =>\r\n{\r\n    const [title, setTitle] = useState(\"\")\r\n    const [genres, setGenres] = useState(\"\")\r\n    const [imageUrl, setImageUrl] = useState(\"\")\r\n    const [premierd, setPremierd] = useState()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [newId, setNewId] = useState(0)\r\n    const [pressed, setPressed] = useState(false)\r\n\r\n    const clickedSave = async () =>\r\n    {\r\n        let genresArry = genres.split(\" \")\r\n        let moviesObj = {Title : title, date : premierd, ImageUrl : imageUrl, Genres : genresArry}\r\n        let res = await Utils.sendDataToServer('Movies', moviesObj)\r\n        setNewId(res.id)\r\n        params.clickedAllMovies()\r\n    }\r\n\r\n    const initialRender = useRef(true);\r\n    useEffect(() =>\r\n    {\r\n        console.log(\"useEffect - 1\")\r\n        if(initialRender.current){\r\n            console.log(\"useEffect - 2\")\r\n            initialRender.current = false;\r\n        }else{\r\n                console.log(\"useEffect - 3\")\r\n                let genresArry = genres.split(\" \")\r\n                let moviesObjtoMovies = {id : newId , data : {Title : title, date : premierd, ImageUrl : imageUrl, Genres : genresArry}}\r\n                let currentMoviesArray = movies\r\n                currentMoviesArray.push(moviesObjtoMovies)\r\n                setMovies(currentMoviesArray)\r\n                setPressed(true)\r\n            }\r\n    },[newId])\r\n\r\n    return(\r\n        <div>\r\n            <br/>\r\n            <FormGroup>\r\n                Name :  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setTitle(e.target.value)}/><br/>\r\n                Genres : &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" size=\"small\" onChange={e =>setGenres(e.target.value)}/><br/>\r\n                Image URL : <TextField variant=\"outlined\" size=\"small\" onChange={e =>setImageUrl(e.target.value)}/><br/>\r\n                Premierd : &nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" size=\"small\" onChange={e =>setPremierd(e.target.value)}/>\r\n            </FormGroup><br/><br/>\r\n\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Button style={{textTransform: 'none'}} startIcon={<SaveIcon />} size=\"large\" variant=\"contained\" onClick={clickedSave}></Button>  \r\n            <Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size=\"large\" onClick={() => params.clickedAllMovies()}></Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMovieComp;\r\n\r\n","import {useState, useEffect, useContext } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MovieComp from './MovieComp'\r\nimport AddMovieComp from './AddMovieComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { MoviesContext } from \"./MoviesContaxtApi\";\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction MoviesComp()\r\n{\r\n    const [allMoviesButtonColor,setAllMoviesButtonColor] = useState(\"primary\")\r\n    const classes = useStyles()\r\n    const [useSearch, setUseSearch] = useState(true)\r\n    const [addMoviesButtonColor,setAddMoviesButtonColor] = useState(\"\")\r\n    const [searchWord, setSearchWord] = useState(\"\")\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [allMoviesPage, setAllMoviesPage] = useState(true)\r\n    const [addMoviesPage, setAddMoviesPage] = useState(false)\r\n    const [filteredMovies, setFilteredMovies] = useState()\r\n\r\n    let searchChanged =  (e) =>\r\n    {\r\n        setSearchWord(e.target.value.toUpperCase())\r\n    }\r\n\r\n    let page = () =>\r\n    {\r\n        console.log(\"page\")\r\n        let filteredMovies\r\n        if(searchWord != \"\")\r\n        {\r\n            filteredMovies = movies.filter(x => x.data.Title.toUpperCase().startsWith(searchWord))\r\n        }\r\n        else\r\n        {\r\n            filteredMovies = movies\r\n        }\r\n        setFilteredMovies(filteredMovies)\r\n    }\r\n\r\n    useEffect(() =>  {\r\n        page()\r\n    },[searchWord, movies])\r\n\r\n    const clickedAllMovies = () => \r\n    {\r\n        setSearchWord(\"\")\r\n        setAddMoviesButtonColor(\"\")\r\n        setAllMoviesButtonColor(\"primary\")\r\n        setUseSearch(true)\r\n        setAllMoviesPage(true)\r\n        setAddMoviesPage(false)\r\n        page()\r\n    }\r\n\r\n    const clickedAddMovies = () => \r\n    {\r\n        setAllMoviesButtonColor(\"\")\r\n        setAddMoviesButtonColor(\"primary\")\r\n        setUseSearch(false)\r\n        setAllMoviesPage(false)\r\n        setAddMoviesPage(true)\r\n    }\r\n\r\n       return(\r\n           \r\n        <div>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Movies\r\n                    </Typography>\r\n                   \r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={allMoviesButtonColor} onClick={clickedAllMovies}>All Movies</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={addMoviesButtonColor} onClick={clickedAddMovies}>Add Movie</Button>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    </Grid>\r\n                    <Grid item>\r\n                   {useSearch ? <label><TextField placeholder=\"e.g., Titanic\"  onChange={searchChanged} InputProps={{endAdornment: (<InputAdornment position=\"end\"><IconButton><SearchIcon /></IconButton></InputAdornment>)}}\r\n                            variant=\"outlined\" style={{width: 205}} size=\"small\"/><br/></label> : \"\"}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"center\">\r\n                    {allMoviesPage && filteredMovies && filteredMovies.map((item,index) => {return <div><Grid item key={index} className={classes.paper}><MovieComp movieDetails={item}/></Grid><br/></div>})}\r\n                    {addMoviesPage && <div className={classes.paper}><AddMovieComp  clickedAllMovies={clickedAllMovies}/></div>}\r\n                </Grid> \r\n           </Grid>\r\n        </div>    )\r\n}\r\n\r\nexport default MoviesComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Utils from './Utils'\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction EditMovieComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [genres, setGenres] = useState(\"\")\r\n    const [imageUrl, setImageUrl] = useState(\"\")\r\n    const [premierd, setPremierd] = useState()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [editMovie, setEditMovie] = useState(\"\")\r\n\r\n    const clickedUpdate = () =>\r\n    {\r\n        debugger;\r\n        let moviesObjtoMovies = {id : props.match.params.id , data : {Title : editMovie.data.Title, date : premierd, ImageUrl : imageUrl, Genres : genres}}\r\n        let moviesObjtoServer = {Title : editMovie.data.Title, date : premierd, ImageUrl : imageUrl, Genres : genres}\r\n        let moviesArray = movies\r\n        let movieIndex = movies.findIndex(x => x.id == moviesObjtoMovies.id )\r\n        if(movieIndex >= 0 )\r\n        {\r\n          moviesArray[movieIndex] = moviesObjtoMovies\r\n          setMovies(moviesArray)\r\n          Utils.updateServer('Movies', moviesObjtoMovies.id, moviesObjtoServer)\r\n        }\r\n    }\r\n\r\n    const updateGenres = (e) =>\r\n    {\r\n      let newGenres = e.target.value\r\n      newGenres = newGenres.split(\" \")\r\n      setGenres(newGenres)\r\n    }\r\n\r\n    const form = () => \r\n    {\r\n      let movieIndex = movies.findIndex(x => x.id == props.match.params.id )\r\n      if(movieIndex >= 0 )\r\n      {\r\n        console.log(movies[movieIndex])\r\n        setEditMovie(movies[movieIndex])\r\n        setGenres(movies[movieIndex].data.Genres)\r\n        setImageUrl(movies[movieIndex].data.ImageUrl)\r\n        setPremierd(movies[movieIndex].data.date)\r\n      }     \r\n    }\r\n\r\n    useEffect(() => {\r\n      form()\r\n    },[])\r\n   \r\n       return(\r\n        <div >\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n            {\r\n                <FormGroup className={classes.paper}>\r\n                  <h2>Edit Movie : {editMovie && editMovie.data.Title}</h2>\r\n                  Name : <TextField variant=\"outlined\" value={editMovie && editMovie.data.Title}/><br/>\r\n                  Genres : <TextField variant=\"outlined\" placeholder={editMovie && editMovie.data.Genres} onChange={updateGenres}/><br/>\r\n                  Image URL :  <TextField variant=\"outlined\" placeholder={editMovie && editMovie.data.ImageUrl} onChange={e =>setImageUrl(e.target.value)}/><br/>\r\n                  Premierd :  <TextField variant=\"outlined\" placeholder={editMovie && editMovie.data.date} onChange={e =>setPremierd(e.target.value)}/>\r\n                  <br/>\r\n                  <br/>\r\n                  <FormGroup row>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/Movies\"><Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large' onClick={clickedUpdate}></Button></Link>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/Movies\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} size='large' variant=\"contained\"></Button></Link>\r\n                 </FormGroup>    \r\n                </FormGroup>\r\n            }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMovieComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Utils from './Utils'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction EditMemberComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [editMember, setEditMember] = useState(\"\")\r\n\r\n    const clickedUpdate = () =>\r\n    {\r\n        debugger;\r\n        let MemberObjToMembers = {id : props.match.params.id , data : {Name : name, Email : email, City : city}}\r\n        let MemberObjToServer = {Name : name, Email : email, City : city}\r\n        let MembersArray = members\r\n        let MemberIndex = members.findIndex(x => x.id == MemberObjToMembers.id )\r\n        if(MemberIndex >= 0 )\r\n        {\r\n          MembersArray[MemberIndex] = MemberObjToMembers\r\n          setMembers(MembersArray)\r\n          Utils.updateServer('Members', MemberObjToMembers.id, MemberObjToServer)\r\n        }\r\n    }\r\n\r\n    const form = () => \r\n    {\r\n      let memberIndex = members.findIndex(x => x.id == props.match.params.id )\r\n      if(memberIndex >= 0 )\r\n      {\r\n        setEditMember(members[memberIndex])\r\n        setName(members[memberIndex].data.Name)\r\n        setEmail(members[memberIndex].data.Email)\r\n        setCity(members[memberIndex].data.City)\r\n      }     \r\n    }\r\n\r\n    useEffect(() => {\r\n      form()\r\n    },[])\r\n   \r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                <FormGroup className={classes.paper}>   \r\n                    <h3>Edit Member : {name}</h3>\r\n                    Name :  <TextField variant=\"outlined\" placeholder={name} onChange={e =>setName(e.target.value)}/><br/>\r\n                    Email : &nbsp;<TextField variant=\"outlined\" placeholder={email} onChange={e =>setEmail(e.target.value)}/><br/>\r\n                    City : &nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" placeholder={city} onChange={e =>setCity(e.target.value)}/><br/>\r\n                  <br/>\r\n                    <FormGroup row>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Link style={{ textDecoration: 'none' }} to=\"/Subscriptions\"><Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large' onClick={clickedUpdate}></Button></Link> \r\n                        <Link style={{ textDecoration: 'none' }} to=\"/Subscriptions\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size='large'></Button></Link>\r\n                    </FormGroup>\r\n                </FormGroup>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMemberComp;\r\n\r\n","import {useState, useEffect} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Utils from './Utils'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\n\r\nfunction EditUserComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [checked, setChecked] = useState(true);\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n      };\r\n\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                <FormGroup className={classes.paper}>\r\n                    <h3>Edit User : {props.match.params.name}</h3>\r\n                \r\n                    First Name:<TextField required id=\"outlined-basic\" value={props.match.params.name} variant=\"outlined\"/><br/>\r\n                    Last Name:<TextField required id=\"outlined-basic\" value=\"Hello World\" variant=\"outlined\" /><br/>\r\n                    User Name:<TextField required id=\"outlined-basic\" value=\"Hello World\" variant=\"outlined\" /><br/>\r\n                    Session time out (Minuts):\r\n                    <TextField required id=\"outlined-basic\" value=\"Hello World\" variant=\"outlined\" />\r\n                    <h4>Created data : </h4>\r\n                    <h3>Permissions :</h3>\r\n                    <FormGroup row>\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"View Subscription\" />\r\n                     &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Create Subscription\"/>\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Delete Subscription\"/>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Update Subscription\"/>\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"View Movies\"/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Create Movies\"/>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Delete Movies\"/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Update Movies\"/>\r\n                </FormGroup>\r\n                    \r\n                <Grid container direction=\"row\" justify=\"center\" >\r\n                    <Grid item>\r\n                       <Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large'></Button> \r\n                    </Grid>\r\n                     <Grid item>\r\n                        <Link style={{ textDecoration: 'none' }} to=\"/UsersManagment\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} size='large' variant=\"contained\"></Button></Link> \r\n                    </Grid>\r\n                </Grid> \r\n            </FormGroup>\r\n        </Grid>\r\n            \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default EditUserComp;\r\n\r\n","\r\nimport React, {  createContext, useState } from \"react\";\r\n\r\nexport const UsersContext = createContext();\r\n\r\n  export const UsersContextProvider = props => {\r\n    const [users, setUsers] = useState(\"\")\r\n  \r\n    return (\r\n      <UsersContext.Provider value={[users, setUsers]}>\r\n        {props.children}\r\n      </UsersContext.Provider>\r\n    );\r\n  };","import {useState, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport './Main.css'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport Utils from './Utils'\r\n\r\n\r\nfunction UserComp(props)\r\n{\r\n    const [users, setUsers] = useContext(UsersContext); \r\n\r\n    const deleteUser = () =>\r\n    {\r\n        let currentUsersArray = users\r\n        let usersArrayAfterDelete = currentUsersArray.filter(x => x.id != props.userDetails.id)\r\n        setUsers(usersArrayAfterDelete)\r\n        Utils.deleteDataFromServer(\"Users\", props.userDetails.id)\r\n    }\r\n\r\n    const clickedDelete = () =>\r\n    {\r\n        confirmAlert({\r\n            title: 'Are you sure you want to delete User:',  // Title dialog\r\n            message: props.userDetails.data.name,               // Message dialog\r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => deleteUser()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n    /*\r\n    <ul>\r\n                {\r\n                    props.userDetails.data.permissions.map((item,index) => {if(item == true) return <li key={index}>{item}</li>})\r\n                }\r\n            </ul>\r\n    */\r\n   \r\n       return(\r\n        <div>\r\n            Name :  {props.userDetails.data.FirstName}  {props.userDetails.data.LastName}<br/>\r\n            User Name : {props.userDetails.data.UserName}<br/>\r\n            Session time out (Minuts) : {props.userDetails.data.SessionTimeOut}<br/>\r\n            Created data : {props.userDetails.data.CreatedDate}<br/>\r\n            Permissions:<br/>\r\n            \r\n            <Grid container direction=\"row\" justify=\"center\" >\r\n                <Grid item>\r\n                    <Link to={`/UsersManagment/Edit/${props.userDetails.id}`} style={{ textDecoration: 'none' }}><Button style={{textTransform: 'none'}} startIcon={<EditIcon />} size='large' variant=\"contained\"></Button></Link>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={{textTransform: 'none'}} variant=\"contained\" startIcon={<DeleteIcon />} size='large' onClick={clickedDelete}></Button> \r\n                </Grid>\r\n            </Grid> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserComp;\r\n\r\n","import {useState} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Utils from './Utils'\r\n\r\n\r\nfunction AddUserComp(params)\r\n{\r\n    const [fname, setFName] = useState(\"\")\r\n    const [lname, setLName] = useState(\"\")\r\n    const [userName, setUserName] = useState(\"\")\r\n    const [sessionTimeOut, setSessionTimeOut] = useState(0)\r\n    const [viewSubscription, setViewSubscription] = useState(false)\r\n    const [createSubscription, setCreateSubscription] = useState(false);\r\n    const [deleteSubscription, setDeleteSubscription] = useState(false)\r\n    const [updateSubscription, setUpdateSubscription] = useState(false)\r\n    const [viewMovies, setViewMovies] = useState(false)\r\n    const [createMovies, setCreateMovies] = useState(false)\r\n    const [deleteMovies, setDeleteMovies] = useState(false)\r\n    const [updateMovies, setUpdateMovies] = useState(false)\r\n\r\n    const clickedSave = () =>\r\n    {\r\n        debugger;\r\n        let permissionsObj = {viewSubscription : viewSubscription, createSubscription : createSubscription, deleteSubscription : deleteSubscription,\r\n            updateSubscription : updateSubscription, viewMovies : viewMovies, createMovies : createMovies, deleteMovies : deleteMovies, updateMovies : updateMovies}\r\n        let userObj = {FirstName : fname, LastName : lname, UserName : userName, SessionTimeOut : sessionTimeOut, CreatedDate : new Date(), permissions : permissionsObj}\r\n        Utils.sendDataToServer(\"Users\", userObj)\r\n    }\r\n\r\n       return(\r\n        <div>\r\n             <FormGroup>\r\n                First Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setFName(e.target.value)}/><br/>\r\n                Last Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setLName(e.target.value)}/><br/>\r\n                User Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setUserName(e.target.value)}/><br/>\r\n                Session time out (Minuts):&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setSessionTimeOut(e.target.value)}/>\r\n                <h4>Created data : </h4>\r\n                <h3>Permissions :</h3>\r\n            </FormGroup>\r\n            <FormGroup>\r\n            <FormControlLabel control={<Checkbox onChange={e => setViewSubscription(e.target.checked)} size=\"small\"/>}label=\"View Subscription\" name=\"View Subscription\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <FormControlLabel control={<Checkbox onChange={e => setCreateSubscription(e.target.checked)} size=\"small\"/>}label=\"Create Subscription\" name=\"Create Subscription\"/>\r\n                <FormControlLabel control={<Checkbox onChange={e => setDeleteSubscription(e.target.checked)} size=\"small\"/>}label=\"Delete Subscription\" name=\"Delete Subscription\"/>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n                <FormControlLabel control={<Checkbox onChange={e => setUpdateSubscription(e.target.checked)} size=\"small\"/>}label=\"Update Subscription\" name=\"Update Subscription\"/>\r\n                <FormControlLabel control={<Checkbox onChange={e => setViewMovies(e.target.checked)} size=\"small\"/>}label=\"View Movies\" name=\"View Movies\"/>\r\n                &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\r\n                <FormControlLabel control={<Checkbox onChange={e => setCreateMovies(e.target.checked)} size=\"small\"/>}label=\"Create Movies\" name=\"Create Movies\"/>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n                <FormControlLabel control={<Checkbox onChange={e => setDeleteMovies(e.target.checked)} size=\"small\"/>}label=\"Delete Movies\" name=\"Delete Movies\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <FormControlLabel control={<Checkbox onChange={e => setUpdateMovies(e.target.checked)} size=\"small\"/>}label=\"Update Movies\" name=\"Update Movies\"/>\r\n            </FormGroup>\r\n                \r\n            <Grid container direction=\"row\" justify=\"center\" >\r\n                <Grid item>\r\n                    <Button style={{textTransform: 'none'}} startIcon={<SaveIcon />} variant=\"contained\" size='large' onClick={clickedSave}></Button> \r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size='large' onClick={() => params.clickedAllUsers()}></Button> \r\n                </Grid>\r\n            </Grid> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUserComp;\r\n\r\n","import {useState, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport UserComp from './UserComp'\r\nimport AddUserComp from './AddUserComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(5),     \r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction SubscriptionsComp()\r\n{\r\n    const classes = useStyles()\r\n    //const [users, setMembers] = useState([{name : \"ori shalom\", userName : \"shalom.ori@gmail.com\", sessionTimeOut : \"Hod Hasharon\" , createdData : \"\", permissions : \"\"},\r\n      //                                      {name : \"anat shalom\", userName : \"anat.ori@gmail.com\", sessionTimeOut : \"TLV Hasharon\" , createdData : \"\", permissions : \"\"}])\r\n    const [allUsersButtonColor,setAllUsersButtonColor] = useState(\"primary\")\r\n    const [addUserButtonColor,setAddUserButtonColor] = useState(\"\")\r\n    const [allUsersPage, setAllUsersPage] = useState(true)\r\n    const [addUserPage, setAddUserPage] = useState(false)\r\n    const [users, setUsers] = useContext(UsersContext);\r\n\r\n    const clickedAllUsers = () => \r\n    {\r\n        setAddUserButtonColor(\"\")\r\n        setAllUsersButtonColor(\"primary\")\r\n        setAllUsersPage(true)\r\n        setAddUserPage(false)\r\n    }\r\n\r\n    const clickedAddUser = () => \r\n    {\r\n        setAllUsersButtonColor(\"\")\r\n        setAddUserButtonColor(\"primary\")\r\n        setAllUsersPage(false)\r\n        setAddUserPage(true)\r\n    }\r\n\r\n       return(\r\n        <div >\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid  item >\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Users Managment\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item >\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={allUsersButtonColor} onClick={clickedAllUsers}>All Users</Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={addUserButtonColor} onClick={clickedAddUser}>Add User</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"center\"> \r\n                    {allUsersPage && users && users.map((item,index) => {return <div><Grid item className={classes.paper}><UserComp userDetails={item}/></Grid><br/></div>})}\r\n                    {addUserPage && <Grid item className={classes.paper}><AddUserComp clickedAllUsers={clickedAllUsers}/></Grid>}\r\n                </Grid>\r\n           </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport SubscriptionsComp from './SubscriptionsComp'\r\nimport MoviesComp from './MoviesComp'\r\nimport EditMovieComp from './EditMovieComp'\r\nimport EditMemberComp from './EditMemberComp'\r\nimport EditUserComp from './EditUserComp'\r\nimport UserManagmentComp from './UsersManagmentComp'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport {Link, Switch,Route} from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Utils from './Utils'\r\nimport { MoviesContext } from \"./MoviesContaxtApi\";\r\nimport {MembersContext} from './MembersContextApi'\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport { SubscriptionsContext } from './SubscriptionsContaxtApi'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appbar: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n      },\r\n    button: {\r\n        color : 'white'\r\n      },\r\n      paper: {\r\n        padding: theme.spacing(3),\r\n        borderColor : 'black',\r\n        borderStyle: 'solid',\r\n        borderWidth: '2px',\r\n      },\r\n  }));\r\n\r\nfunction MainComp()\r\n{\r\n    const classes = useStyles();\r\n    const [isAdmin,setIsAdmin] = useState(true)\r\n    const [movies, setMovies] = useContext(MoviesContext)\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [users, setUsers] = useContext(UsersContext);\r\n    const [subscriptions, setSubscriptions] = useContext(SubscriptionsContext);\r\n\r\n    const getUsers = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Users\")\r\n        setUsers(res)\r\n    }\r\n\r\n    const getMovies = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Movies\")\r\n        setMovies(res)\r\n    }\r\n\r\n    const getMembers = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Members\")\r\n        setMembers(res)\r\n    }\r\n\r\n    const getSubscriptions = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Subscriptions\")\r\n        setSubscriptions(res)\r\n    }\r\n\r\n    useEffect( async () => {\r\n        getMovies()\r\n        getMembers()\r\n        getUsers()\r\n        getSubscriptions()\r\n    },[])\r\n   \r\n       return(\r\n        <div >\r\n           <AppBar position=\"sticky\" className={classes.appbar}>\r\n          <Toolbar >\r\n              <Grid container direction=\"row\" justify=\"center\" spacing={5}>\r\n                    <Grid item>\r\n                        <Link to=\"/Movies\" className={classes.link}><Button className={classes.button} >Movies</Button></Link>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Link to=\"/Subscriptions\" className={classes.link}><Button className={classes.button}>Subscriptions</Button></Link>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {isAdmin && <Link to=\"/UsersManagment\" className={classes.link}><Button className={classes.button}>User Managment</Button></Link>}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button className={classes.button} startIcon={<ExitToAppIcon />} >Log Out</Button>\r\n                    </Grid>\r\n                </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n            <Switch>\r\n                <Route path=\"/Movies/Edit/:id\" component={EditMovieComp}/>\r\n                <Route path=\"/Movies\" component={MoviesComp}/>\r\n                <Route path=\"/Subscriptions/Edit/:id\" component={EditMemberComp}/>\r\n                <Route path=\"/Subscriptions\" component={SubscriptionsComp}/>\r\n                <Route path=\"/UsersManagment/Edit/:id\" component={EditUserComp}/>\r\n                <Route path=\"/UsersManagment\" component={UserManagmentComp}/>     \r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainComp;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {useEffect} from 'react'\r\nimport MainComp from './MainComp'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { MoviesContextProvider } from \"./MoviesContaxtApi\"\r\nimport { MembersContextProvider } from './MembersContextApi'\r\nimport { UsersContextProvider } from './UsersContaxtApi'\r\nimport { SubscriptionsContextProvider } from './SubscriptionsContaxtApi'\r\nimport Utils from './Utils'\r\n\r\nfunction WrapperComp()\r\n{\r\n    const loadMembersToServer = async () =>\r\n    {\r\n        let usersUrl = \"https://jsonplaceholder.typicode.com/users\"\r\n        let users = []\r\n        users = await Utils.getAllItems(usersUrl)\r\n\r\n        let usersObj = []\r\n        usersObj = users.map(item => \r\n        {\r\n            return {Name : item.name, Email : item.email, City : item.address.city}\r\n        })\r\n\r\n        usersObj.forEach(x => Utils.sendDataToServer(\"Members\", x))\r\n    }\r\n\r\n    const loadMoviesToServer = async () =>\r\n    {\r\n        let moviesUrl = \"https://api.tvmaze.com/shows\"\r\n        let movies = []\r\n        movies = await Utils.getAllItems(moviesUrl)\r\n\r\n        let moviesObj = []\r\n        moviesObj = movies.map(item => \r\n        {\r\n            return {Title : item.name, date : item.premiered, ImageUrl : item.image.medium, Genres : item.genres}\r\n        })\r\n\r\n        moviesObj.forEach(x => Utils.sendDataToServer(\"Movies\", x))\r\n    }\r\n\r\n    useEffect( async () => {\r\n        //loadMembersToServer()\r\n        //loadMoviesToServer()\r\n    },[])\r\n\r\n       return(\r\n        <div>\r\n            <Typography variant=\"h3\" gutterBottom align=\"center\">\r\n                Movies - Subscription Web Site\r\n            </Typography>\r\n\r\n            <SubscriptionsContextProvider>\r\n            <UsersContextProvider>\r\n            <MembersContextProvider>\r\n            <MoviesContextProvider>\r\n                <MainComp />\r\n            </MoviesContextProvider>\r\n            </MembersContextProvider>\r\n            </UsersContextProvider>\r\n            </SubscriptionsContextProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WrapperComp;\r\n\r\n","import './App.css';\nimport LoginComp from './components/LoginComp'\nimport MainComp from './components/MainComp'\nimport EditUserComp from './components/EditUserComp'\nimport AddUserComp from './components/AddUserComp'\nimport MoviesComp from './components/MoviesComp'\nimport MovieComp from './components/MovieComp'\nimport SubscriptionsWatchedComp from './components/SubscriptionWatchedComp'\nimport AddMovieComp from './components/AddMovieComp'\nimport SubscriptionsComp from './components/SubscriptionsComp'\nimport HostComp from './components/Host'\nimport WrapperComp from './components/WrapperComp'\n\n\n\nfunction App() {\n  return (\n    <div >\n     \n      <WrapperComp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n <Router>\n    <App />\n    </Router>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}