{"version":3,"sources":["firebase.js","components/Utils.js","components/MoviesContaxtApi.js","components/MembersContextApi.js","components/UsersContaxtApi.js","components/SubscriptionsContaxtApi.js","components/LogInContaxtApi.js","components/MoviesWatchedComp.js","components/MemberComp.js","components/AddMemberComp.js","components/SubscriptionsComp.js","components/SubscriptionWatchedComp.js","components/MovieComp.js","components/AddMovieComp.js","components/MoviesComp.js","components/EditMovieComp.js","components/EditMemberComp.js","components/EditUserComp.js","components/UserComp.js","components/AddUserComp.js","components/UsersManagmentComp.js","components/CreatAccountComp.js","components/LoginComp.js","components/EntryComp.js","components/MainComp.js","components/WrapperComp.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","getDataFromServer","collection","a","get","snapshot","DataArr","myData","forEach","doc","data","id","push","getSpecificDocFromServer","docId","deleteDataFromServer","delete","response","sendDataToServer","jsonObj","add","getAllItems","url","axios","user","updateServer","set","MoviesContext","createContext","MoviesContextProvider","props","useState","movies","setMovies","Provider","value","children","MembersContext","MembersContextProvider","members","setMembers","UsersContext","UsersContextProvider","users","setUsers","SubscriptionsContext","SubscriptionsContextProvider","subscriptions","setSubscriptions","LogInContext","LogInContextProvider","isLogedIn","setIsLogedIn","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","paper","padding","borderColor","borderStyle","borderWidth","MoviesWatchedComp","classes","useContext","moviesAndDates","setMoviesAndDates","subscribePage","setSubscribePage","selectedMovie","setSelectedMovie","filteredMovies","setFilteredMovies","date","setDate","useEffect","moviesAndDatesArray","subscriptionsForMemberTemp","find","x","MemberId","memberId","Movies","MovieAndDateObj","movieName","item","MovieId","Title","DateWatched","Grid","container","direction","Typography","variant","gutterBottom","align","Button","style","textTransform","onClick","filteredMoviesTemp","filter","className","FormControl","InputLabel","Select","onChange","e","target","map","index","MenuItem","width","height","type","data-date","data-date-format","newMovieToSubscriptions","localSubscription","subscriptionsIndex","findIndex","moviesRecoredInMemberRecored","newsubscriptionToSubscriptions","newsubscriptionToServer","Utils","Link","href","root","flexGrow","MemberComp","alignItems","memberDetails","Name","Email","City","justify","to","textDecoration","startIcon","size","confirmAlert","title","message","buttons","label","MembersArrayAfterDelete","deleteMember","AddMemberComp","params","name","setName","email","setEmail","city","setCity","newId","setNewId","setPressed","clickedSave","MemberObj","res","clickedAllMembers","initialRender","useRef","current","MemberObjToMembers","currentMembersArray","FormGroup","TextField","required","SubscriptionsComp","allMembersPage","setAllMembersPage","addMembersPage","setAddMembersPage","allMembersButtonColor","setAllMembersButtonColor","addMembersButtonColor","setAddMembersButtonColor","color","SubscriptionsWatchedComp","variantMapping","MovieComp","movieDetails","Genres","join","src","ImageUrl","SubscriptionWatchedComp","console","log","moviesArrayAfterDelete","deleteMovie","AddMovieComp","setTitle","genres","setGenres","imageUrl","setImageUrl","premierd","setPremierd","genresArry","split","moviesObj","clickedAllMovies","moviesObjtoMovies","currentMoviesArray","MoviesComp","allMoviesButtonColor","setAllMoviesButtonColor","useSearch","setUseSearch","addMoviesButtonColor","setAddMoviesButtonColor","searchWord","setSearchWord","allMoviesPage","setAllMoviesPage","addMoviesPage","setAddMoviesPage","page","toUpperCase","startsWith","placeholder","InputProps","endAdornment","InputAdornment","position","IconButton","EditMovieComp","editMovie","setEditMovie","movieIndex","match","form","newGenres","row","moviesObjtoServer","moviesArray","EditMemberComp","setEditMember","memberIndex","MemberObjToServer","MembersArray","MemberIndex","EditUserComp","setChecked","handleChange","event","checked","FormControlLabel","control","Checkbox","UserComp","userDetails","FirstName","LastName","UserName","SessionTimeOut","CreatedDate","usersArrayAfterDelete","deleteUser","AddUserComp","fname","setFName","lname","setLName","userName","setUserName","sessionTimeOut","setSessionTimeOut","viewSubscription","setViewSubscription","createSubscription","setCreateSubscription","deleteSubscription","setDeleteSubscription","updateSubscription","setUpdateSubscription","viewMovies","setViewMovies","createMovies","setCreateMovies","deleteMovies","setDeleteMovies","updateMovies","setUpdateMovies","permissionsObj","userObj","Date","permissions","clickedAllUsers","allUsersButtonColor","setAllUsersButtonColor","addUserButtonColor","setAddUserButtonColor","allUsersPage","setAllUsersPage","addUserPage","setAddUserPage","CreateAccountComp","link","button","LoginComp","setUser","setPass","history","useHistory","EntryComp","appbar","menuButton","marginRight","MainComp","isAdmin","getUsers","getMovies","getMembers","getSubscriptions","AppBar","Toolbar","exact","path","component","UserManagmentComp","WrapperComp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e30c139.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\n // Your web app's Firebase configuration\r\n var firebaseConfig = {\r\n    apiKey: \"AIzaSyAcrC8WFMcfXI8NVwjNDqL-WzqSmpttCeA\",\r\n    authDomain: \"react-final-project-eba09.firebaseapp.com\",\r\n    databaseURL: \"https://react-final-project-eba09-default-rtdb.firebaseio.com\",\r\n    projectId: \"react-final-project-eba09\",\r\n    storageBucket: \"react-final-project-eba09.appspot.com\",\r\n    messagingSenderId: \"446437310002\",\r\n    appId: \"1:446437310002:web:3dbcf986d210e41d16062b\"\r\n    \r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  export default firebase","import firebase from '../firebase'\r\nimport axios from 'axios'\r\n\r\nlet firestore = firebase.firestore();\r\n\r\nconst getDataFromServer = async function (collection) \r\n{\r\n    let snapshot = await firestore.collection(collection).get()\r\n    let DataArr = []\r\n    let myData = \"\"\r\n    snapshot.forEach(doc =>{\r\n        myData = {data : doc.data() , id : doc.id}\r\n        DataArr.push(myData)\r\n    })\r\n    return DataArr\r\n}\r\n\r\nconst getSpecificDocFromServer = async function (collection, docId) \r\n{\r\n    let snapshot = firestore.collection(collection).doc(docId)\r\n    let doc = await snapshot.get()\r\n    if(doc){\r\n        return doc.data()\r\n    }\r\n}\r\n\r\nconst deleteDataFromServer = async function (collection, id ) \r\n{\r\n    let response = await firestore.collection(collection).doc(id).delete()\r\n    return response\r\n}\r\n\r\nconst sendDataToServer = async function (collection, jsonObj ) \r\n{\r\n    let response = await firestore.collection(collection).add(jsonObj)\r\n    return response\r\n}\r\n\r\nconst updateServer = function (collection, id , jsonObj ) \r\n{\r\n    firestore.collection(collection).doc(id).set(jsonObj)\r\n}\r\n\r\nconst getAllItems = async function(url)\r\n{\r\n  let user = await axios.get(url)\r\n  return user.data\r\n}\r\n\r\nexport default {sendDataToServer, getDataFromServer, getAllItems, updateServer, deleteDataFromServer, getSpecificDocFromServer};\r\n\r\n","\r\nimport React, {  createContext, useState } from \"react\";\r\n\r\nexport const MoviesContext = createContext();\r\n\r\n  export const MoviesContextProvider = props => {\r\n    const [movies, setMovies] = useState(\"\")\r\n  \r\n    return (\r\n      <MoviesContext.Provider value={[movies, setMovies]}>\r\n        {props.children}\r\n      </MoviesContext.Provider>\r\n    );\r\n  };","\r\nimport React, {  createContext, useState } from \"react\";\r\n\r\nexport const MembersContext = createContext();\r\n\r\n  export const MembersContextProvider = props => {\r\n    const [members, setMembers] = useState(\"\")\r\n  \r\n    return (\r\n      <MembersContext.Provider value={[members, setMembers]}>\r\n        {props.children}\r\n      </MembersContext.Provider>\r\n    );\r\n  };","\r\nimport React, {  createContext, useState } from \"react\";\r\n\r\nexport const UsersContext = createContext();\r\n\r\n  export const UsersContextProvider = props => {\r\n    const [users, setUsers] = useState(\"\")\r\n  \r\n    return (\r\n      <UsersContext.Provider value={[users, setUsers]}>\r\n        {props.children}\r\n      </UsersContext.Provider>\r\n    );\r\n  };","\r\nimport React, {  createContext, useState } from \"react\";\r\n\r\nexport const SubscriptionsContext = createContext();\r\n\r\n  export const SubscriptionsContextProvider = props => {\r\n    const [subscriptions, setSubscriptions] = useState(\"\")\r\n  \r\n    return (\r\n      <SubscriptionsContext.Provider value={[subscriptions, setSubscriptions]}>\r\n        {props.children}\r\n      </SubscriptionsContext.Provider>\r\n    );\r\n  };","\r\nimport React, {  createContext, useState } from \"react\";\r\n\r\nexport const LogInContext = createContext();\r\n\r\n  export const LogInContextProvider = props => {\r\n    const [isLogedIn,setIsLogedIn] = useState(false)\r\n  \r\n    return (\r\n      <LogInContext.Provider value={[isLogedIn,setIsLogedIn]}>\r\n        {props.children}\r\n      </LogInContext.Provider>\r\n    );\r\n  };","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport { SubscriptionsContext } from './SubscriptionsContaxtApi'\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Utils from './Utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 220\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    }\r\n  }));\r\n\r\nfunction MoviesWatchedComp(props)\r\n{\r\n    const classes = useStyles();\r\n    const [subscriptions, setSubscriptions] = useContext(SubscriptionsContext);\r\n    const [moviesAndDates, setMoviesAndDates] = useState(\"\")\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [subscribePage, setSubscribePage] = useState(false)\r\n    const [selectedMovie, setSelectedMovie] = useState()\r\n    const [filteredMovies, setFilteredMovies] = useState([])\r\n    const [date, setDate] = useState(\"2015-08-09\")\r\n\r\n    const clickedSubscribeToMovie = () =>\r\n    {\r\n        let newMovieToSubscriptions = {MovieId : selectedMovie.id, DateWatched : date}\r\n        let localSubscription = subscriptions\r\n        let subscriptionsIndex = localSubscription.findIndex(x => x.data.MemberId == props.memberId)\r\n        if(subscriptionsIndex >= 0 )\r\n        {\r\n            let moviesRecoredInMemberRecored = localSubscription[subscriptionsIndex].data.Movies\r\n            moviesRecoredInMemberRecored.push(newMovieToSubscriptions)\r\n            let newsubscriptionToSubscriptions = {id: localSubscription[subscriptionsIndex].id , data: {MemberId : props.memberId, Movies : moviesRecoredInMemberRecored}}\r\n            localSubscription[subscriptionsIndex] = newsubscriptionToSubscriptions\r\n            setSubscriptions(localSubscription)\r\n            let newsubscriptionToServer = {MemberId : props.memberId, Movies : moviesRecoredInMemberRecored}\r\n            Utils.updateServer('Subscriptions', localSubscription[subscriptionsIndex].id, newsubscriptionToServer)\r\n        }\r\n    }\r\n\r\n    const ClickedToClose = () =>\r\n    {\r\n        setSubscribePage(false)\r\n    }\r\n\r\n    const clickedSubscribe = () =>\r\n    {\r\n        setSubscribePage(true)\r\n        let filteredMoviesTemp = movies.filter(x => x.data.Title != moviesAndDates.movieName)\r\n        setFilteredMovies(filteredMoviesTemp)\r\n    }\r\n\r\n    const selectChanged = (e) =>\r\n    {\r\n        setSelectedMovie(e.target.value);\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        let moviesAndDatesArray = []\r\n        let subscriptionsForMemberTemp = subscriptions.find(x => x.data.MemberId == props.memberId)\r\n        if(subscriptionsForMemberTemp)\r\n        {\r\n            let moviesAndDatesWithId = subscriptionsForMemberTemp.data.Movies\r\n            moviesAndDatesWithId.forEach(x => {\r\n            let watchedMovies = movies.find(item => item.id == x.MovieId)\r\n            let MovieAndDateObj = {movieName : watchedMovies.data.Title , date : x.DateWatched}\r\n            moviesAndDatesArray.push(MovieAndDateObj)\r\n            })\r\n            setMoviesAndDates(moviesAndDatesArray)\r\n        }\r\n    },[])\r\n\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                    <Typography variant=\"h6\" gutterBottom align=\"center\">\r\n                        Movies Watched\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                   {subscribePage \r\n                    ? <Button style={{textTransform: 'none'}} variant=\"contained\" onClick={ClickedToClose}>Close</Button>\r\n                    : <Button style={{textTransform: 'none'}} variant=\"contained\" onClick={clickedSubscribe}>Subscribe to a new movie</Button>\r\n                    }\r\n                </Grid>\r\n                {subscribePage && <div className={classes.paper}><Grid item>Add a New Movie </Grid>\r\n                                        <Grid item container direction=\"row\">\r\n                                            <Grid item>\r\n                                                <FormControl  className={classes.formControl}>\r\n                                                    <InputLabel>Select a Movie</InputLabel>\r\n                                                    <Select onChange={selectChanged}>\r\n                                                        {\r\n                                                            filteredMovies.map((item,index) => {\r\n                                                                return <MenuItem key={index} value={item}>{item.data.Title}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <input style={{width:\"150px\", height:\"50px\" }} type=\"date\" data-date=\"\" data-date-format=\"DD/MM/YYYY\" value={date} onChange={e =>setDate(e.target.value) }/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item><Button style={{textTransform: 'none'}} variant=\"contained\" onClick={clickedSubscribeToMovie}>Subscribe</Button></Grid>\r\n                                </div>\r\n                }\r\n                <Grid item container direction=\"column\">\r\n                <ul>\r\n                {\r\n                 moviesAndDates && moviesAndDates.map((item,index) =>{\r\n                    return <Grid item><li key={index}><Link href=\"#\">{item.movieName}</Link>, {item.date}</li></Grid>\r\n                    })\r\n                }\r\n                </ul>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviesWatchedComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport MoviesWatchedComp from './MoviesWatchedComp'\r\nimport {Link} from 'react-router-dom'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport './Main.css'\r\nimport Utils from './Utils'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction MemberComp(props)\r\n{\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const classes = useStyles()\r\n\r\n   const deleteMember = () =>\r\n    {\r\n        let currentMembersArray = members\r\n        let MembersArrayAfterDelete = currentMembersArray.filter(x => x.id != props.memberDetails.id)\r\n        setMembers(MembersArrayAfterDelete)\r\n        Utils.deleteDataFromServer(\"Members\", props.memberDetails.id)\r\n    }\r\n\r\n   const clickedDelete = () =>\r\n    {\r\n        confirmAlert({\r\n            title: 'Are you sure you want to delete Member:',  // Title dialog\r\n            message: props.memberDetails.data.Name,               // Message dialog\r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => deleteMember()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n       return(\r\n       \r\n            <Grid container direction=\"column\" alignItems=\"center\" >\r\n                <Grid item>\r\n                    <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                        {props.memberDetails.data.Name}<br/>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                        Email : {props.memberDetails.data.Email}<br/>\r\n                        City : {props.memberDetails.data.City}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item>\r\n                        <Link to={`/Subscriptions/Edit/${props.memberDetails.id}`} style={{ textDecoration: 'none' }}><Button style={{textTransform: 'none'}} startIcon={<EditIcon />} size=\"large\" variant=\"contained\"></Button></Link>            \r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" size=\"large\" startIcon={<DeleteIcon />} onClick={clickedDelete}></Button> \r\n                    </Grid>\r\n                </Grid>\r\n                <br/>\r\n                <Grid item className={classes.paper}>\r\n                    <MoviesWatchedComp memberId={props.memberDetails.id}/>\r\n                </Grid>\r\n                <br/>\r\n            </Grid>\r\n       \r\n    )\r\n}\r\n\r\nexport default MemberComp;\r\n\r\n","import {useState, useContext, useRef, useEffect} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Utils from './Utils'\r\n\r\nfunction AddMemberComp(params)\r\n{\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [newId, setNewId] = useState(0)\r\n    const [pressed, setPressed] = useState(false)\r\n\r\n    const clickedSave = async () =>\r\n    {\r\n        let MemberObj = {Name : name, Email : email, City : city}\r\n        let res = await Utils.sendDataToServer('Members', MemberObj)\r\n        setNewId(res.id)\r\n        params.clickedAllMembers()\r\n    }\r\n\r\n    const initialRender = useRef(true);\r\n    useEffect(() =>\r\n    {\r\n        if(initialRender.current){\r\n            initialRender.current = false;\r\n        }else{\r\n                let MemberObjToMembers = {id : newId , data : {Name : name, Email : email, City : city}}\r\n                let currentMembersArray = members\r\n                currentMembersArray.push(MemberObjToMembers)\r\n                setMembers(currentMembersArray)\r\n                setPressed(true)\r\n            }\r\n    },[newId])\r\n   \r\n       return(\r\n        <div>\r\n            <br/>\r\n            <FormGroup>\r\n           Name :  <TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setName(e.target.value)}/><br/>\r\n           Email : &nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setEmail(e.target.value)}/><br/>\r\n           City  : &nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setCity(e.target.value)}/><br/>\r\n           </FormGroup>\r\n           <br/>\r\n           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Button style={{textTransform: 'none'}} startIcon={<SaveIcon />} variant=\"contained\" size=\"large\" onClick={clickedSave}></Button> \r\n            <Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size=\"large\" onClick={() => params.clickedAllMembers()}></Button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMemberComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport MemberComp from './MemberComp'\r\nimport AddMemberComp from './AddMemberComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n  /*\r\n  useState([{Name : \"ori shalom\", Email : \"shalom.ori@gmail.com\", City : \"Hod Hasharon\"},\r\n                                            {Name : \"Anat shalom\", Email : \"anatbarer@gmail.com\", City : \"TLV\"}])\r\n                                            */\r\n\r\nfunction SubscriptionsComp()\r\n{\r\n    const classes = useStyles()\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [allMembersPage, setAllMembersPage] = useState(true)\r\n    const [addMembersPage, setAddMembersPage] = useState(false)\r\n    const [allMembersButtonColor,setAllMembersButtonColor] = useState(\"primary\")\r\n    const [addMembersButtonColor,setAddMembersButtonColor] = useState(\"\")\r\n\r\n    const clickedAllMembers = () => \r\n    {\r\n        setAddMembersButtonColor(\"\")\r\n        setAllMembersButtonColor(\"primary\")\r\n        setAllMembersPage(true)\r\n        setAddMembersPage(false)\r\n    }\r\n\r\n    const clickedAddMembers = () => \r\n    {\r\n        setAllMembersButtonColor(\"\")\r\n        setAddMembersButtonColor(\"primary\")\r\n        setAllMembersPage(false)\r\n        setAddMembersPage(true)\r\n    }\r\n\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Subscriptions\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={allMembersButtonColor} onClick={clickedAllMembers}>All Members</Button> \r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={addMembersButtonColor} onClick={clickedAddMembers}>Add Member</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"center\" >\r\n                    {allMembersPage && members && members.map((item,index) => {return <Grid item key={index} className={classes.paper}><MemberComp memberDetails={item}/></Grid>})}\r\n                    {addMembersPage && <div className={classes.paper}><AddMemberComp clickedAllMembers={clickedAllMembers}/></div>}\r\n                </Grid> \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsComp;\r\n\r\n","import {useState, useEffect} from 'react'\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nfunction SubscriptionsWatchedComp()\r\n{\r\n   const [subscriptions, setSubscriptions] = useState([{name : \"Avi Cohen\" , date : \"12/11/1998\"}])\r\n\r\n       return(\r\n        <div>\r\n          <Typography variant=\"h5\" variantMapping=\"h1\" gutterBottom align=\"center\">\r\n                        Subscriptions watched\r\n                    </Typography>\r\n            \r\n            <ul>\r\n              {\r\n                  subscriptions.map((item,index) =>{\r\n                      return <li key={index}><Link href=\"#\">{item.name}</Link>, {item.date}</li>\r\n                  })\r\n              }\r\n            </ul>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsWatchedComp;\r\n\r\n","import {useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport SubscriptionWatchedComp from \"./SubscriptionWatchedComp\"\r\nimport {Link} from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport Utils from './Utils'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction MovieComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n\r\n    const deleteMovie = () =>\r\n    {\r\n        console.log(\"in delete\")\r\n        let currentMoviesArray = movies\r\n        let moviesArrayAfterDelete = currentMoviesArray.filter(x => x.id != props.movieDetails.id)\r\n        setMovies(moviesArrayAfterDelete)\r\n        Utils.deleteDataFromServer(\"Movies\", props.movieDetails.id)\r\n    }\r\n\r\n    const clickedDelete = () =>\r\n    {\r\n        confirmAlert({\r\n            title: 'Are you sure you want to delete the movie:',                        // Title dialog\r\n            message: props.movieDetails.data.Title,               // Message dialog\r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => deleteMovie()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n    //Genres: {props.movieDetails.Genres.join(\", \")}\r\n    \r\n    return(\r\n        \r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                    <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n                    {props.movieDetails.data.Title} , {props.movieDetails.data.date}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                    Genres: {props.movieDetails.data.Genres.join(\", \")}\r\n                    </Typography>\r\n               </Grid>\r\n                <Grid item>    \r\n                </Grid>\r\n                <Grid  container direction=\"row\" justify=\"space-around\" alignItems=\"flex-start\" >\r\n                    <Grid item  >\r\n                        <img src={props.movieDetails.data.ImageUrl} width=\"200\" height=\"300\"/> \r\n                    </Grid>\r\n                    <Grid item  className={classes.paper}>\r\n                        <SubscriptionWatchedComp />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Link to={`/Movies/Edit/${props.movieDetails.id}`} style={{ textDecoration: 'none' }}>\r\n                        <Button style={{textTransform: 'none'}} size='large' startIcon={<EditIcon />} variant=\"contained\"></Button></Link>\r\n                    <Button style={{textTransform: 'none'}} size='large' variant=\"contained\" startIcon={<DeleteIcon />} onClick={clickedDelete}></Button>\r\n                </Grid>\r\n            </Grid>\r\n        \r\n    )\r\n}\r\n\r\nexport default MovieComp;\r\n\r\n","import {useState, useContext, useEffect, useRef} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport Utils from './Utils'\r\n\r\n\r\nconst AddMovieComp = (params) =>\r\n{\r\n    const [title, setTitle] = useState(\"\")\r\n    const [genres, setGenres] = useState(\"\")\r\n    const [imageUrl, setImageUrl] = useState(\"\")\r\n    const [premierd, setPremierd] = useState()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [newId, setNewId] = useState(0)\r\n    const [pressed, setPressed] = useState(false)\r\n\r\n    const clickedSave = async () =>\r\n    {\r\n        let genresArry = genres.split(\" \")\r\n        let moviesObj = {Title : title, date : premierd, ImageUrl : imageUrl, Genres : genresArry}\r\n        let res = await Utils.sendDataToServer('Movies', moviesObj)\r\n        setNewId(res.id)\r\n        params.clickedAllMovies()\r\n    }\r\n\r\n    const initialRender = useRef(true);\r\n    useEffect(() =>\r\n    {\r\n        console.log(\"useEffect - 1\")\r\n        if(initialRender.current){\r\n            console.log(\"useEffect - 2\")\r\n            initialRender.current = false;\r\n        }else{\r\n                console.log(\"useEffect - 3\")\r\n                let genresArry = genres.split(\" \")\r\n                let moviesObjtoMovies = {id : newId , data : {Title : title, date : premierd, ImageUrl : imageUrl, Genres : genresArry}}\r\n                let currentMoviesArray = movies\r\n                currentMoviesArray.push(moviesObjtoMovies)\r\n                setMovies(currentMoviesArray)\r\n                setPressed(true)\r\n            }\r\n    },[newId])\r\n\r\n    return(\r\n        <div>\r\n            <br/>\r\n            <FormGroup>\r\n                Name :  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setTitle(e.target.value)}/><br/>\r\n                Genres : &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" size=\"small\" onChange={e =>setGenres(e.target.value)}/><br/>\r\n                Image URL : <TextField variant=\"outlined\" size=\"small\" onChange={e =>setImageUrl(e.target.value)}/><br/>\r\n                Premierd : &nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" size=\"small\" onChange={e =>setPremierd(e.target.value)}/>\r\n            </FormGroup><br/><br/>\r\n\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Button style={{textTransform: 'none'}} startIcon={<SaveIcon />} size=\"large\" variant=\"contained\" onClick={clickedSave}></Button>  \r\n            <Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size=\"large\" onClick={() => params.clickedAllMovies()}></Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMovieComp;\r\n\r\n","import {useState, useEffect, useContext } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MovieComp from './MovieComp'\r\nimport AddMovieComp from './AddMovieComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { MoviesContext } from \"./MoviesContaxtApi\";\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction MoviesComp()\r\n{\r\n    const [allMoviesButtonColor,setAllMoviesButtonColor] = useState(\"primary\")\r\n    const classes = useStyles()\r\n    const [useSearch, setUseSearch] = useState(true)\r\n    const [addMoviesButtonColor,setAddMoviesButtonColor] = useState(\"\")\r\n    const [searchWord, setSearchWord] = useState(\"\")\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [allMoviesPage, setAllMoviesPage] = useState(true)\r\n    const [addMoviesPage, setAddMoviesPage] = useState(false)\r\n    const [filteredMovies, setFilteredMovies] = useState()\r\n\r\n    let searchChanged =  (e) =>\r\n    {\r\n        setSearchWord(e.target.value.toUpperCase())\r\n    }\r\n\r\n    let page = () =>\r\n    {\r\n        console.log(\"page\")\r\n        let filteredMovies\r\n        if(searchWord != \"\")\r\n        {\r\n            filteredMovies = movies.filter(x => x.data.Title.toUpperCase().startsWith(searchWord))\r\n        }\r\n        else\r\n        {\r\n            filteredMovies = movies\r\n        }\r\n        setFilteredMovies(filteredMovies)\r\n    }\r\n\r\n    useEffect(() =>  {\r\n        page()\r\n    },[searchWord, movies])\r\n\r\n    const clickedAllMovies = () => \r\n    {\r\n        setSearchWord(\"\")\r\n        setAddMoviesButtonColor(\"\")\r\n        setAllMoviesButtonColor(\"primary\")\r\n        setUseSearch(true)\r\n        setAllMoviesPage(true)\r\n        setAddMoviesPage(false)\r\n        page()\r\n    }\r\n\r\n    const clickedAddMovies = () => \r\n    {\r\n        setAllMoviesButtonColor(\"\")\r\n        setAddMoviesButtonColor(\"primary\")\r\n        setUseSearch(false)\r\n        setAllMoviesPage(false)\r\n        setAddMoviesPage(true)\r\n    }\r\n\r\n       return(\r\n           \r\n        <div>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Movies\r\n                    </Typography>\r\n                   \r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={allMoviesButtonColor} onClick={clickedAllMovies}>All Movies</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={addMoviesButtonColor} onClick={clickedAddMovies}>Add Movie</Button>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    </Grid>\r\n                    <Grid item>\r\n                   {useSearch ? <label><TextField placeholder=\"e.g., Titanic\"  onChange={searchChanged} InputProps={{endAdornment: (<InputAdornment position=\"end\"><IconButton><SearchIcon /></IconButton></InputAdornment>)}}\r\n                            variant=\"outlined\" style={{width: 205}} size=\"small\"/><br/></label> : \"\"}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"center\">\r\n                    {allMoviesPage && filteredMovies && filteredMovies.map((item,index) => {return <div><Grid item key={index} className={classes.paper}><MovieComp movieDetails={item}/></Grid><br/></div>})}\r\n                    {addMoviesPage && <div className={classes.paper}><AddMovieComp  clickedAllMovies={clickedAllMovies}/></div>}\r\n                </Grid> \r\n           </Grid>\r\n        </div>    )\r\n}\r\n\r\nexport default MoviesComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Utils from './Utils'\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction EditMovieComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [genres, setGenres] = useState(\"\")\r\n    const [imageUrl, setImageUrl] = useState(\"\")\r\n    const [premierd, setPremierd] = useState()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [editMovie, setEditMovie] = useState(\"\")\r\n\r\n    const clickedUpdate = () =>\r\n    {\r\n        debugger;\r\n        let moviesObjtoMovies = {id : props.match.params.id , data : {Title : editMovie.data.Title, date : premierd, ImageUrl : imageUrl, Genres : genres}}\r\n        let moviesObjtoServer = {Title : editMovie.data.Title, date : premierd, ImageUrl : imageUrl, Genres : genres}\r\n        let moviesArray = movies\r\n        let movieIndex = movies.findIndex(x => x.id == moviesObjtoMovies.id )\r\n        if(movieIndex >= 0 )\r\n        {\r\n          moviesArray[movieIndex] = moviesObjtoMovies\r\n          setMovies(moviesArray)\r\n          Utils.updateServer('Movies', moviesObjtoMovies.id, moviesObjtoServer)\r\n        }\r\n    }\r\n\r\n    const updateGenres = (e) =>\r\n    {\r\n      let newGenres = e.target.value\r\n      newGenres = newGenres.split(\" \")\r\n      setGenres(newGenres)\r\n    }\r\n\r\n    const form = () => \r\n    {\r\n      let movieIndex = movies.findIndex(x => x.id == props.match.params.id )\r\n      if(movieIndex >= 0 )\r\n      {\r\n        console.log(movies[movieIndex])\r\n        setEditMovie(movies[movieIndex])\r\n        setGenres(movies[movieIndex].data.Genres)\r\n        setImageUrl(movies[movieIndex].data.ImageUrl)\r\n        setPremierd(movies[movieIndex].data.date)\r\n      }     \r\n    }\r\n\r\n    useEffect(() => {\r\n      form()\r\n    },[])\r\n   \r\n       return(\r\n        <div >\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n            {\r\n                <FormGroup className={classes.paper}>\r\n                  <h2>Edit Movie : {editMovie && editMovie.data.Title}</h2>\r\n                  Name : <TextField variant=\"outlined\" value={editMovie && editMovie.data.Title}/><br/>\r\n                  Genres : <TextField variant=\"outlined\" placeholder={editMovie && editMovie.data.Genres} onChange={updateGenres}/><br/>\r\n                  Image URL :  <TextField variant=\"outlined\" placeholder={editMovie && editMovie.data.ImageUrl} onChange={e =>setImageUrl(e.target.value)}/><br/>\r\n                  Premierd :  <TextField variant=\"outlined\" placeholder={editMovie && editMovie.data.date} onChange={e =>setPremierd(e.target.value)}/>\r\n                  <br/>\r\n                  <br/>\r\n                  <FormGroup row>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/Movies\"><Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large' onClick={clickedUpdate}></Button></Link>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/Movies\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} size='large' variant=\"contained\"></Button></Link>\r\n                 </FormGroup>    \r\n                </FormGroup>\r\n            }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMovieComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Utils from './Utils'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction EditMemberComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [editMember, setEditMember] = useState(\"\")\r\n\r\n    const clickedUpdate = () =>\r\n    {\r\n        debugger;\r\n        let MemberObjToMembers = {id : props.match.params.id , data : {Name : name, Email : email, City : city}}\r\n        let MemberObjToServer = {Name : name, Email : email, City : city}\r\n        let MembersArray = members\r\n        let MemberIndex = members.findIndex(x => x.id == MemberObjToMembers.id )\r\n        if(MemberIndex >= 0 )\r\n        {\r\n          MembersArray[MemberIndex] = MemberObjToMembers\r\n          setMembers(MembersArray)\r\n          Utils.updateServer('Members', MemberObjToMembers.id, MemberObjToServer)\r\n        }\r\n    }\r\n\r\n    const form = () => \r\n    {\r\n      let memberIndex = members.findIndex(x => x.id == props.match.params.id )\r\n      if(memberIndex >= 0 )\r\n      {\r\n        setEditMember(members[memberIndex])\r\n        setName(members[memberIndex].data.Name)\r\n        setEmail(members[memberIndex].data.Email)\r\n        setCity(members[memberIndex].data.City)\r\n      }     \r\n    }\r\n\r\n    useEffect(() => {\r\n      form()\r\n    },[])\r\n   \r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                <FormGroup className={classes.paper}>   \r\n                    <h3>Edit Member : {name}</h3>\r\n                    Name :  <TextField variant=\"outlined\" placeholder={name} onChange={e =>setName(e.target.value)}/><br/>\r\n                    Email : &nbsp;<TextField variant=\"outlined\" placeholder={email} onChange={e =>setEmail(e.target.value)}/><br/>\r\n                    City : &nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" placeholder={city} onChange={e =>setCity(e.target.value)}/><br/>\r\n                  <br/>\r\n                    <FormGroup row>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Link style={{ textDecoration: 'none' }} to=\"/Subscriptions\"><Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large' onClick={clickedUpdate}></Button></Link> \r\n                        <Link style={{ textDecoration: 'none' }} to=\"/Subscriptions\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size='large'></Button></Link>\r\n                    </FormGroup>\r\n                </FormGroup>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMemberComp;\r\n\r\n","import {useState, useEffect} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Utils from './Utils'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\n\r\nfunction EditUserComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [checked, setChecked] = useState(true);\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n      };\r\n\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                <FormGroup className={classes.paper}>\r\n                    <h3>Edit User : {props.match.params.name}</h3>\r\n                \r\n                    First Name:<TextField required id=\"outlined-basic\" value={props.match.params.name} variant=\"outlined\"/><br/>\r\n                    Last Name:<TextField required id=\"outlined-basic\" value=\"Hello World\" variant=\"outlined\" /><br/>\r\n                    User Name:<TextField required id=\"outlined-basic\" value=\"Hello World\" variant=\"outlined\" /><br/>\r\n                    Session time out (Minuts):\r\n                    <TextField required id=\"outlined-basic\" value=\"Hello World\" variant=\"outlined\" />\r\n                    <h4>Created data : </h4>\r\n                    <h3>Permissions :</h3>\r\n                    <FormGroup row>\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"View Subscription\" />\r\n                     &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Create Subscription\"/>\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Delete Subscription\"/>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Update Subscription\"/>\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"View Movies\"/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Create Movies\"/>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Delete Movies\"/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Update Movies\"/>\r\n                </FormGroup>\r\n                    \r\n                <Grid container direction=\"row\" justify=\"center\" >\r\n                    <Grid item>\r\n                       <Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large'></Button> \r\n                    </Grid>\r\n                     <Grid item>\r\n                        <Link style={{ textDecoration: 'none' }} to=\"/UsersManagment\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} size='large' variant=\"contained\"></Button></Link> \r\n                    </Grid>\r\n                </Grid> \r\n            </FormGroup>\r\n        </Grid>\r\n            \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default EditUserComp;\r\n\r\n","import {useState, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport './Main.css'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport Utils from './Utils'\r\n\r\n\r\nfunction UserComp(props)\r\n{\r\n    const [users, setUsers] = useContext(UsersContext); \r\n\r\n    const deleteUser = () =>\r\n    {\r\n        let currentUsersArray = users\r\n        let usersArrayAfterDelete = currentUsersArray.filter(x => x.id != props.userDetails.id)\r\n        setUsers(usersArrayAfterDelete)\r\n        Utils.deleteDataFromServer(\"Users\", props.userDetails.id)\r\n    }\r\n\r\n    const clickedDelete = () =>\r\n    {\r\n        confirmAlert({\r\n            title: 'Are you sure you want to delete User:',  // Title dialog\r\n            message: props.userDetails.data.name,               // Message dialog\r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => deleteUser()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n    /*\r\n    <ul>\r\n                {\r\n                    props.userDetails.data.permissions.map((item,index) => {if(item == true) return <li key={index}>{item}</li>})\r\n                }\r\n            </ul>\r\n    */\r\n   \r\n       return(\r\n        <div>\r\n            Name :  {props.userDetails.data.FirstName}  {props.userDetails.data.LastName}<br/>\r\n            User Name : {props.userDetails.data.UserName}<br/>\r\n            Session time out (Minuts) : {props.userDetails.data.SessionTimeOut}<br/>\r\n            Created data : {props.userDetails.data.CreatedDate}<br/>\r\n            Permissions:<br/>\r\n            \r\n            <Grid container direction=\"row\" justify=\"center\" >\r\n                <Grid item>\r\n                    <Link to={`/UsersManagment/Edit/${props.userDetails.id}`} style={{ textDecoration: 'none' }}><Button style={{textTransform: 'none'}} startIcon={<EditIcon />} size='large' variant=\"contained\"></Button></Link>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={{textTransform: 'none'}} variant=\"contained\" startIcon={<DeleteIcon />} size='large' onClick={clickedDelete}></Button> \r\n                </Grid>\r\n            </Grid> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserComp;\r\n\r\n","import {useState} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Utils from './Utils'\r\n\r\n\r\nfunction AddUserComp(params)\r\n{\r\n    const [fname, setFName] = useState(\"\")\r\n    const [lname, setLName] = useState(\"\")\r\n    const [userName, setUserName] = useState(\"\")\r\n    const [sessionTimeOut, setSessionTimeOut] = useState(0)\r\n    const [viewSubscription, setViewSubscription] = useState(false)\r\n    const [createSubscription, setCreateSubscription] = useState(false);\r\n    const [deleteSubscription, setDeleteSubscription] = useState(false)\r\n    const [updateSubscription, setUpdateSubscription] = useState(false)\r\n    const [viewMovies, setViewMovies] = useState(false)\r\n    const [createMovies, setCreateMovies] = useState(false)\r\n    const [deleteMovies, setDeleteMovies] = useState(false)\r\n    const [updateMovies, setUpdateMovies] = useState(false)\r\n\r\n    const clickedSave = () =>\r\n    {\r\n        debugger;\r\n        let permissionsObj = {viewSubscription : viewSubscription, createSubscription : createSubscription, deleteSubscription : deleteSubscription,\r\n            updateSubscription : updateSubscription, viewMovies : viewMovies, createMovies : createMovies, deleteMovies : deleteMovies, updateMovies : updateMovies}\r\n        let userObj = {FirstName : fname, LastName : lname, UserName : userName, SessionTimeOut : sessionTimeOut, CreatedDate : new Date(), permissions : permissionsObj}\r\n        Utils.sendDataToServer(\"Users\", userObj)\r\n    }\r\n\r\n       return(\r\n        <div>\r\n             <FormGroup>\r\n                First Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setFName(e.target.value)}/><br/>\r\n                Last Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setLName(e.target.value)}/><br/>\r\n                User Name:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setUserName(e.target.value)}/><br/>\r\n                Session time out (Minuts):&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setSessionTimeOut(e.target.value)}/>\r\n                <h4>Created data : </h4>\r\n                <h3>Permissions :</h3>\r\n            </FormGroup>\r\n            <FormGroup>\r\n            <FormControlLabel control={<Checkbox onChange={e => setViewSubscription(e.target.checked)} size=\"small\"/>}label=\"View Subscription\" name=\"View Subscription\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <FormControlLabel control={<Checkbox onChange={e => setCreateSubscription(e.target.checked)} size=\"small\"/>}label=\"Create Subscription\" name=\"Create Subscription\"/>\r\n                <FormControlLabel control={<Checkbox onChange={e => setDeleteSubscription(e.target.checked)} size=\"small\"/>}label=\"Delete Subscription\" name=\"Delete Subscription\"/>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n                <FormControlLabel control={<Checkbox onChange={e => setUpdateSubscription(e.target.checked)} size=\"small\"/>}label=\"Update Subscription\" name=\"Update Subscription\"/>\r\n                <FormControlLabel control={<Checkbox onChange={e => setViewMovies(e.target.checked)} size=\"small\"/>}label=\"View Movies\" name=\"View Movies\"/>\r\n                &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\r\n                <FormControlLabel control={<Checkbox onChange={e => setCreateMovies(e.target.checked)} size=\"small\"/>}label=\"Create Movies\" name=\"Create Movies\"/>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n                <FormControlLabel control={<Checkbox onChange={e => setDeleteMovies(e.target.checked)} size=\"small\"/>}label=\"Delete Movies\" name=\"Delete Movies\" />\r\n                &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <FormControlLabel control={<Checkbox onChange={e => setUpdateMovies(e.target.checked)} size=\"small\"/>}label=\"Update Movies\" name=\"Update Movies\"/>\r\n            </FormGroup>\r\n                \r\n            <Grid container direction=\"row\" justify=\"center\" >\r\n                <Grid item>\r\n                    <Button style={{textTransform: 'none'}} startIcon={<SaveIcon />} variant=\"contained\" size='large' onClick={clickedSave}></Button> \r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size='large' onClick={() => params.clickedAllUsers()}></Button> \r\n                </Grid>\r\n            </Grid> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUserComp;\r\n\r\n","import {useState, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport UserComp from './UserComp'\r\nimport AddUserComp from './AddUserComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(5),     \r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction SubscriptionsComp()\r\n{\r\n    const classes = useStyles()\r\n    //const [users, setMembers] = useState([{name : \"ori shalom\", userName : \"shalom.ori@gmail.com\", sessionTimeOut : \"Hod Hasharon\" , createdData : \"\", permissions : \"\"},\r\n      //                                      {name : \"anat shalom\", userName : \"anat.ori@gmail.com\", sessionTimeOut : \"TLV Hasharon\" , createdData : \"\", permissions : \"\"}])\r\n    const [allUsersButtonColor,setAllUsersButtonColor] = useState(\"primary\")\r\n    const [addUserButtonColor,setAddUserButtonColor] = useState(\"\")\r\n    const [allUsersPage, setAllUsersPage] = useState(true)\r\n    const [addUserPage, setAddUserPage] = useState(false)\r\n    const [users, setUsers] = useContext(UsersContext);\r\n\r\n    const clickedAllUsers = () => \r\n    {\r\n        setAddUserButtonColor(\"\")\r\n        setAllUsersButtonColor(\"primary\")\r\n        setAllUsersPage(true)\r\n        setAddUserPage(false)\r\n    }\r\n\r\n    const clickedAddUser = () => \r\n    {\r\n        setAllUsersButtonColor(\"\")\r\n        setAddUserButtonColor(\"primary\")\r\n        setAllUsersPage(false)\r\n        setAddUserPage(true)\r\n    }\r\n\r\n       return(\r\n        <div >\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid  item >\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Users Managment\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item >\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={allUsersButtonColor} onClick={clickedAllUsers}>All Users</Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={addUserButtonColor} onClick={clickedAddUser}>Add User</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"center\"> \r\n                    {allUsersPage && users && users.map((item,index) => {return <div><Grid item className={classes.paper}><UserComp userDetails={item}/></Grid><br/></div>})}\r\n                    {addUserPage && <Grid item className={classes.paper}><AddUserComp clickedAllUsers={clickedAllUsers}/></Grid>}\r\n                </Grid>\r\n           </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsComp;\r\n\r\n","import {useState, useEffect} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction CreateAccountComp() \r\n{\r\n    const classes = useStyles()\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n            {\r\n            <FormGroup className={classes.paper}>\r\n                       <h2>Create an Account</h2>\r\n                <TextField required id=\"outlined-basic\" label=\"User Name\" variant=\"outlined\" /><br/><br/>\r\n                <TextField required  id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" /><br/><br/>\r\n            <Grid container direction=\"row\" justify=\"center\" >\r\n                <Grid item>\r\n                    <Button style={{textTransform: 'none'}} variant=\"contained\" size='large'>Create</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/LogIn\"><Button style={{textTransform: 'none'}}  size='large' variant=\"contained\">Cancel</Button></Link>\r\n                </Grid>\r\n            </Grid>\r\n            </FormGroup>\r\n            }\r\n          </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateAccountComp;\r\n\r\n","import {useState, useContext} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link, useHistory ,Switch,Route } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {LogInContext} from './LogInContaxtApi'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    link: {\r\n        textDecoration: 'none',\r\n      },\r\n    button: {\r\n        color : 'white'\r\n      },\r\n      paper: {\r\n        padding: theme.spacing(3),\r\n        borderColor : 'black',\r\n        borderStyle: 'solid',\r\n        borderWidth: '2px',\r\n      },\r\n  }));\r\n\r\nfunction LoginComp()\r\n{\r\n    const classes = useStyles();\r\n    const [user,setUser] = useState(\"\")\r\n    const [pass,setPass] = useState(\"\")\r\n    const history = useHistory()\r\n    const [isLogedIn,setIsLogedIn] = useContext(LogInContext)\r\n\r\n    const clickedLogin = () =>\r\n    {\r\n        console.log(isLogedIn)\r\n        history.push('/')\r\n        setIsLogedIn(true)\r\n    }\r\n\r\n    const clickedNewAccount = () =>\r\n    {\r\n        history.push('/NewAccount')\r\n    }\r\n\r\n       return(\r\n        <div> \r\n           \r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                        <FormGroup className={classes.paper}>\r\n                            <h2>Log In Page</h2>\r\n                            <TextField required id=\"outlined-basic\" label=\"User Name\" variant=\"outlined\" onChange={e => setUser(e.target.value)}/><br/>\r\n                            <TextField required  id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" onChange={e => setPass(e.target.value)}/><br/>\r\n                            <Grid container direction=\"row\" justify=\"center\" >\r\n                                <Grid item>\r\n                                    <Button style={{textTransform: 'none'}} variant=\"contained\" onClick={clickedLogin}>Login</Button>\r\n                                </Grid>\r\n                                <Grid item container direction=\"column\" alignItems=\"center\"><br/>\r\n                                    Don't have an account yet? \r\n                                <Button style={{textTransform: 'none'}} variant=\"contained\" onClick={clickedNewAccount}>Create A New Account</Button>\r\n                            </Grid>\r\n                            </Grid>\r\n                        </FormGroup>       \r\n                    </Grid>\r\n                \r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginComp;\r\n\r\n","import {useState, useEffect} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link, useHistory ,Switch,Route } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {LogInContext} from './LogInContaxtApi'\r\n\r\n\r\nfunction EntryComp()\r\n{\r\n    \r\n\r\n       return(\r\n        <div> \r\n           \r\n                  \r\n                \r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EntryComp;\r\n\r\n","import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport {Link, Switch,Route} from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Utils from './Utils'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport { MoviesContext } from \"./MoviesContaxtApi\";\r\nimport {MembersContext} from './MembersContextApi'\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport {LogInContext} from './LogInContaxtApi'\r\nimport { SubscriptionsContext } from './SubscriptionsContaxtApi'\r\nimport SubscriptionsComp from './SubscriptionsComp'\r\nimport MoviesComp from './MoviesComp'\r\nimport EditMovieComp from './EditMovieComp'\r\nimport EditMemberComp from './EditMemberComp'\r\nimport EditUserComp from './EditUserComp'\r\nimport UserManagmentComp from './UsersManagmentComp'\r\nimport CreateAccountComp from './CreatAccountComp'\r\nimport LoginComp from './LoginComp'\r\nimport EntryComp from './EntryComp'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appbar: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n      },\r\n    button: {\r\n        color : 'white'\r\n      },\r\n      paper: {\r\n        padding: theme.spacing(3),\r\n        borderColor : 'black',\r\n        borderStyle: 'solid',\r\n        borderWidth: '2px',\r\n      },\r\n  }));\r\n\r\nfunction MainComp()\r\n{\r\n    const classes = useStyles();\r\n    const [isAdmin,setIsAdmin] = useState(true)\r\n    const [isLogedIn,setIsLogedIn] = useContext(LogInContext)\r\n    const [movies, setMovies] = useContext(MoviesContext)\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [users, setUsers] = useContext(UsersContext);\r\n    const [subscriptions, setSubscriptions] = useContext(SubscriptionsContext);\r\n\r\n    const clickedLogOut = () =>\r\n    {\r\n        confirmAlert({\r\n            title: 'Are you sure you want to Log Out?',                        // Title dialog\r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  //onClick: () => deleteMovie()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n    const getUsers = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Users\")\r\n        setUsers(res)\r\n    }\r\n\r\n    const getMovies = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Movies\")\r\n        setMovies(res)\r\n    }\r\n\r\n    const getMembers = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Members\")\r\n        setMembers(res)\r\n    }\r\n\r\n    const getSubscriptions = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Subscriptions\")\r\n        setSubscriptions(res)\r\n    }\r\n\r\n    useEffect( async () => {\r\n        console.log(\"useEffect in main\")\r\n        getMovies()\r\n        getMembers()\r\n        getUsers()\r\n        getSubscriptions()\r\n        console.log(isLogedIn)\r\n    },[])\r\n   \r\n       return(\r\n        <div >\r\n           <AppBar position=\"sticky\" className={classes.appbar}>\r\n          <Toolbar >\r\n              <Grid container direction=\"row\" justify=\"center\" spacing={5}>\r\n                    <Grid item>\r\n                       {isLogedIn \r\n                        ? <Link to=\"/Movies\" className={classes.link}><Button className={classes.button} >Movies</Button></Link>\r\n                        : <Link to=\"/LogIn\" className={classes.link}><Button className={classes.button} >Log In</Button></Link> \r\n                       }\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {isLogedIn \r\n                            ? <Link to=\"/Subscriptions\" className={classes.link}><Button className={classes.button}>Subscriptions</Button></Link>\r\n                            : <Link to=\"/NewAccount\" className={classes.link}><Button className={classes.button}>Sign In</Button></Link>\r\n                        }\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {isAdmin && isLogedIn && <Link to=\"/UsersManagment\" className={classes.link}><Button className={classes.button}>User Managment</Button></Link>}\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {isLogedIn ? <Button className={classes.button} startIcon={<ExitToAppIcon />} onClick={clickedLogOut}>Log Out</Button> : \"\"}\r\n                    </Grid>\r\n                </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={EntryComp}/>    \r\n            <Route path=\"/LogIn\" component={LoginComp}/>   \r\n            <Route path=\"/NewAccount\" component={CreateAccountComp}/>\r\n            <Route path=\"/Movies/Edit/:id\" component={EditMovieComp}/>\r\n            <Route path=\"/Movies\" component={MoviesComp}/>\r\n            <Route path=\"/Subscriptions/Edit/:id\" component={EditMemberComp}/>\r\n            <Route path=\"/Subscriptions\" component={SubscriptionsComp}/>\r\n            <Route path=\"/UsersManagment/Edit/:id\" component={EditUserComp}/>\r\n            <Route path=\"/UsersManagment\" component={UserManagmentComp}/>       \r\n        </Switch>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainComp;\r\n\r\n","import {useEffect} from 'react'\r\nimport Utils from './Utils'\r\nimport { MoviesContextProvider } from \"./MoviesContaxtApi\"\r\nimport { MembersContextProvider } from './MembersContextApi'\r\nimport { UsersContextProvider } from './UsersContaxtApi'\r\nimport { SubscriptionsContextProvider } from './SubscriptionsContaxtApi'\r\nimport { LogInContextProvider } from './LogInContaxtApi'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SubscriptionsComp from './SubscriptionsComp'\r\nimport MoviesComp from './MoviesComp'\r\nimport EditMovieComp from './EditMovieComp'\r\nimport EditMemberComp from './EditMemberComp'\r\nimport EditUserComp from './EditUserComp'\r\nimport UserManagmentComp from './UsersManagmentComp'\r\nimport CreateAccountComp from './CreatAccountComp'\r\nimport LoginComp from './LoginComp'\r\nimport MainComp from './MainComp'\r\nimport {Link, Switch,Route} from 'react-router-dom'\r\n\r\nfunction WrapperComp()\r\n{\r\n    const loadMembersToServer = async () =>\r\n    {\r\n        let usersUrl = \"https://jsonplaceholder.typicode.com/users\"\r\n        let users = []\r\n        users = await Utils.getAllItems(usersUrl)\r\n\r\n        let usersObj = []\r\n        usersObj = users.map(item => \r\n        {\r\n            return {Name : item.name, Email : item.email, City : item.address.city}\r\n        })\r\n\r\n        usersObj.forEach(x => Utils.sendDataToServer(\"Members\", x))\r\n    }\r\n\r\n    const loadMoviesToServer = async () =>\r\n    {\r\n        let moviesUrl = \"https://api.tvmaze.com/shows\"\r\n        let movies = []\r\n        movies = await Utils.getAllItems(moviesUrl)\r\n\r\n        let moviesObj = []\r\n        moviesObj = movies.map(item => \r\n        {\r\n            return {Title : item.name, date : item.premiered, ImageUrl : item.image.medium, Genres : item.genres}\r\n        })\r\n\r\n        moviesObj.forEach(x => Utils.sendDataToServer(\"Movies\", x))\r\n    }\r\n\r\n    useEffect( async () => {\r\n        //loadMembersToServer()\r\n        //loadMoviesToServer()\r\n    },[])\r\n\r\n       return(\r\n        <div>\r\n             <Typography variant=\"h3\" gutterBottom align=\"center\">\r\n                Movies - Subscription Web Site\r\n            </Typography>\r\n            \r\n            <LogInContextProvider>\r\n            <SubscriptionsContextProvider>\r\n            <UsersContextProvider>\r\n            <MembersContextProvider>\r\n            <MoviesContextProvider>\r\n                <MainComp />\r\n            </MoviesContextProvider>\r\n            </MembersContextProvider>\r\n            </UsersContextProvider>\r\n            </SubscriptionsContextProvider>\r\n            </LogInContextProvider>\r\n            \r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WrapperComp;\r\n\r\n","import './App.css';\nimport WrapperComp from './components/WrapperComp'\n\nfunction App() {\n  return (\n    <div >\n      <WrapperComp /> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n <Router>\n    <App />\n    </Router>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}