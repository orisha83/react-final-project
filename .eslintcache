[{"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\index.js":"1","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\App.js":"2","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\reportWebVitals.js":"3","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\firebase.js":"4","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\Utils.js":"5","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\LoginComp.js":"6","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MainComp.js":"7","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditUserComp.js":"8","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddUserComp.js":"9","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesComp.js":"10","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MovieComp.js":"11","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionWatchedComp.js":"12","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddMovieComp.js":"13","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionsComp.js":"14","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MemberComp.js":"15","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesWatchedComp.js":"16","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\WrapperComp.js":"17","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddMemberComp.js":"18","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UsersManagmentComp.js":"19","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UserComp.js":"20","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditMemberComp.js":"21","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditMovieComp.js":"22","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesContaxtApi.js":"23","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MembersContextApi.js":"24","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UsersContaxtApi.js":"25","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionsContaxtApi.js":"26","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\CreatAccountComp.js":"27","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\LogInContaxtApi.js":"28","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EntryComp.js":"29"},{"size":538,"mtime":1611046555530,"results":"30","hashOfConfig":"31"},{"size":173,"mtime":1611178450579,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"31"},{"size":649,"mtime":1609859012217,"results":"34","hashOfConfig":"31"},{"size":1342,"mtime":1611048197125,"results":"35","hashOfConfig":"31"},{"size":3797,"mtime":1611520453723,"results":"36","hashOfConfig":"31"},{"size":7479,"mtime":1611520152956,"results":"37","hashOfConfig":"31"},{"size":10423,"mtime":1611519864257,"results":"38","hashOfConfig":"31"},{"size":7944,"mtime":1611508120601,"results":"39","hashOfConfig":"31"},{"size":5868,"mtime":1611520667830,"results":"40","hashOfConfig":"31"},{"size":4819,"mtime":1611519864257,"results":"41","hashOfConfig":"31"},{"size":2051,"mtime":1611519864257,"results":"42","hashOfConfig":"31"},{"size":2869,"mtime":1611520667773,"results":"43","hashOfConfig":"31"},{"size":4333,"mtime":1611520275457,"results":"44","hashOfConfig":"31"},{"size":4739,"mtime":1611519864257,"results":"45","hashOfConfig":"31"},{"size":7808,"mtime":1611520667833,"results":"46","hashOfConfig":"31"},{"size":2192,"mtime":1611520575737,"results":"47","hashOfConfig":"31"},{"size":2486,"mtime":1611047041963,"results":"48","hashOfConfig":"31"},{"size":2719,"mtime":1611519932030,"results":"49","hashOfConfig":"31"},{"size":3028,"mtime":1611519917998,"results":"50","hashOfConfig":"31"},{"size":3444,"mtime":1611520667832,"results":"51","hashOfConfig":"31"},{"size":3818,"mtime":1611520662499,"results":"52","hashOfConfig":"31"},{"size":357,"mtime":1610642808126,"results":"53","hashOfConfig":"31"},{"size":365,"mtime":1610642880044,"results":"54","hashOfConfig":"31"},{"size":349,"mtime":1610803513750,"results":"55","hashOfConfig":"31"},{"size":413,"mtime":1610899358683,"results":"56","hashOfConfig":"31"},{"size":3253,"mtime":1611520032682,"results":"57","hashOfConfig":"31"},{"size":646,"mtime":1611417381240,"results":"58","hashOfConfig":"31"},{"size":182,"mtime":1611518784322,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"ze8j8d",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\index.js",[],["129","130"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\App.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\reportWebVitals.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\firebase.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\Utils.js",["131"],"import firebase from '../firebase'\r\nimport axios from 'axios'\r\n\r\nlet firestore = firebase.firestore();\r\n\r\nconst getDataFromServer = async function (collection) \r\n{\r\n    let snapshot = await firestore.collection(collection).get()\r\n    let DataArr = []\r\n    let myData = \"\"\r\n    snapshot.forEach(doc =>{\r\n        myData = {data : doc.data() , id : doc.id}\r\n        DataArr.push(myData)\r\n    })\r\n    return DataArr\r\n}\r\n\r\nconst getSpecificDocFromServer = async function (collection, docId) \r\n{\r\n    let snapshot = firestore.collection(collection).doc(docId)\r\n    let doc = await snapshot.get()\r\n    if(doc){\r\n        return doc.data()\r\n    }\r\n}\r\n\r\nconst deleteDataFromServer = async function (collection, id ) \r\n{\r\n    let response = await firestore.collection(collection).doc(id).delete()\r\n    return response\r\n}\r\n\r\nconst sendDataToServer = async function (collection, jsonObj ) \r\n{\r\n    let response = await firestore.collection(collection).add(jsonObj)\r\n    return response\r\n}\r\n\r\nconst updateServer = function (collection, id , jsonObj ) \r\n{\r\n    firestore.collection(collection).doc(id).set(jsonObj)\r\n}\r\n\r\nconst getAllItems = async function(url)\r\n{\r\n  let user = await axios.get(url)\r\n  return user.data\r\n}\r\n\r\nexport default {sendDataToServer, getDataFromServer, getAllItems, updateServer, deleteDataFromServer, getSpecificDocFromServer};\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\LoginComp.js",["132","133","134","135","136","137","138"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MainComp.js",["139","140","141","142","143","144","145","146"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditUserComp.js",["147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],"import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport Utils from './Utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\n\r\nfunction EditUserComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [users, setUsers] = useContext(UsersContext);\r\n    const [editUser, setEditUser] = useState(\"\")\r\n    \r\n    const [fname, setFName] = useState(\"\")\r\n    const [lname, setLName] = useState(\"\")\r\n    const [userName, setUserName] = useState(\"\")\r\n    const [sessionTimeOut, setSessionTimeOut] = useState(0)\r\n\r\n    const [viewSubscription, setViewSubscription] = useState(\"\")\r\n    const [createSubscription, setCreateSubscription] = useState(\"\");\r\n    const [deleteSubscription, setDeleteSubscription] = useState(\"\")\r\n    const [updateSubscription, setUpdateSubscription] = useState(\"\")\r\n    const [viewMovies, setViewMovies] = useState(\"\")\r\n    const [createMovies, setCreateMovies] = useState(\"\")\r\n    const [deleteMovies, setDeleteMovies] = useState(\"\")\r\n    const [updateMovies, setUpdateMovies] = useState(\"\")\r\n\r\n\r\n    const assignCheckBoxses = () =>\r\n    {\r\n        if(editUser != \"\")\r\n        {                \r\n            editUser.data.Permissions.forEach(item =>\r\n            {\r\n                switch(item) {\r\n                    case 'Delete Movies': \r\n                    setDeleteMovies(\"Delete Movies\")\r\n                    break;\r\n                \r\n                    case 'Create Movies':  \r\n                    setCreateMovies(\"Create Movies\")\r\n                    break;\r\n\r\n                    case 'Update Movies':  \r\n                    setUpdateMovies(\"Update Movies\")\r\n                    break;\r\n                \r\n                    case 'View Movies':  \r\n                    setViewMovies(\"View Movies\")\r\n                    break;\r\n\r\n                    case 'Create Subscription': \r\n                    setCreateSubscription(\"Create Subscription\")\r\n                    break;\r\n                \r\n                    case 'Delete Subscription': \r\n                    setDeleteSubscription(\"Delete Subscription\")\r\n                    break;\r\n\r\n                    case 'Update Subscription': \r\n                    setUpdateSubscription(\"Update Subscription\")\r\n                    break;\r\n                \r\n                    case 'View Subscription':  \r\n                    setViewSubscription(\"View Subscription\")\r\n                    break;\r\n                \r\n                    default:\r\n                    //code here\r\n                    break;\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const clickedUpdate = () =>\r\n    {\r\n        let permissionsObj = []\r\n        if(viewSubscription != \"\")\r\n        permissionsObj.push(viewSubscription)\r\n        \r\n        if(createSubscription != \"\")\r\n        permissionsObj.push(createSubscription)\r\n        \r\n        if(deleteSubscription != \"\")\r\n        permissionsObj.push(deleteSubscription)\r\n\r\n        if(updateSubscription != \"\")\r\n        permissionsObj.push(updateSubscription)\r\n\r\n        if(viewMovies != \"\")\r\n        permissionsObj.push(viewMovies)\r\n\r\n        if(createMovies != \"\")\r\n        permissionsObj.push(createMovies)\r\n\r\n        if(deleteMovies != \"\")\r\n        permissionsObj.push(deleteMovies)\r\n\r\n        if(updateMovies != \"\")\r\n        permissionsObj.push(updateMovies)\r\n\r\n        let UserToUsers = {id : props.match.params.id , data : {FirstName : fname, LastName : lname, UserName : userName, SessionTimeOut : sessionTimeOut, CreatedDate : editUser.data.CreatedDate, Permissions : permissionsObj}}\r\n        let UserObjToServer = {FirstName : fname, LastName : lname, UserName : userName, SessionTimeOut : sessionTimeOut, CreatedDate : editUser.data.CreatedDate, Permissions : permissionsObj}\r\n        let UsersArray = users\r\n        let UserIndex = users.findIndex(x => x.id == UserToUsers.id )\r\n        if(UserIndex >= 0 )\r\n        {\r\n            UsersArray[UserIndex] = UserToUsers\r\n            setUsers(UsersArray)\r\n             Utils.updateServer('Users', UserToUsers.id, UserObjToServer)\r\n        }\r\n    }\r\n\r\n    const form = () => \r\n    {\r\n      let userIndex = users.findIndex(x => x.id == props.match.params.id )\r\n      if(userIndex >= 0 )\r\n      {\r\n        setEditUser(users[userIndex])\r\n        setFName(users[userIndex].data.FirstName)\r\n        setLName(users[userIndex].data.LastName)\r\n        setUserName(users[userIndex].data.UserName)\r\n        setSessionTimeOut(users[userIndex].data.SessionTimeOut)\r\n      }     \r\n    }\r\n\r\n    useEffect(() => {\r\n      form()\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        assignCheckBoxses()\r\n      },[editUser])\r\n\r\n\r\n      useEffect(() =>\r\n    {\r\n        if(createSubscription != \"\" && deleteSubscription != \"\" && updateSubscription != \"\")\r\n        {\r\n            setViewSubscription(\"View Subscription\")\r\n        }\r\n        else\r\n        {\r\n            setViewSubscription(\"\")\r\n        }\r\n    },[createSubscription, deleteSubscription, updateSubscription])\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(createMovies != \"\" && deleteMovies != \"\" && updateMovies != \"\")\r\n        {\r\n            setViewMovies(\"View Movies\")\r\n        }\r\n        else\r\n        {\r\n            setViewMovies(\"\")\r\n        }\r\n    },[createMovies, deleteMovies, updateMovies])\r\n\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                <FormGroup className={classes.paper}>\r\n                    <h3>Edit User : {props.match.params.name}</h3>\r\n                \r\n                    First Name:<TextField required id=\"outlined-basic\" placeholder={editUser && editUser.data.FirstName} onChange={e =>setFName(e.target.value)} variant=\"outlined\"/><br/>\r\n                    Last Name:<TextField required id=\"outlined-basic\" placeholder={editUser && editUser.data.LastName} onChange={e =>setLName(e.target.value)} variant=\"outlined\" /><br/>\r\n                    User Name:<TextField required id=\"outlined-basic\" placeholder={editUser && editUser.data.UserName} onChange={e =>setUserName(e.target.value)} variant=\"outlined\" /><br/>\r\n                    Session time out (Minuts):\r\n                    <TextField required id=\"outlined-basic\" placeholder={editUser && editUser.data.SessionTimeOut} onChange={e =>setSessionTimeOut(e.target.value)} variant=\"outlined\" /><br/>\r\n                    Created date : {editUser && editUser.data.CreatedDate.toDate().toString()}<br/>\r\n                    <h3>Permissions :</h3>\r\n                    <FormGroup row>\r\n                        <FormControlLabel control={<Checkbox checked={viewSubscription} onChange={e => {if(e.target.checked){setViewSubscription(e.target.name)}else{setViewSubscription(\"\")}}} size=\"small\"/>}label=\"View Subscription\" name=\"View Subscription\"/>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <FormControlLabel control={<Checkbox checked={createSubscription} onChange={e => {if(e.target.checked){setCreateSubscription(e.target.name)}else{setCreateSubscription(\"\")}}} size=\"small\"/>}label=\"Create Subscription\" name=\"Create Subscription\"/>\r\n                        <FormControlLabel control={<Checkbox checked={deleteSubscription} onChange={e => {if(e.target.checked){setDeleteSubscription(e.target.name)}else{setDeleteSubscription(\"\")}}} size=\"small\"/>}label=\"Delete Subscription\" name=\"Delete Subscription\"/>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <FormControlLabel control={<Checkbox checked={updateSubscription} onChange={e => {if(e.target.checked){setUpdateSubscription(e.target.name)}else{setUpdateSubscription(\"\")}}} size=\"small\"/>}label=\"Update Subscription\" name=\"Update Subscription\"/>\r\n                        <FormControlLabel control={<Checkbox checked={viewMovies} onChange={e => {if(e.target.checked){setViewMovies(e.target.name)}else{setViewMovies(\"\")}}} size=\"small\"/>}label=\"View Movies\" name=\"View Movies\"/>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\r\n                        <FormControlLabel control={<Checkbox checked={createMovies} onChange={e => {if(e.target.checked){setCreateMovies(e.target.name)}else{setCreateMovies(\"\")}}} size=\"small\"/>}label=\"Create Movies\" name=\"Create Movies\"/>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <FormControlLabel control={<Checkbox checked={deleteMovies} onChange={e => {if(e.target.checked){setDeleteMovies(e.target.name)}else{setDeleteMovies(\"\")}}} size=\"small\"/>}label=\"Delete Movies\" name=\"Delete Movies\"/>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <FormControlLabel control={<Checkbox checked={updateMovies} onChange={e => {if(e.target.checked){setUpdateMovies(e.target.name)}else{setUpdateMovies(\"\")}}} size=\"small\"/>}label=\"Update Movies\" name=\"Update Movies\"/>\r\n                    </FormGroup>\r\n                    \r\n                <Grid container direction=\"row\" justify=\"center\" >\r\n                    <Grid item>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/UsersManagment\"><Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large' onClick={clickedUpdate}></Button></Link>\r\n                    </Grid>\r\n                     <Grid item>\r\n                        <Link style={{ textDecoration: 'none' }} to=\"/UsersManagment\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} size='large' variant=\"contained\"></Button></Link> \r\n                    </Grid>\r\n                </Grid> \r\n            </FormGroup>\r\n        </Grid>\r\n            \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default EditUserComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddUserComp.js",["166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesComp.js",["189","190","191","192","193","194","195","196","197","198","199"],"import {useState, useEffect, useContext } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MovieComp from './MovieComp'\r\nimport AddMovieComp from './AddMovieComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { MoviesContext } from \"./MoviesContaxtApi\";\r\nimport {LogInContext} from './LogInContaxtApi'\r\nimport {UsersContext} from './UsersContaxtApi'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction MoviesComp()\r\n{\r\n    const [allMoviesButtonColor,setAllMoviesButtonColor] = useState(\"primary\")\r\n    const classes = useStyles()\r\n    const [useSearch, setUseSearch] = useState(true)\r\n    const [addMoviesButtonColor,setAddMoviesButtonColor] = useState(\"\")\r\n    const [searchWord, setSearchWord] = useState(\"\")\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [allMoviesPage, setAllMoviesPage] = useState(true)\r\n    const [addMoviesPage, setAddMoviesPage] = useState(false)\r\n    const [filteredMovies, setFilteredMovies] = useState()\r\n    const {logInUser} = useContext(LogInContext)\r\n    const [logInUserVar,setLogInUserVar] = logInUser\r\n    const [users, setUsers] = useContext(UsersContext);\r\n    const [permissionsObj, setPermissionsObj] = useState()\r\n    const [showViewParam, setShowViewParam] = useState(false)\r\n    const [showCreateParam, setShowCreateParam] = useState(false)\r\n\r\n\r\n    let searchChanged =  (e) =>\r\n    {\r\n        setSearchWord(e.target.value.toUpperCase())\r\n    }\r\n\r\n    const checkWhichBottonsToShow = () =>\r\n    {\r\n      let currentUser = users.find(x => x.data.UserName == logInUserVar.user)\r\n      if(currentUser)\r\n      {\r\n        let showEditParam = false\r\n        let showDeleteParam = false\r\n        currentUser.data.Permissions.forEach(item => {\r\n          if(item == \"Update Movies\")\r\n          {\r\n            showEditParam = true\r\n          }\r\n          if(item == \"Delete Movies\")\r\n          {\r\n            showDeleteParam = true\r\n          }\r\n          if(item == \"View Movies\")\r\n          {\r\n            setShowViewParam(true)\r\n          }\r\n          if(item == \"Create Movies\")\r\n          {\r\n            setShowCreateParam(true)\r\n          }\r\n        })\r\n        setPermissionsObj({showEdit : showEditParam, showDelete : showDeleteParam})\r\n      }\r\n    }\r\n\r\n    let page = () =>\r\n    {\r\n        console.log(\"page\")\r\n        let filteredMovies\r\n        if(searchWord != \"\")\r\n        {\r\n            filteredMovies = movies.filter(x => x.data.Title.toUpperCase().startsWith(searchWord))\r\n        }\r\n        else\r\n        {\r\n            filteredMovies = movies\r\n        }\r\n        setFilteredMovies(filteredMovies)\r\n    }\r\n\r\n    useEffect(() => \r\n    {\r\n        checkWhichBottonsToShow()\r\n    },[])\r\n\r\n    useEffect(() =>  {\r\n        page()\r\n    },[searchWord, movies])\r\n\r\n    const clickedAllMovies = () => \r\n    {\r\n        setSearchWord(\"\")\r\n        setAddMoviesButtonColor(\"\")\r\n        setAllMoviesButtonColor(\"primary\")\r\n        setUseSearch(true)\r\n        setAllMoviesPage(true)\r\n        setAddMoviesPage(false)\r\n        page()\r\n    }\r\n\r\n    const clickedAddMovies = () => \r\n    {\r\n        setAllMoviesButtonColor(\"\")\r\n        setAddMoviesButtonColor(\"primary\")\r\n        setUseSearch(false)\r\n        setAllMoviesPage(false)\r\n        setAddMoviesPage(true)\r\n    }\r\n\r\n       return(\r\n           \r\n        <div>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Movies\r\n                    </Typography>\r\n                   \r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={allMoviesButtonColor} onClick={clickedAllMovies}>All Movies</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {showCreateParam && <Button style={{textTransform: 'none'}} variant=\"contained\" color={addMoviesButtonColor} onClick={clickedAddMovies}>Add Movie</Button>}\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    </Grid>\r\n                    <Grid item>\r\n                   {useSearch ? <label><TextField placeholder=\"e.g., Titanic\"  onChange={searchChanged} InputProps={{endAdornment: (<InputAdornment position=\"end\"><IconButton><SearchIcon /></IconButton></InputAdornment>)}}\r\n                            variant=\"outlined\" style={{width: 205}} size=\"small\"/><br/></label> : \"\"}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"center\">\r\n                    {showViewParam ? \"\" : <div>You Don't Have \"View Movies\" Permissions!</div>}\r\n                    {allMoviesPage && showViewParam && filteredMovies && filteredMovies.map((item,index) => {return <div><Grid item key={index} className={classes.paper}><MovieComp movieDetails={item} userPermissions={permissionsObj}/></Grid><br/></div>})}\r\n                    {addMoviesPage && <div className={classes.paper}><AddMovieComp  clickedAllMovies={clickedAllMovies}/></div>}\r\n                </Grid> \r\n           </Grid>\r\n        </div>    )\r\n}\r\n\r\nexport default MoviesComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MovieComp.js",["200","201","202","203","204","205","206","207","208"],"import {useContext, useEffect, useState} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport SubscriptionWatchedComp from \"./SubscriptionWatchedComp\"\r\nimport {Link} from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport {LogInContext} from './LogInContaxtApi'\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport Utils from './Utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction MovieComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [movie, setMovie] = useState()\r\n    const [showEdit, setShowEdit] = useState(false)\r\n    const [showDelete, setShowDelete] = useState(false)\r\n    const {logInUser} = useContext(LogInContext)\r\n    const [logInUserVar,setLogInUserVar] = logInUser\r\n    const [users, setUsers] = useContext(UsersContext);\r\n\r\n    const deleteMovie = () =>\r\n    {\r\n        let currentMoviesArray = movies\r\n        let moviesArrayAfterDelete = currentMoviesArray.filter(x => x.id != props.movieDetails.id)\r\n        setMovies(moviesArrayAfterDelete)\r\n        Utils.deleteDataFromServer(\"Movies\", props.movieDetails.id)\r\n    }\r\n\r\n    const clickedDelete = () =>\r\n    {\r\n        confirmAlert({\r\n            title: 'Are you sure you want to delete the movie:',                        // Title dialog\r\n            message: props.movieDetails.data.Title,               // Message dialog\r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => deleteMovie()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n    const checkWhichBottonsToShow = () =>\r\n    {\r\n      let currentUser = users.find(x => x.data.UserName == logInUserVar.user)\r\n      if(currentUser)\r\n      {\r\n          currentUser.data.Permissions.forEach(item => {\r\n          if(item == \"Update Movies\")\r\n          {\r\n            setShowEdit(true)\r\n          }\r\n          if(item == \"Delete Movies\")\r\n          {\r\n            setShowDelete(true)\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n    useEffect(() =>\r\n    {\r\n        \r\n        if(props.movieDetails)\r\n        {\r\n            setMovie(props.movieDetails)\r\n            setShowEdit(props.userPermissions.showEdit)\r\n            setShowDelete(props.userPermissions.showDelete)\r\n        }\r\n        else if(props.match.params.id)\r\n        {\r\n            let newMovie = movies.find(x => x.id == props.match.params.id)\r\n            if(newMovie)\r\n            {\r\n              setMovie(newMovie)\r\n              checkWhichBottonsToShow()\r\n            }\r\n        }\r\n    },[])\r\n    \r\n    return(\r\n        \r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                    <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n                    {movie && movie.data.Title} , {movie && movie.data.date}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                    Genres: {movie && movie.data.Genres.join(\", \")}\r\n                    </Typography>\r\n               </Grid>\r\n                <Grid item>    \r\n                </Grid>\r\n                <Grid  container direction=\"row\" justify=\"space-around\" alignItems=\"flex-start\" >\r\n                    <Grid item  >\r\n                        {movie && <img src={movie.data.ImageUrl} width=\"200\" height=\"300\"/> }\r\n                    </Grid>\r\n                    <Grid item  className={classes.paper}>\r\n                        {movie && <SubscriptionWatchedComp movieId={movie.id}/>}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                   {movie &&  showEdit && <Link to={`/Movies/Edit/${movie.id}`} style={{ textDecoration: 'none' }}>\r\n                        <Button style={{textTransform: 'none'}} size='large' startIcon={<EditIcon />} variant=\"contained\"></Button></Link>}\r\n                   {showDelete && <Button style={{textTransform: 'none'}} size='large' variant=\"contained\" startIcon={<DeleteIcon />} onClick={clickedDelete}></Button>}\r\n                </Grid>\r\n            </Grid>\r\n        \r\n    )\r\n}\r\n\r\nexport default MovieComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionWatchedComp.js",["209","210","211","212","213"],"import {useState, useEffect, useContext} from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { SubscriptionsContext } from './SubscriptionsContaxtApi'\r\nimport {MembersContext} from './MembersContextApi'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nfunction SubscriptionsWatchedComp(props)\r\n{\r\n   const [subscriptions, setSubscriptions] = useContext(SubscriptionsContext);\r\n   const [members, setMembers] = useContext(MembersContext);\r\n   const [subscriptionAndDatesArray, setSubscriptionAndDatesArray] = useState([])\r\n\r\n   const createSubscriptionsArray = () =>\r\n    {\r\n        let subscriptionAndDatesArray = []\r\n        let subscriptionAndDatesObj = {}\r\n        let Member = {}\r\n\r\n        subscriptions.forEach(function(element)\r\n        {\r\n            element.data.Movies.forEach(function(item)\r\n            {\r\n                if(item.MovieId == props.movieId)\r\n                {\r\n                    Member = members.find(x => x.id == element.data.MemberId)\r\n                    if(Member)\r\n                    {\r\n                        subscriptionAndDatesObj = {memberId : Member.id, MemberName : Member.data.Name, date : item.DateWatched}\r\n                        subscriptionAndDatesArray.push(subscriptionAndDatesObj)\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        setSubscriptionAndDatesArray(subscriptionAndDatesArray)\r\n    }\r\n\r\n   useEffect(() =>\r\n   {\r\n    createSubscriptionsArray()\r\n   },[])\r\n\r\n\r\n       return(\r\n        <div>\r\n          <Typography variant=\"h5\" variantMapping=\"h1\" gutterBottom align=\"center\">\r\n                        Subscriptions watched\r\n                    </Typography>\r\n            \r\n            <ul>\r\n              {\r\n                  subscriptionAndDatesArray.map((item,index) =>{\r\n                      return <li key={index}><Link to={`/Member/${item.memberId}`}>{item.MemberName}</Link>, {item.date}</li>\r\n                  })\r\n              }\r\n            </ul>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsWatchedComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddMovieComp.js",["214","215"],"import {useState, useContext, useEffect, useRef} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport Utils from './Utils'\r\n\r\n\r\nconst AddMovieComp = (params) =>\r\n{\r\n    const [title, setTitle] = useState(\"\")\r\n    const [genres, setGenres] = useState(\"\")\r\n    const [imageUrl, setImageUrl] = useState(\"\")\r\n    const [premierd, setPremierd] = useState()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [newId, setNewId] = useState(0)\r\n    const [pressed, setPressed] = useState(false)\r\n\r\n    const clickedSave = async () =>\r\n    {\r\n        let genresArry = genres.split(\" \")\r\n        let moviesObj = {Title : title, date : premierd, ImageUrl : imageUrl, Genres : genresArry}\r\n        let res = await Utils.sendDataToServer('Movies', moviesObj)\r\n        setNewId(res.id)\r\n        params.clickedAllMovies()\r\n    }\r\n\r\n    const initialRender = useRef(true);\r\n    useEffect(() =>\r\n    {\r\n        console.log(\"useEffect - 1\")\r\n        if(initialRender.current){\r\n            console.log(\"useEffect - 2\")\r\n            initialRender.current = false;\r\n        }else{\r\n                console.log(\"useEffect - 3\")\r\n                let genresArry = genres.split(\" \")\r\n                let moviesObjtoMovies = {id : newId , data : {Title : title, date : premierd, ImageUrl : imageUrl, Genres : genresArry}}\r\n                let currentMoviesArray = movies\r\n                currentMoviesArray.push(moviesObjtoMovies)\r\n                setMovies(currentMoviesArray)\r\n                setPressed(true)\r\n            }\r\n    },[newId])\r\n\r\n    return(\r\n        <div>\r\n            <br/>\r\n            <FormGroup>\r\n                Name :  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setTitle(e.target.value)}/><br/>\r\n                Genres : &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" size=\"small\" onChange={e =>setGenres(e.target.value)}/><br/>\r\n                Image URL : <TextField variant=\"outlined\" size=\"small\" onChange={e =>setImageUrl(e.target.value)}/><br/>\r\n                Premierd : &nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" size=\"small\" onChange={e =>setPremierd(e.target.value)}/>\r\n            </FormGroup><br/><br/>\r\n\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Button style={{textTransform: 'none'}} startIcon={<SaveIcon />} size=\"large\" variant=\"contained\" onClick={clickedSave}></Button>  \r\n            <Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size=\"large\" onClick={() => params.clickedAllMovies()}></Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMovieComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionsComp.js",["216","217","218","219","220","221","222","223","224"],"import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport MemberComp from './MemberComp'\r\nimport AddMemberComp from './AddMemberComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {LogInContext} from './LogInContaxtApi'\r\nimport {UsersContext} from './UsersContaxtApi'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n  /*\r\n  useState([{Name : \"ori shalom\", Email : \"shalom.ori@gmail.com\", City : \"Hod Hasharon\"},\r\n                                            {Name : \"Anat shalom\", Email : \"anatbarer@gmail.com\", City : \"TLV\"}])\r\n                                            */\r\n\r\nfunction SubscriptionsComp()\r\n{\r\n    const classes = useStyles()\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [allMembersPage, setAllMembersPage] = useState(true)\r\n    const [addMembersPage, setAddMembersPage] = useState(false)\r\n    const [allMembersButtonColor,setAllMembersButtonColor] = useState(\"primary\")\r\n    const [addMembersButtonColor,setAddMembersButtonColor] = useState(\"\")\r\n    const {logInUser} = useContext(LogInContext)\r\n    const [logInUserVar,setLogInUserVar] = logInUser\r\n    const [users, setUsers] = useContext(UsersContext);\r\n    const [permissionsObj, setPermissionsObj] = useState()\r\n    const [showViewParam, setShowViewParam] = useState(false)\r\n    const [showCreateParam, setShowCreateParam] = useState(false)\r\n\r\n    const checkWhichBottonsToShow = () =>\r\n    {\r\n      let currentUser = users.find(x => x.data.UserName == logInUserVar.user)\r\n      if(currentUser)\r\n      {\r\n        let showEditParam = false\r\n        let showDeleteParam = false\r\n        currentUser.data.Permissions.forEach(item => {\r\n          if(item == \"Update Subscription\")\r\n          {\r\n            showEditParam = true\r\n          }\r\n          if(item == \"Delete Subscription\")\r\n          {\r\n            showDeleteParam = true\r\n          }\r\n          if(item == \"View Subscription\")\r\n          {\r\n            setShowViewParam(true)\r\n          }\r\n          if(item == \"Create Subscription\")\r\n          {\r\n            setShowCreateParam(true)\r\n          }\r\n        })\r\n        setPermissionsObj({showEdit : showEditParam, showDelete : showDeleteParam})\r\n      }\r\n    }\r\n\r\n    useEffect(() => \r\n    {\r\n        checkWhichBottonsToShow()\r\n    },[])\r\n\r\n    const clickedAllMembers = () => \r\n    {\r\n        setAddMembersButtonColor(\"\")\r\n        setAllMembersButtonColor(\"primary\")\r\n        setAllMembersPage(true)\r\n        setAddMembersPage(false)\r\n    }\r\n\r\n    const clickedAddMembers = () => \r\n    {\r\n        setAllMembersButtonColor(\"\")\r\n        setAddMembersButtonColor(\"primary\")\r\n        setAllMembersPage(false)\r\n        setAddMembersPage(true)\r\n    }\r\n\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Subscriptions\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={allMembersButtonColor} onClick={clickedAllMembers}>All Members</Button> \r\n                    </Grid>\r\n                    <Grid item>\r\n                      {showCreateParam  && <Button style={{textTransform: 'none'}} variant=\"contained\" color={addMembersButtonColor} onClick={clickedAddMembers}>Add Member</Button>}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"center\" >\r\n                     {showViewParam ? \"\" : <div>You Don't Have \"View Subscriptions\" Permissions!</div>}\r\n                    {allMembersPage && showViewParam && members && members.map((item,index) => {return <Grid item key={index} className={classes.paper}><MemberComp memberDetails={item} userPermissions={permissionsObj}/></Grid>})}\r\n                    {addMembersPage && <div className={classes.paper}><AddMemberComp clickedAllMembers={clickedAllMembers}/></div>}\r\n                </Grid> \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MemberComp.js",["225","226","227","228","229","230","231","232"],"import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport MoviesWatchedComp from './MoviesWatchedComp'\r\nimport {Link} from 'react-router-dom'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport {LogInContext} from './LogInContaxtApi'\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport Utils from './Utils'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction MemberComp(props)\r\n{\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const classes = useStyles()\r\n    const [member, setMember] = useState()\r\n    const [showEdit, setShowEdit] = useState(false)\r\n    const [showDelete, setShowDelete] = useState(false)\r\n    const {logInUser} = useContext(LogInContext)\r\n    const [logInUserVar,setLogInUserVar] = logInUser\r\n    const [users, setUsers] = useContext(UsersContext);\r\n\r\n   const deleteMember = () =>\r\n    {\r\n        let currentMembersArray = members\r\n        let MembersArrayAfterDelete = currentMembersArray.filter(x => x.id != props.memberDetails.id)\r\n        setMembers(MembersArrayAfterDelete)\r\n        Utils.deleteDataFromServer(\"Members\", props.memberDetails.id)\r\n    }\r\n\r\n   const clickedDelete = () =>\r\n    {\r\n        confirmAlert({\r\n            title: 'Are you sure you want to delete Member:',  // Title dialog\r\n            message: props.memberDetails.data.Name,               // Message dialog\r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => deleteMember()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n    const checkWhichBottonsToShow = () =>\r\n    {\r\n      let currentUser = users.find(x => x.data.UserName == logInUserVar.user)\r\n      if(currentUser)\r\n      {\r\n          currentUser.data.Permissions.forEach(item => {\r\n          if(item == \"Update Movies\")\r\n          {\r\n            setShowEdit(true)\r\n          }\r\n          if(item == \"Delete Movies\")\r\n          {\r\n            setShowDelete(true)\r\n          }\r\n        })\r\n      }\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(props.memberDetails)\r\n        {\r\n            setMember(props.memberDetails)\r\n            setShowEdit(props.userPermissions.showEdit)\r\n            setShowDelete(props.userPermissions.showDelete)\r\n        }\r\n        else if(props.match.params.id)\r\n        {\r\n            let newMember = members.find(x => x.id == props.match.params.id)\r\n            if(newMember)\r\n            {\r\n                setMember(newMember)\r\n                checkWhichBottonsToShow()\r\n            }\r\n        }\r\n    },[])\r\n\r\n       return(\r\n       \r\n            <Grid container direction=\"column\" alignItems=\"center\" >\r\n                <Grid item>\r\n                    <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                        {member && member.data.Name}<br/>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                        Email : {member && member.data.Email}<br/>\r\n                        City : {member && member.data.City}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item>\r\n                    {member && showEdit && <Link to={`/Subscriptions/Edit/${member.id}`} style={{ textDecoration: 'none' }}><Button style={{textTransform: 'none'}} startIcon={<EditIcon />} size=\"large\" variant=\"contained\"></Button></Link>}\r\n                    </Grid>\r\n                    <Grid item>\r\n                    {showDelete &&  <Button style={{textTransform: 'none'}} variant=\"contained\" size=\"large\" startIcon={<DeleteIcon />} onClick={clickedDelete}></Button> }\r\n                    </Grid>\r\n                </Grid>\r\n                <br/>\r\n                <Grid item className={classes.paper}>\r\n                    {member && <MoviesWatchedComp memberId={member.id}/>}\r\n                </Grid>\r\n                <br/>\r\n            </Grid>\r\n       \r\n    )\r\n}\r\n\r\nexport default MemberComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesWatchedComp.js",["233","234","235","236","237","238","239","240","241"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\WrapperComp.js",["242","243","244"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddMemberComp.js",["245","246"],"import {useState, useContext, useRef, useEffect} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Utils from './Utils'\r\n\r\nfunction AddMemberComp(params)\r\n{\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [newId, setNewId] = useState(0)\r\n    const [pressed, setPressed] = useState(false)\r\n\r\n    const clickedSave = async () =>\r\n    {\r\n        let MemberObj = {Name : name, Email : email, City : city}\r\n        let res = await Utils.sendDataToServer('Members', MemberObj)\r\n        setNewId(res.id)\r\n        params.clickedAllMembers()\r\n    }\r\n\r\n    const initialRender = useRef(true);\r\n    useEffect(() =>\r\n    {\r\n        if(initialRender.current){\r\n            initialRender.current = false;\r\n        }else{\r\n                let MemberObjToMembers = {id : newId , data : {Name : name, Email : email, City : city}}\r\n                let currentMembersArray = members\r\n                currentMembersArray.push(MemberObjToMembers)\r\n                setMembers(currentMembersArray)\r\n                setPressed(true)\r\n            }\r\n    },[newId])\r\n   \r\n       return(\r\n        <div>\r\n            <br/>\r\n            <FormGroup>\r\n           Name :  <TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setName(e.target.value)}/><br/>\r\n           Email : &nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setEmail(e.target.value)}/><br/>\r\n           City  : &nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setCity(e.target.value)}/><br/>\r\n           </FormGroup>\r\n           <br/>\r\n           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Button style={{textTransform: 'none'}} startIcon={<SaveIcon />} variant=\"contained\" size=\"large\" onClick={clickedSave}></Button> \r\n            <Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size=\"large\" onClick={() => params.clickedAllMembers()}></Button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMemberComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UsersManagmentComp.js",["247"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UserComp.js",["248","249"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditMemberComp.js",["250","251","252","253"],"import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Utils from './Utils'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction EditMemberComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [editMember, setEditMember] = useState(\"\")\r\n\r\n    const clickedUpdate = () =>\r\n    {\r\n        debugger;\r\n        let MemberObjToMembers = {id : props.match.params.id , data : {Name : name, Email : email, City : city}}\r\n        let MemberObjToServer = {Name : name, Email : email, City : city}\r\n        let MembersArray = members\r\n        let MemberIndex = members.findIndex(x => x.id == MemberObjToMembers.id )\r\n        if(MemberIndex >= 0 )\r\n        {\r\n          MembersArray[MemberIndex] = MemberObjToMembers\r\n          setMembers(MembersArray)\r\n          Utils.updateServer('Members', MemberObjToMembers.id, MemberObjToServer)\r\n        }\r\n    }\r\n\r\n    const form = () => \r\n    {\r\n      let memberIndex = members.findIndex(x => x.id == props.match.params.id )\r\n      if(memberIndex >= 0 )\r\n      {\r\n        setEditMember(members[memberIndex])\r\n        setName(members[memberIndex].data.Name)\r\n        setEmail(members[memberIndex].data.Email)\r\n        setCity(members[memberIndex].data.City)\r\n      }     \r\n    }\r\n\r\n    useEffect(() => {\r\n      form()\r\n    },[])\r\n   \r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                <FormGroup className={classes.paper}>   \r\n                    <h3>Edit Member : {name}</h3>\r\n                    Name :  <TextField variant=\"outlined\" placeholder={name} onChange={e =>setName(e.target.value)}/><br/>\r\n                    Email : &nbsp;<TextField variant=\"outlined\" placeholder={email} onChange={e =>setEmail(e.target.value)}/><br/>\r\n                    City : &nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" placeholder={city} onChange={e =>setCity(e.target.value)}/><br/>\r\n                  <br/>\r\n                    <FormGroup row>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Link style={{ textDecoration: 'none' }} to=\"/Subscriptions\"><Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large' onClick={clickedUpdate}></Button></Link> \r\n                        <Link style={{ textDecoration: 'none' }} to=\"/Subscriptions\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size='large'></Button></Link>\r\n                    </FormGroup>\r\n                </FormGroup>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMemberComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditMovieComp.js",["254","255","256"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesContaxtApi.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MembersContextApi.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UsersContaxtApi.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionsContaxtApi.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\CreatAccountComp.js",["257"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\LogInContaxtApi.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EntryComp.js",[],{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":50,"column":1,"nodeType":"264","endLine":50,"endColumn":129},{"ruleId":"265","severity":1,"message":"266","line":34,"column":12,"nodeType":"267","messageId":"268","endLine":34,"endColumn":24},{"ruleId":"265","severity":1,"message":"269","line":35,"column":26,"nodeType":"267","messageId":"268","endLine":35,"endColumn":42},{"ruleId":"265","severity":1,"message":"270","line":36,"column":12,"nodeType":"267","messageId":"268","endLine":36,"endColumn":24},{"ruleId":"265","severity":1,"message":"271","line":37,"column":12,"nodeType":"267","messageId":"268","endLine":37,"endColumn":22},{"ruleId":"272","severity":1,"message":"273","line":41,"column":65,"nodeType":"274","messageId":"275","endLine":41,"endColumn":67},{"ruleId":"272","severity":1,"message":"273","line":41,"column":92,"nodeType":"274","messageId":"275","endLine":41,"endColumn":94},{"ruleId":"272","severity":1,"message":"273","line":46,"column":21,"nodeType":"274","messageId":"275","endLine":46,"endColumn":23},{"ruleId":"265","severity":1,"message":"276","line":61,"column":12,"nodeType":"267","messageId":"268","endLine":61,"endColumn":25},{"ruleId":"265","severity":1,"message":"277","line":63,"column":23,"nodeType":"267","messageId":"268","endLine":63,"endColumn":36},{"ruleId":"265","severity":1,"message":"278","line":65,"column":12,"nodeType":"267","messageId":"268","endLine":65,"endColumn":18},{"ruleId":"265","severity":1,"message":"279","line":66,"column":12,"nodeType":"267","messageId":"268","endLine":66,"endColumn":19},{"ruleId":"265","severity":1,"message":"280","line":67,"column":12,"nodeType":"267","messageId":"268","endLine":67,"endColumn":17},{"ruleId":"265","severity":1,"message":"281","line":68,"column":12,"nodeType":"267","messageId":"268","endLine":68,"endColumn":25},{"ruleId":"282","severity":1,"message":"283","line":134,"column":16,"nodeType":"284","endLine":141,"endColumn":6},{"ruleId":"282","severity":1,"message":"285","line":141,"column":7,"nodeType":"286","endLine":141,"endColumn":9,"suggestions":"287"},{"ruleId":"272","severity":1,"message":"288","line":53,"column":21,"nodeType":"274","messageId":"275","endLine":53,"endColumn":23},{"ruleId":"272","severity":1,"message":"288","line":101,"column":29,"nodeType":"274","messageId":"275","endLine":101,"endColumn":31},{"ruleId":"272","severity":1,"message":"288","line":104,"column":31,"nodeType":"274","messageId":"275","endLine":104,"endColumn":33},{"ruleId":"272","severity":1,"message":"288","line":107,"column":31,"nodeType":"274","messageId":"275","endLine":107,"endColumn":33},{"ruleId":"272","severity":1,"message":"288","line":110,"column":31,"nodeType":"274","messageId":"275","endLine":110,"endColumn":33},{"ruleId":"272","severity":1,"message":"288","line":113,"column":23,"nodeType":"274","messageId":"275","endLine":113,"endColumn":25},{"ruleId":"272","severity":1,"message":"288","line":116,"column":25,"nodeType":"274","messageId":"275","endLine":116,"endColumn":27},{"ruleId":"272","severity":1,"message":"288","line":119,"column":25,"nodeType":"274","messageId":"275","endLine":119,"endColumn":27},{"ruleId":"272","severity":1,"message":"288","line":122,"column":25,"nodeType":"274","messageId":"275","endLine":122,"endColumn":27},{"ruleId":"272","severity":1,"message":"273","line":128,"column":51,"nodeType":"274","messageId":"275","endLine":128,"endColumn":53},{"ruleId":"272","severity":1,"message":"273","line":139,"column":49,"nodeType":"274","messageId":"275","endLine":139,"endColumn":51},{"ruleId":"282","severity":1,"message":"289","line":152,"column":7,"nodeType":"286","endLine":152,"endColumn":9,"suggestions":"290"},{"ruleId":"282","severity":1,"message":"291","line":156,"column":9,"nodeType":"286","endLine":156,"endColumn":19,"suggestions":"292"},{"ruleId":"272","severity":1,"message":"288","line":161,"column":31,"nodeType":"274","messageId":"275","endLine":161,"endColumn":33},{"ruleId":"272","severity":1,"message":"288","line":161,"column":59,"nodeType":"274","messageId":"275","endLine":161,"endColumn":61},{"ruleId":"272","severity":1,"message":"288","line":161,"column":87,"nodeType":"274","messageId":"275","endLine":161,"endColumn":89},{"ruleId":"272","severity":1,"message":"288","line":173,"column":25,"nodeType":"274","messageId":"275","endLine":173,"endColumn":27},{"ruleId":"272","severity":1,"message":"288","line":173,"column":47,"nodeType":"274","messageId":"275","endLine":173,"endColumn":49},{"ruleId":"272","severity":1,"message":"288","line":173,"column":69,"nodeType":"274","messageId":"275","endLine":173,"endColumn":71},{"ruleId":"265","severity":1,"message":"293","line":23,"column":12,"nodeType":"267","messageId":"268","endLine":23,"endColumn":19},{"ruleId":"265","severity":1,"message":"294","line":24,"column":12,"nodeType":"267","messageId":"268","endLine":24,"endColumn":20},{"ruleId":"265","severity":1,"message":"295","line":25,"column":12,"nodeType":"267","messageId":"268","endLine":25,"endColumn":23},{"ruleId":"265","severity":1,"message":"280","line":34,"column":12,"nodeType":"267","messageId":"268","endLine":34,"endColumn":17},{"ruleId":"265","severity":1,"message":"276","line":36,"column":12,"nodeType":"267","messageId":"268","endLine":36,"endColumn":25},{"ruleId":"272","severity":1,"message":"288","line":41,"column":29,"nodeType":"274","messageId":"275","endLine":41,"endColumn":31},{"ruleId":"272","severity":1,"message":"288","line":44,"column":31,"nodeType":"274","messageId":"275","endLine":44,"endColumn":33},{"ruleId":"272","severity":1,"message":"288","line":47,"column":31,"nodeType":"274","messageId":"275","endLine":47,"endColumn":33},{"ruleId":"272","severity":1,"message":"288","line":50,"column":31,"nodeType":"274","messageId":"275","endLine":50,"endColumn":33},{"ruleId":"272","severity":1,"message":"288","line":53,"column":23,"nodeType":"274","messageId":"275","endLine":53,"endColumn":25},{"ruleId":"272","severity":1,"message":"288","line":56,"column":25,"nodeType":"274","messageId":"275","endLine":56,"endColumn":27},{"ruleId":"272","severity":1,"message":"288","line":59,"column":25,"nodeType":"274","messageId":"275","endLine":59,"endColumn":27},{"ruleId":"272","severity":1,"message":"288","line":62,"column":25,"nodeType":"274","messageId":"275","endLine":62,"endColumn":27},{"ruleId":"282","severity":1,"message":"283","line":78,"column":16,"nodeType":"284","endLine":87,"endColumn":6},{"ruleId":"282","severity":1,"message":"296","line":87,"column":7,"nodeType":"286","endLine":87,"endColumn":19,"suggestions":"297"},{"ruleId":"282","severity":1,"message":"283","line":90,"column":16,"nodeType":"284","endLine":99,"endColumn":6},{"ruleId":"282","severity":1,"message":"298","line":99,"column":7,"nodeType":"286","endLine":99,"endColumn":24,"suggestions":"299"},{"ruleId":"272","severity":1,"message":"288","line":103,"column":31,"nodeType":"274","messageId":"275","endLine":103,"endColumn":33},{"ruleId":"272","severity":1,"message":"288","line":103,"column":59,"nodeType":"274","messageId":"275","endLine":103,"endColumn":61},{"ruleId":"272","severity":1,"message":"288","line":103,"column":87,"nodeType":"274","messageId":"275","endLine":103,"endColumn":89},{"ruleId":"272","severity":1,"message":"288","line":115,"column":25,"nodeType":"274","messageId":"275","endLine":115,"endColumn":27},{"ruleId":"272","severity":1,"message":"288","line":115,"column":47,"nodeType":"274","messageId":"275","endLine":115,"endColumn":49},{"ruleId":"272","severity":1,"message":"288","line":115,"column":69,"nodeType":"274","messageId":"275","endLine":115,"endColumn":71},{"ruleId":"265","severity":1,"message":"300","line":36,"column":20,"nodeType":"267","messageId":"268","endLine":36,"endColumn":29},{"ruleId":"265","severity":1,"message":"301","line":41,"column":25,"nodeType":"267","messageId":"268","endLine":41,"endColumn":40},{"ruleId":"265","severity":1,"message":"302","line":42,"column":19,"nodeType":"267","messageId":"268","endLine":42,"endColumn":27},{"ruleId":"272","severity":1,"message":"273","line":55,"column":57,"nodeType":"274","messageId":"275","endLine":55,"endColumn":59},{"ruleId":"272","severity":1,"message":"273","line":61,"column":19,"nodeType":"274","messageId":"275","endLine":61,"endColumn":21},{"ruleId":"272","severity":1,"message":"273","line":65,"column":19,"nodeType":"274","messageId":"275","endLine":65,"endColumn":21},{"ruleId":"272","severity":1,"message":"273","line":69,"column":19,"nodeType":"274","messageId":"275","endLine":69,"endColumn":21},{"ruleId":"272","severity":1,"message":"273","line":73,"column":19,"nodeType":"274","messageId":"275","endLine":73,"endColumn":21},{"ruleId":"272","severity":1,"message":"288","line":86,"column":23,"nodeType":"274","messageId":"275","endLine":86,"endColumn":25},{"ruleId":"282","severity":1,"message":"303","line":100,"column":7,"nodeType":"286","endLine":100,"endColumn":9,"suggestions":"304"},{"ruleId":"282","severity":1,"message":"305","line":104,"column":7,"nodeType":"286","endLine":104,"endColumn":27,"suggestions":"306"},{"ruleId":"265","severity":1,"message":"301","line":38,"column":25,"nodeType":"267","messageId":"268","endLine":38,"endColumn":40},{"ruleId":"265","severity":1,"message":"302","line":39,"column":19,"nodeType":"267","messageId":"268","endLine":39,"endColumn":27},{"ruleId":"272","severity":1,"message":"288","line":44,"column":74,"nodeType":"274","messageId":"275","endLine":44,"endColumn":76},{"ruleId":"272","severity":1,"message":"273","line":68,"column":57,"nodeType":"274","messageId":"275","endLine":68,"endColumn":59},{"ruleId":"272","severity":1,"message":"273","line":72,"column":19,"nodeType":"274","messageId":"275","endLine":72,"endColumn":21},{"ruleId":"272","severity":1,"message":"273","line":76,"column":19,"nodeType":"274","messageId":"275","endLine":76,"endColumn":21},{"ruleId":"272","severity":1,"message":"273","line":96,"column":50,"nodeType":"274","messageId":"275","endLine":96,"endColumn":52},{"ruleId":"282","severity":1,"message":"307","line":103,"column":7,"nodeType":"286","endLine":103,"endColumn":9,"suggestions":"308"},{"ruleId":"309","severity":1,"message":"310","line":120,"column":35,"nodeType":"311","endLine":120,"endColumn":92},{"ruleId":"265","severity":1,"message":"312","line":11,"column":26,"nodeType":"267","messageId":"268","endLine":11,"endColumn":42},{"ruleId":"265","severity":1,"message":"313","line":12,"column":20,"nodeType":"267","messageId":"268","endLine":12,"endColumn":30},{"ruleId":"272","severity":1,"message":"273","line":25,"column":33,"nodeType":"274","messageId":"275","endLine":25,"endColumn":35},{"ruleId":"272","severity":1,"message":"273","line":27,"column":53,"nodeType":"274","messageId":"275","endLine":27,"endColumn":55},{"ruleId":"282","severity":1,"message":"314","line":42,"column":6,"nodeType":"286","endLine":42,"endColumn":8,"suggestions":"315"},{"ruleId":"265","severity":1,"message":"293","line":19,"column":12,"nodeType":"267","messageId":"268","endLine":19,"endColumn":19},{"ruleId":"282","severity":1,"message":"316","line":46,"column":7,"nodeType":"286","endLine":46,"endColumn":14,"suggestions":"317"},{"ruleId":"265","severity":1,"message":"313","line":33,"column":21,"nodeType":"267","messageId":"268","endLine":33,"endColumn":31},{"ruleId":"265","severity":1,"message":"301","line":39,"column":25,"nodeType":"267","messageId":"268","endLine":39,"endColumn":40},{"ruleId":"265","severity":1,"message":"302","line":40,"column":19,"nodeType":"267","messageId":"268","endLine":40,"endColumn":27},{"ruleId":"272","severity":1,"message":"273","line":47,"column":57,"nodeType":"274","messageId":"275","endLine":47,"endColumn":59},{"ruleId":"272","severity":1,"message":"273","line":53,"column":19,"nodeType":"274","messageId":"275","endLine":53,"endColumn":21},{"ruleId":"272","severity":1,"message":"273","line":57,"column":19,"nodeType":"274","messageId":"275","endLine":57,"endColumn":21},{"ruleId":"272","severity":1,"message":"273","line":61,"column":19,"nodeType":"274","messageId":"275","endLine":61,"endColumn":21},{"ruleId":"272","severity":1,"message":"273","line":65,"column":19,"nodeType":"274","messageId":"275","endLine":65,"endColumn":21},{"ruleId":"282","severity":1,"message":"303","line":77,"column":7,"nodeType":"286","endLine":77,"endColumn":9,"suggestions":"318"},{"ruleId":"265","severity":1,"message":"301","line":40,"column":25,"nodeType":"267","messageId":"268","endLine":40,"endColumn":40},{"ruleId":"265","severity":1,"message":"302","line":41,"column":19,"nodeType":"267","messageId":"268","endLine":41,"endColumn":27},{"ruleId":"272","severity":1,"message":"288","line":46,"column":76,"nodeType":"274","messageId":"275","endLine":46,"endColumn":78},{"ruleId":"272","severity":1,"message":"273","line":70,"column":57,"nodeType":"274","messageId":"275","endLine":70,"endColumn":59},{"ruleId":"272","severity":1,"message":"273","line":74,"column":19,"nodeType":"274","messageId":"275","endLine":74,"endColumn":21},{"ruleId":"272","severity":1,"message":"273","line":78,"column":19,"nodeType":"274","messageId":"275","endLine":78,"endColumn":21},{"ruleId":"272","severity":1,"message":"273","line":96,"column":52,"nodeType":"274","messageId":"275","endLine":96,"endColumn":54},{"ruleId":"282","severity":1,"message":"319","line":103,"column":7,"nodeType":"286","endLine":103,"endColumn":9,"suggestions":"320"},{"ruleId":"265","severity":1,"message":"300","line":33,"column":20,"nodeType":"267","messageId":"268","endLine":33,"endColumn":29},{"ruleId":"265","severity":1,"message":"293","line":39,"column":12,"nodeType":"267","messageId":"268","endLine":39,"endColumn":19},{"ruleId":"272","severity":1,"message":"273","line":47,"column":83,"nodeType":"274","messageId":"275","endLine":47,"endColumn":85},{"ruleId":"282","severity":1,"message":"321","line":80,"column":7,"nodeType":"286","endLine":80,"endColumn":14,"suggestions":"322"},{"ruleId":"272","severity":1,"message":"288","line":90,"column":66,"nodeType":"274","messageId":"275","endLine":90,"endColumn":68},{"ruleId":"272","severity":1,"message":"273","line":102,"column":82,"nodeType":"274","messageId":"275","endLine":102,"endColumn":84},{"ruleId":"272","severity":1,"message":"273","line":107,"column":61,"nodeType":"274","messageId":"275","endLine":107,"endColumn":63},{"ruleId":"282","severity":1,"message":"323","line":118,"column":7,"nodeType":"286","endLine":118,"endColumn":9,"suggestions":"324"},{"ruleId":"282","severity":1,"message":"323","line":123,"column":7,"nodeType":"286","endLine":123,"endColumn":22,"suggestions":"325"},{"ruleId":"265","severity":1,"message":"326","line":13,"column":11,"nodeType":"267","messageId":"268","endLine":13,"endColumn":30},{"ruleId":"265","severity":1,"message":"327","line":28,"column":11,"nodeType":"267","messageId":"268","endLine":28,"endColumn":29},{"ruleId":"282","severity":1,"message":"283","line":43,"column":16,"nodeType":"284","endLine":46,"endColumn":6},{"ruleId":"265","severity":1,"message":"293","line":17,"column":12,"nodeType":"267","messageId":"268","endLine":17,"endColumn":19},{"ruleId":"282","severity":1,"message":"328","line":39,"column":7,"nodeType":"286","endLine":39,"endColumn":14,"suggestions":"329"},{"ruleId":"265","severity":1,"message":"302","line":29,"column":19,"nodeType":"267","messageId":"268","endLine":29,"endColumn":27},{"ruleId":"272","severity":1,"message":"288","line":23,"column":72,"nodeType":"274","messageId":"275","endLine":23,"endColumn":74},{"ruleId":"272","severity":1,"message":"288","line":29,"column":82,"nodeType":"274","messageId":"275","endLine":29,"endColumn":84},{"ruleId":"265","severity":1,"message":"330","line":34,"column":12,"nodeType":"267","messageId":"268","endLine":34,"endColumn":22},{"ruleId":"272","severity":1,"message":"273","line":42,"column":55,"nodeType":"274","messageId":"275","endLine":42,"endColumn":57},{"ruleId":"272","severity":1,"message":"273","line":53,"column":53,"nodeType":"274","messageId":"275","endLine":53,"endColumn":55},{"ruleId":"282","severity":1,"message":"289","line":65,"column":7,"nodeType":"286","endLine":65,"endColumn":9,"suggestions":"331"},{"ruleId":"272","severity":1,"message":"273","line":40,"column":53,"nodeType":"274","messageId":"275","endLine":40,"endColumn":55},{"ruleId":"272","severity":1,"message":"273","line":58,"column":51,"nodeType":"274","messageId":"275","endLine":58,"endColumn":53},{"ruleId":"282","severity":1,"message":"289","line":70,"column":7,"nodeType":"286","endLine":70,"endColumn":9,"suggestions":"332"},{"ruleId":"272","severity":1,"message":"273","line":35,"column":65,"nodeType":"274","messageId":"275","endLine":35,"endColumn":67},"no-native-reassign",["333"],"no-negated-in-lhs",["334"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'isLogedInVar' is assigned a value but never used.","Identifier","unusedVar","'setLogInUsersVar' is assigned a value but never used.","'logInUserVar' is assigned a value but never used.","'isAdminVar' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'logInUsersVar' is assigned a value but never used.","'setIsAdminVar' is assigned a value but never used.","'movies' is assigned a value but never used.","'members' is assigned a value but never used.","'users' is assigned a value but never used.","'subscriptions' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'getMembers', 'getMovies', 'getSubscriptions', 'getUsers', 'getUsersLogin', and 'setIsLogedInVar'. Either include them or remove the dependency array.","ArrayExpression",["335"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["336"],"React Hook useEffect has a missing dependency: 'assignCheckBoxses'. Either include it or remove the dependency array.",["337"],"'pressed' is assigned a value but never used.","'pressed2' is assigned a value but never used.","'permissions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setUsers'. Either include it or remove the dependency array.",["338"],"React Hook useEffect has a missing dependency: 'setLogInUsersVar'. Either include it or remove the dependency array.",["339"],"'setMovies' is assigned a value but never used.","'setLogInUserVar' is assigned a value but never used.","'setUsers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkWhichBottonsToShow'. Either include it or remove the dependency array.",["340"],"React Hook useEffect has a missing dependency: 'page'. Either include it or remove the dependency array.",["341"],"React Hook useEffect has missing dependencies: 'checkWhichBottonsToShow', 'movies', 'props.match.params.id', 'props.movieDetails', 'props.userPermissions.showDelete', and 'props.userPermissions.showEdit'. Either include them or remove the dependency array. If 'setMovie' needs the current value of 'props.movieDetails', you can also switch to useReducer instead of useState and read 'props.movieDetails' in the reducer.",["342"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setSubscriptions' is assigned a value but never used.","'setMembers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'createSubscriptionsArray'. Either include it or remove the dependency array.",["343"],"React Hook useEffect has missing dependencies: 'genres', 'imageUrl', 'movies', 'premierd', 'setMovies', and 'title'. Either include them or remove the dependency array.",["344"],["345"],"React Hook useEffect has missing dependencies: 'checkWhichBottonsToShow', 'members', 'props.match.params.id', 'props.memberDetails', 'props.userPermissions.showDelete', and 'props.userPermissions.showEdit'. Either include them or remove the dependency array. If 'setMember' needs the current value of 'props.memberDetails', you can also switch to useReducer instead of useState and read 'props.memberDetails' in the reducer.",["346"],"React Hook useEffect has missing dependencies: 'date', 'props.memberId', 'selectedMovie.id', 'setSubscriptions', and 'subscriptions'. Either include them or remove the dependency array.",["347"],"React Hook useEffect has a missing dependency: 'createMoviesAndDatesArray'. Either include it or remove the dependency array.",["348"],["349"],"'loadMembersToServer' is assigned a value but never used.","'loadMoviesToServer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'city', 'email', 'members', 'name', and 'setMembers'. Either include them or remove the dependency array.",["350"],"'editMember' is assigned a value but never used.",["351"],["352"],"no-global-assign","no-unsafe-negation",{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"363","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"355","fix":"384"},{"desc":"355","fix":"385"},"Update the dependencies array to be: [getMembers, getMovies, getSubscriptions, getUsers, getUsersLogin, setIsLogedInVar]",{"range":"386","text":"387"},"Update the dependencies array to be: [form]",{"range":"388","text":"389"},"Update the dependencies array to be: [assignCheckBoxses, editUser]",{"range":"390","text":"391"},"Update the dependencies array to be: [newUsersId, setUsers]",{"range":"392","text":"393"},"Update the dependencies array to be: [newUsersLoginId, setLogInUsersVar]",{"range":"394","text":"395"},"Update the dependencies array to be: [checkWhichBottonsToShow]",{"range":"396","text":"397"},"Update the dependencies array to be: [searchWord, movies, page]",{"range":"398","text":"399"},"Update the dependencies array to be: [checkWhichBottonsToShow, movies, props.match.params.id, props.movieDetails, props.userPermissions.showDelete, props.userPermissions.showEdit]",{"range":"400","text":"401"},"Update the dependencies array to be: [createSubscriptionsArray]",{"range":"402","text":"403"},"Update the dependencies array to be: [genres, imageUrl, movies, newId, premierd, setMovies, title]",{"range":"404","text":"405"},{"range":"406","text":"397"},"Update the dependencies array to be: [checkWhichBottonsToShow, members, props.match.params.id, props.memberDetails, props.userPermissions.showDelete, props.userPermissions.showEdit]",{"range":"407","text":"408"},"Update the dependencies array to be: [date, newId, props.memberId, selectedMovie.id, setSubscriptions, subscriptions]",{"range":"409","text":"410"},"Update the dependencies array to be: [createMoviesAndDatesArray]",{"range":"411","text":"412"},"Update the dependencies array to be: [createMoviesAndDatesArray, subscribePage]",{"range":"413","text":"414"},"Update the dependencies array to be: [city, email, members, name, newId, setMembers]",{"range":"415","text":"416"},{"range":"417","text":"389"},{"range":"418","text":"389"},[4279,4281],"[getMembers, getMovies, getSubscriptions, getUsers, getUsersLogin, setIsLogedInVar]",[5277,5279],"[form]",[5344,5354],"[assignCheckBoxses, editUser]",[3407,3419],"[newUsersId, setUsers]",[3765,3782],"[newUsersLoginId, setLogInUsersVar]",[3237,3239],"[checkWhichBottonsToShow]",[3290,3310],"[searchWord, movies, page]",[3253,3255],"[checkWhichBottonsToShow, movies, props.match.params.id, props.movieDetails, props.userPermissions.showDelete, props.userPermissions.showEdit]",[1506,1508],"[createSubscriptionsArray]",[1805,1812],"[genres, imageUrl, movies, newId, premierd, setMovies, title]",[2681,2683],[3236,3238],"[checkWhichBottonsToShow, members, props.match.params.id, props.memberDetails, props.userPermissions.showDelete, props.userPermissions.showEdit]",[3624,3631],"[date, newId, props.memberId, selectedMovie.id, setSubscriptions, subscriptions]",[4853,4855],"[createMoviesAndDatesArray]",[4931,4946],"[createMoviesAndDatesArray, subscribePage]",[1466,1473],"[city, email, members, name, newId, setMembers]",[2129,2131],[2329,2331]]