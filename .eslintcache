[{"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\index.js":"1","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\App.js":"2","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\reportWebVitals.js":"3","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\firebase.js":"4","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\Utils.js":"5","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\LoginComp.js":"6","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MainComp.js":"7","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditUserComp.js":"8","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddUserComp.js":"9","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesComp.js":"10","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MovieComp.js":"11","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionWatchedComp.js":"12","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddMovieComp.js":"13","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionsComp.js":"14","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MemberComp.js":"15","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesWatchedComp.js":"16","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\WrapperComp.js":"17","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddMemberComp.js":"18","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UsersManagmentComp.js":"19","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UserComp.js":"20","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditMemberComp.js":"21","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditMovieComp.js":"22","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesContaxtApi.js":"23","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MembersContextApi.js":"24","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UsersContaxtApi.js":"25","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionsContaxtApi.js":"26","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\CreatAccountComp.js":"27","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\LogInContaxtApi.js":"28","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EntryComp.js":"29"},{"size":538,"mtime":1611046555530,"results":"30","hashOfConfig":"31"},{"size":173,"mtime":1611178450579,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"31"},{"size":649,"mtime":1609859012217,"results":"34","hashOfConfig":"31"},{"size":1342,"mtime":1611048197125,"results":"35","hashOfConfig":"31"},{"size":2601,"mtime":1611186986288,"results":"36","hashOfConfig":"31"},{"size":5557,"mtime":1611187189920,"results":"37","hashOfConfig":"31"},{"size":4019,"mtime":1610025516777,"results":"38","hashOfConfig":"31"},{"size":5350,"mtime":1610539093704,"results":"39","hashOfConfig":"31"},{"size":4418,"mtime":1610642793199,"results":"40","hashOfConfig":"31"},{"size":3481,"mtime":1610642793126,"results":"41","hashOfConfig":"31"},{"size":831,"mtime":1609506556400,"results":"42","hashOfConfig":"31"},{"size":2995,"mtime":1610726937028,"results":"43","hashOfConfig":"31"},{"size":3087,"mtime":1610726800597,"results":"44","hashOfConfig":"31"},{"size":3372,"mtime":1610896925021,"results":"45","hashOfConfig":"31"},{"size":6414,"mtime":1611128168030,"results":"46","hashOfConfig":"31"},{"size":2657,"mtime":1611186909699,"results":"47","hashOfConfig":"31"},{"size":2486,"mtime":1611047041963,"results":"48","hashOfConfig":"31"},{"size":3086,"mtime":1610804351027,"results":"49","hashOfConfig":"31"},{"size":2616,"mtime":1610886382736,"results":"50","hashOfConfig":"31"},{"size":3484,"mtime":1610726624810,"results":"51","hashOfConfig":"31"},{"size":3899,"mtime":1610642793126,"results":"52","hashOfConfig":"31"},{"size":357,"mtime":1610642808126,"results":"53","hashOfConfig":"31"},{"size":365,"mtime":1610642880044,"results":"54","hashOfConfig":"31"},{"size":349,"mtime":1610803513750,"results":"55","hashOfConfig":"31"},{"size":413,"mtime":1610899358683,"results":"56","hashOfConfig":"31"},{"size":1691,"mtime":1611185363268,"results":"57","hashOfConfig":"31"},{"size":366,"mtime":1611186859918,"results":"58","hashOfConfig":"31"},{"size":599,"mtime":1611185277176,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"ze8j8d",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\index.js",[],["133","134"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\App.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\reportWebVitals.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\firebase.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\Utils.js",["135"],"import firebase from '../firebase'\r\nimport axios from 'axios'\r\n\r\nlet firestore = firebase.firestore();\r\n\r\nconst getDataFromServer = async function (collection) \r\n{\r\n    let snapshot = await firestore.collection(collection).get()\r\n    let DataArr = []\r\n    let myData = \"\"\r\n    snapshot.forEach(doc =>{\r\n        myData = {data : doc.data() , id : doc.id}\r\n        DataArr.push(myData)\r\n    })\r\n    return DataArr\r\n}\r\n\r\nconst getSpecificDocFromServer = async function (collection, docId) \r\n{\r\n    let snapshot = firestore.collection(collection).doc(docId)\r\n    let doc = await snapshot.get()\r\n    if(doc){\r\n        return doc.data()\r\n    }\r\n}\r\n\r\nconst deleteDataFromServer = async function (collection, id ) \r\n{\r\n    let response = await firestore.collection(collection).doc(id).delete()\r\n    return response\r\n}\r\n\r\nconst sendDataToServer = async function (collection, jsonObj ) \r\n{\r\n    let response = await firestore.collection(collection).add(jsonObj)\r\n    return response\r\n}\r\n\r\nconst updateServer = function (collection, id , jsonObj ) \r\n{\r\n    firestore.collection(collection).doc(id).set(jsonObj)\r\n}\r\n\r\nconst getAllItems = async function(url)\r\n{\r\n  let user = await axios.get(url)\r\n  return user.data\r\n}\r\n\r\nexport default {sendDataToServer, getDataFromServer, getAllItems, updateServer, deleteDataFromServer, getSpecificDocFromServer};\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\LoginComp.js",["136","137","138","139","140"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MainComp.js",["141","142","143","144","145","146","147","148"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditUserComp.js",["149","150","151"],"import {useState, useEffect} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Utils from './Utils'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\n\r\nfunction EditUserComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [checked, setChecked] = useState(true);\r\n\r\n    const handleChange = (event) => {\r\n        setChecked(event.target.checked);\r\n      };\r\n\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                <FormGroup className={classes.paper}>\r\n                    <h3>Edit User : {props.match.params.name}</h3>\r\n                \r\n                    First Name:<TextField required id=\"outlined-basic\" value={props.match.params.name} variant=\"outlined\"/><br/>\r\n                    Last Name:<TextField required id=\"outlined-basic\" value=\"Hello World\" variant=\"outlined\" /><br/>\r\n                    User Name:<TextField required id=\"outlined-basic\" value=\"Hello World\" variant=\"outlined\" /><br/>\r\n                    Session time out (Minuts):\r\n                    <TextField required id=\"outlined-basic\" value=\"Hello World\" variant=\"outlined\" />\r\n                    <h4>Created data : </h4>\r\n                    <h3>Permissions :</h3>\r\n                    <FormGroup row>\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"View Subscription\" />\r\n                     &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Create Subscription\"/>\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Delete Subscription\"/>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Update Subscription\"/>\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"View Movies\"/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Create Movies\"/>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Delete Movies\"/>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <FormControlLabel control={<Checkbox onChange={handleChange} size=\"small\"/>}label=\"Update Movies\"/>\r\n                </FormGroup>\r\n                    \r\n                <Grid container direction=\"row\" justify=\"center\" >\r\n                    <Grid item>\r\n                       <Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large'></Button> \r\n                    </Grid>\r\n                     <Grid item>\r\n                        <Link style={{ textDecoration: 'none' }} to=\"/UsersManagment\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} size='large' variant=\"contained\"></Button></Link> \r\n                    </Grid>\r\n                </Grid> \r\n            </FormGroup>\r\n        </Grid>\r\n            \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default EditUserComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddUserComp.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesComp.js",["152","153","154"],"import {useState, useEffect, useContext } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MovieComp from './MovieComp'\r\nimport AddMovieComp from './AddMovieComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { MoviesContext } from \"./MoviesContaxtApi\";\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction MoviesComp()\r\n{\r\n    const [allMoviesButtonColor,setAllMoviesButtonColor] = useState(\"primary\")\r\n    const classes = useStyles()\r\n    const [useSearch, setUseSearch] = useState(true)\r\n    const [addMoviesButtonColor,setAddMoviesButtonColor] = useState(\"\")\r\n    const [searchWord, setSearchWord] = useState(\"\")\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [allMoviesPage, setAllMoviesPage] = useState(true)\r\n    const [addMoviesPage, setAddMoviesPage] = useState(false)\r\n    const [filteredMovies, setFilteredMovies] = useState()\r\n\r\n    let searchChanged =  (e) =>\r\n    {\r\n        setSearchWord(e.target.value.toUpperCase())\r\n    }\r\n\r\n    let page = () =>\r\n    {\r\n        console.log(\"page\")\r\n        let filteredMovies\r\n        if(searchWord != \"\")\r\n        {\r\n            filteredMovies = movies.filter(x => x.data.Title.toUpperCase().startsWith(searchWord))\r\n        }\r\n        else\r\n        {\r\n            filteredMovies = movies\r\n        }\r\n        setFilteredMovies(filteredMovies)\r\n    }\r\n\r\n    useEffect(() =>  {\r\n        page()\r\n    },[searchWord, movies])\r\n\r\n    const clickedAllMovies = () => \r\n    {\r\n        setSearchWord(\"\")\r\n        setAddMoviesButtonColor(\"\")\r\n        setAllMoviesButtonColor(\"primary\")\r\n        setUseSearch(true)\r\n        setAllMoviesPage(true)\r\n        setAddMoviesPage(false)\r\n        page()\r\n    }\r\n\r\n    const clickedAddMovies = () => \r\n    {\r\n        setAllMoviesButtonColor(\"\")\r\n        setAddMoviesButtonColor(\"primary\")\r\n        setUseSearch(false)\r\n        setAllMoviesPage(false)\r\n        setAddMoviesPage(true)\r\n    }\r\n\r\n       return(\r\n           \r\n        <div>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Movies\r\n                    </Typography>\r\n                   \r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={allMoviesButtonColor} onClick={clickedAllMovies}>All Movies</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={addMoviesButtonColor} onClick={clickedAddMovies}>Add Movie</Button>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    </Grid>\r\n                    <Grid item>\r\n                   {useSearch ? <label><TextField placeholder=\"e.g., Titanic\"  onChange={searchChanged} InputProps={{endAdornment: (<InputAdornment position=\"end\"><IconButton><SearchIcon /></IconButton></InputAdornment>)}}\r\n                            variant=\"outlined\" style={{width: 205}} size=\"small\"/><br/></label> : \"\"}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"center\">\r\n                    {allMoviesPage && filteredMovies && filteredMovies.map((item,index) => {return <div><Grid item key={index} className={classes.paper}><MovieComp movieDetails={item}/></Grid><br/></div>})}\r\n                    {addMoviesPage && <div className={classes.paper}><AddMovieComp  clickedAllMovies={clickedAllMovies}/></div>}\r\n                </Grid> \r\n           </Grid>\r\n        </div>    )\r\n}\r\n\r\nexport default MoviesComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MovieComp.js",["155","156"],"import {useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport SubscriptionWatchedComp from \"./SubscriptionWatchedComp\"\r\nimport {Link} from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport Utils from './Utils'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction MovieComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n\r\n    const deleteMovie = () =>\r\n    {\r\n        console.log(\"in delete\")\r\n        let currentMoviesArray = movies\r\n        let moviesArrayAfterDelete = currentMoviesArray.filter(x => x.id != props.movieDetails.id)\r\n        setMovies(moviesArrayAfterDelete)\r\n        Utils.deleteDataFromServer(\"Movies\", props.movieDetails.id)\r\n    }\r\n\r\n    const clickedDelete = () =>\r\n    {\r\n        confirmAlert({\r\n            title: 'Are you sure you want to delete the movie:',                        // Title dialog\r\n            message: props.movieDetails.data.Title,               // Message dialog\r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => deleteMovie()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n    //Genres: {props.movieDetails.Genres.join(\", \")}\r\n    \r\n    return(\r\n        \r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                    <Typography variant=\"h4\" gutterBottom align=\"center\">\r\n                    {props.movieDetails.data.Title} , {props.movieDetails.data.date}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                    Genres: {props.movieDetails.data.Genres.join(\", \")}\r\n                    </Typography>\r\n               </Grid>\r\n                <Grid item>    \r\n                </Grid>\r\n                <Grid  container direction=\"row\" justify=\"space-around\" alignItems=\"flex-start\" >\r\n                    <Grid item  >\r\n                        <img src={props.movieDetails.data.ImageUrl} width=\"200\" height=\"300\"/> \r\n                    </Grid>\r\n                    <Grid item  className={classes.paper}>\r\n                        <SubscriptionWatchedComp />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Link to={`/Movies/Edit/${props.movieDetails.id}`} style={{ textDecoration: 'none' }}>\r\n                        <Button style={{textTransform: 'none'}} size='large' startIcon={<EditIcon />} variant=\"contained\"></Button></Link>\r\n                    <Button style={{textTransform: 'none'}} size='large' variant=\"contained\" startIcon={<DeleteIcon />} onClick={clickedDelete}></Button>\r\n                </Grid>\r\n            </Grid>\r\n        \r\n    )\r\n}\r\n\r\nexport default MovieComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionWatchedComp.js",["157","158"],"import {useState, useEffect} from 'react'\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nfunction SubscriptionsWatchedComp()\r\n{\r\n   const [subscriptions, setSubscriptions] = useState([{name : \"Avi Cohen\" , date : \"12/11/1998\"}])\r\n\r\n       return(\r\n        <div>\r\n          <Typography variant=\"h5\" variantMapping=\"h1\" gutterBottom align=\"center\">\r\n                        Subscriptions watched\r\n                    </Typography>\r\n            \r\n            <ul>\r\n              {\r\n                  subscriptions.map((item,index) =>{\r\n                      return <li key={index}><Link href=\"#\">{item.name}</Link>, {item.date}</li>\r\n                  })\r\n              }\r\n            </ul>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsWatchedComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddMovieComp.js",["159","160"],"import {useState, useContext, useEffect, useRef} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport Utils from './Utils'\r\n\r\n\r\nconst AddMovieComp = (params) =>\r\n{\r\n    const [title, setTitle] = useState(\"\")\r\n    const [genres, setGenres] = useState(\"\")\r\n    const [imageUrl, setImageUrl] = useState(\"\")\r\n    const [premierd, setPremierd] = useState()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [newId, setNewId] = useState(0)\r\n    const [pressed, setPressed] = useState(false)\r\n\r\n    const clickedSave = async () =>\r\n    {\r\n        let genresArry = genres.split(\" \")\r\n        let moviesObj = {Title : title, date : premierd, ImageUrl : imageUrl, Genres : genresArry}\r\n        let res = await Utils.sendDataToServer('Movies', moviesObj)\r\n        setNewId(res.id)\r\n        params.clickedAllMovies()\r\n    }\r\n\r\n    const initialRender = useRef(true);\r\n    useEffect(() =>\r\n    {\r\n        console.log(\"useEffect - 1\")\r\n        if(initialRender.current){\r\n            console.log(\"useEffect - 2\")\r\n            initialRender.current = false;\r\n        }else{\r\n                console.log(\"useEffect - 3\")\r\n                let genresArry = genres.split(\" \")\r\n                let moviesObjtoMovies = {id : newId , data : {Title : title, date : premierd, ImageUrl : imageUrl, Genres : genresArry}}\r\n                let currentMoviesArray = movies\r\n                currentMoviesArray.push(moviesObjtoMovies)\r\n                setMovies(currentMoviesArray)\r\n                setPressed(true)\r\n            }\r\n    },[newId])\r\n\r\n    return(\r\n        <div>\r\n            <br/>\r\n            <FormGroup>\r\n                Name :  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setTitle(e.target.value)}/><br/>\r\n                Genres : &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" size=\"small\" onChange={e =>setGenres(e.target.value)}/><br/>\r\n                Image URL : <TextField variant=\"outlined\" size=\"small\" onChange={e =>setImageUrl(e.target.value)}/><br/>\r\n                Premierd : &nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" size=\"small\" onChange={e =>setPremierd(e.target.value)}/>\r\n            </FormGroup><br/><br/>\r\n\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Button style={{textTransform: 'none'}} startIcon={<SaveIcon />} size=\"large\" variant=\"contained\" onClick={clickedSave}></Button>  \r\n            <Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size=\"large\" onClick={() => params.clickedAllMovies()}></Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMovieComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionsComp.js",["161","162"],"import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport MemberComp from './MemberComp'\r\nimport AddMemberComp from './AddMemberComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n  /*\r\n  useState([{Name : \"ori shalom\", Email : \"shalom.ori@gmail.com\", City : \"Hod Hasharon\"},\r\n                                            {Name : \"Anat shalom\", Email : \"anatbarer@gmail.com\", City : \"TLV\"}])\r\n                                            */\r\n\r\nfunction SubscriptionsComp()\r\n{\r\n    const classes = useStyles()\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [allMembersPage, setAllMembersPage] = useState(true)\r\n    const [addMembersPage, setAddMembersPage] = useState(false)\r\n    const [allMembersButtonColor,setAllMembersButtonColor] = useState(\"primary\")\r\n    const [addMembersButtonColor,setAddMembersButtonColor] = useState(\"\")\r\n\r\n    const clickedAllMembers = () => \r\n    {\r\n        setAddMembersButtonColor(\"\")\r\n        setAllMembersButtonColor(\"primary\")\r\n        setAllMembersPage(true)\r\n        setAddMembersPage(false)\r\n    }\r\n\r\n    const clickedAddMembers = () => \r\n    {\r\n        setAllMembersButtonColor(\"\")\r\n        setAddMembersButtonColor(\"primary\")\r\n        setAllMembersPage(false)\r\n        setAddMembersPage(true)\r\n    }\r\n\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid item>\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Subscriptions\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={allMembersButtonColor} onClick={clickedAllMembers}>All Members</Button> \r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={addMembersButtonColor} onClick={clickedAddMembers}>Add Member</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"center\" >\r\n                    {allMembersPage && members && members.map((item,index) => {return <Grid item key={index} className={classes.paper}><MemberComp memberDetails={item}/></Grid>})}\r\n                    {addMembersPage && <div className={classes.paper}><AddMemberComp clickedAllMembers={clickedAllMembers}/></div>}\r\n                </Grid> \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MemberComp.js",["163","164","165"],"import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport MoviesWatchedComp from './MoviesWatchedComp'\r\nimport {Link} from 'react-router-dom'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport './Main.css'\r\nimport Utils from './Utils'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction MemberComp(props)\r\n{\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const classes = useStyles()\r\n\r\n   const deleteMember = () =>\r\n    {\r\n        let currentMembersArray = members\r\n        let MembersArrayAfterDelete = currentMembersArray.filter(x => x.id != props.memberDetails.id)\r\n        setMembers(MembersArrayAfterDelete)\r\n        Utils.deleteDataFromServer(\"Members\", props.memberDetails.id)\r\n    }\r\n\r\n   const clickedDelete = () =>\r\n    {\r\n        confirmAlert({\r\n            title: 'Are you sure you want to delete Member:',  // Title dialog\r\n            message: props.memberDetails.data.Name,               // Message dialog\r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => deleteMember()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n       return(\r\n       \r\n            <Grid container direction=\"column\" alignItems=\"center\" >\r\n                <Grid item>\r\n                    <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                        {props.memberDetails.data.Name}<br/>\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                        Email : {props.memberDetails.data.Email}<br/>\r\n                        City : {props.memberDetails.data.City}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item>\r\n                        <Link to={`/Subscriptions/Edit/${props.memberDetails.id}`} style={{ textDecoration: 'none' }}><Button style={{textTransform: 'none'}} startIcon={<EditIcon />} size=\"large\" variant=\"contained\"></Button></Link>            \r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" size=\"large\" startIcon={<DeleteIcon />} onClick={clickedDelete}></Button> \r\n                    </Grid>\r\n                </Grid>\r\n                <br/>\r\n                <Grid item className={classes.paper}>\r\n                    <MoviesWatchedComp memberId={props.memberDetails.id}/>\r\n                </Grid>\r\n                <br/>\r\n            </Grid>\r\n       \r\n    )\r\n}\r\n\r\nexport default MemberComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesWatchedComp.js",["166","167","168","169","170","171"],"import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport { SubscriptionsContext } from './SubscriptionsContaxtApi'\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Utils from './Utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 220\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    }\r\n  }));\r\n\r\nfunction MoviesWatchedComp(props)\r\n{\r\n    const classes = useStyles();\r\n    const [subscriptions, setSubscriptions] = useContext(SubscriptionsContext);\r\n    const [moviesAndDates, setMoviesAndDates] = useState(\"\")\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [subscribePage, setSubscribePage] = useState(false)\r\n    const [selectedMovie, setSelectedMovie] = useState()\r\n    const [filteredMovies, setFilteredMovies] = useState([])\r\n    const [date, setDate] = useState(\"2015-08-09\")\r\n\r\n    const clickedSubscribeToMovie = () =>\r\n    {\r\n        let newMovieToSubscriptions = {MovieId : selectedMovie.id, DateWatched : date}\r\n        let localSubscription = subscriptions\r\n        let subscriptionsIndex = localSubscription.findIndex(x => x.data.MemberId == props.memberId)\r\n        if(subscriptionsIndex >= 0 )\r\n        {\r\n            let moviesRecoredInMemberRecored = localSubscription[subscriptionsIndex].data.Movies\r\n            moviesRecoredInMemberRecored.push(newMovieToSubscriptions)\r\n            let newsubscriptionToSubscriptions = {id: localSubscription[subscriptionsIndex].id , data: {MemberId : props.memberId, Movies : moviesRecoredInMemberRecored}}\r\n            localSubscription[subscriptionsIndex] = newsubscriptionToSubscriptions\r\n            setSubscriptions(localSubscription)\r\n            let newsubscriptionToServer = {MemberId : props.memberId, Movies : moviesRecoredInMemberRecored}\r\n            Utils.updateServer('Subscriptions', localSubscription[subscriptionsIndex].id, newsubscriptionToServer)\r\n        }\r\n    }\r\n\r\n    const ClickedToClose = () =>\r\n    {\r\n        setSubscribePage(false)\r\n    }\r\n\r\n    const clickedSubscribe = () =>\r\n    {\r\n        setSubscribePage(true)\r\n        let filteredMoviesTemp = movies.filter(x => x.data.Title != moviesAndDates.movieName)\r\n        setFilteredMovies(filteredMoviesTemp)\r\n    }\r\n\r\n    const selectChanged = (e) =>\r\n    {\r\n        setSelectedMovie(e.target.value);\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        let moviesAndDatesArray = []\r\n        let subscriptionsForMemberTemp = subscriptions.find(x => x.data.MemberId == props.memberId)\r\n        if(subscriptionsForMemberTemp)\r\n        {\r\n            let moviesAndDatesWithId = subscriptionsForMemberTemp.data.Movies\r\n            moviesAndDatesWithId.forEach(x => {\r\n            let watchedMovies = movies.find(item => item.id == x.MovieId)\r\n            let MovieAndDateObj = {movieName : watchedMovies.data.Title , date : x.DateWatched}\r\n            moviesAndDatesArray.push(MovieAndDateObj)\r\n            })\r\n            setMoviesAndDates(moviesAndDatesArray)\r\n        }\r\n    },[])\r\n\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                    <Typography variant=\"h6\" gutterBottom align=\"center\">\r\n                        Movies Watched\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item>\r\n                   {subscribePage \r\n                    ? <Button style={{textTransform: 'none'}} variant=\"contained\" onClick={ClickedToClose}>Close</Button>\r\n                    : <Button style={{textTransform: 'none'}} variant=\"contained\" onClick={clickedSubscribe}>Subscribe to a new movie</Button>\r\n                    }\r\n                </Grid>\r\n                {subscribePage && <div className={classes.paper}><Grid item>Add a New Movie </Grid>\r\n                                        <Grid item container direction=\"row\">\r\n                                            <Grid item>\r\n                                                <FormControl  className={classes.formControl}>\r\n                                                    <InputLabel>Select a Movie</InputLabel>\r\n                                                    <Select onChange={selectChanged}>\r\n                                                        {\r\n                                                            filteredMovies.map((item,index) => {\r\n                                                                return <MenuItem key={index} value={item}>{item.data.Title}</MenuItem>\r\n                                                            })\r\n                                                        }\r\n                                                    </Select>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <input style={{width:\"150px\", height:\"50px\" }} type=\"date\" data-date=\"\" data-date-format=\"DD/MM/YYYY\" value={date} onChange={e =>setDate(e.target.value) }/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item><Button style={{textTransform: 'none'}} variant=\"contained\" onClick={clickedSubscribeToMovie}>Subscribe</Button></Grid>\r\n                                </div>\r\n                }\r\n                <Grid item container direction=\"column\">\r\n                <ul>\r\n                {\r\n                 moviesAndDates && moviesAndDates.map((item,index) =>{\r\n                    return <Grid item><li key={index}><Link href=\"#\">{item.movieName}</Link>, {item.date}</li></Grid>\r\n                    })\r\n                }\r\n                </ul>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MoviesWatchedComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\WrapperComp.js",["172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddMemberComp.js",["186","187"],"import {useState, useContext, useRef, useEffect} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Utils from './Utils'\r\n\r\nfunction AddMemberComp(params)\r\n{\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [newId, setNewId] = useState(0)\r\n    const [pressed, setPressed] = useState(false)\r\n\r\n    const clickedSave = async () =>\r\n    {\r\n        let MemberObj = {Name : name, Email : email, City : city}\r\n        let res = await Utils.sendDataToServer('Members', MemberObj)\r\n        setNewId(res.id)\r\n        params.clickedAllMembers()\r\n    }\r\n\r\n    const initialRender = useRef(true);\r\n    useEffect(() =>\r\n    {\r\n        if(initialRender.current){\r\n            initialRender.current = false;\r\n        }else{\r\n                let MemberObjToMembers = {id : newId , data : {Name : name, Email : email, City : city}}\r\n                let currentMembersArray = members\r\n                currentMembersArray.push(MemberObjToMembers)\r\n                setMembers(currentMembersArray)\r\n                setPressed(true)\r\n            }\r\n    },[newId])\r\n   \r\n       return(\r\n        <div>\r\n            <br/>\r\n            <FormGroup>\r\n           Name :  <TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setName(e.target.value)}/><br/>\r\n           Email : &nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setEmail(e.target.value)}/><br/>\r\n           City  : &nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setCity(e.target.value)}/><br/>\r\n           </FormGroup>\r\n           <br/>\r\n           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Button style={{textTransform: 'none'}} startIcon={<SaveIcon />} variant=\"contained\" size=\"large\" onClick={clickedSave}></Button> \r\n            <Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size=\"large\" onClick={() => params.clickedAllMembers()}></Button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMemberComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UsersManagmentComp.js",["188"],"import {useState, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport UserComp from './UserComp'\r\nimport AddUserComp from './AddUserComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(5),     \r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction SubscriptionsComp()\r\n{\r\n    const classes = useStyles()\r\n    //const [users, setMembers] = useState([{name : \"ori shalom\", userName : \"shalom.ori@gmail.com\", sessionTimeOut : \"Hod Hasharon\" , createdData : \"\", permissions : \"\"},\r\n      //                                      {name : \"anat shalom\", userName : \"anat.ori@gmail.com\", sessionTimeOut : \"TLV Hasharon\" , createdData : \"\", permissions : \"\"}])\r\n    const [allUsersButtonColor,setAllUsersButtonColor] = useState(\"primary\")\r\n    const [addUserButtonColor,setAddUserButtonColor] = useState(\"\")\r\n    const [allUsersPage, setAllUsersPage] = useState(true)\r\n    const [addUserPage, setAddUserPage] = useState(false)\r\n    const [users, setUsers] = useContext(UsersContext);\r\n\r\n    const clickedAllUsers = () => \r\n    {\r\n        setAddUserButtonColor(\"\")\r\n        setAllUsersButtonColor(\"primary\")\r\n        setAllUsersPage(true)\r\n        setAddUserPage(false)\r\n    }\r\n\r\n    const clickedAddUser = () => \r\n    {\r\n        setAllUsersButtonColor(\"\")\r\n        setAddUserButtonColor(\"primary\")\r\n        setAllUsersPage(false)\r\n        setAddUserPage(true)\r\n    }\r\n\r\n       return(\r\n        <div >\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid  item >\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Users Managment\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item >\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={allUsersButtonColor} onClick={clickedAllUsers}>All Users</Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={addUserButtonColor} onClick={clickedAddUser}>Add User</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"center\"> \r\n                    {allUsersPage && users && users.map((item,index) => {return <div><Grid item className={classes.paper}><UserComp userDetails={item}/></Grid><br/></div>})}\r\n                    {addUserPage && <Grid item className={classes.paper}><AddUserComp clickedAllUsers={clickedAllUsers}/></Grid>}\r\n                </Grid>\r\n           </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UserComp.js",["189","190"],"import {useState, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport './Main.css'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport Utils from './Utils'\r\n\r\n\r\nfunction UserComp(props)\r\n{\r\n    const [users, setUsers] = useContext(UsersContext); \r\n\r\n    const deleteUser = () =>\r\n    {\r\n        let currentUsersArray = users\r\n        let usersArrayAfterDelete = currentUsersArray.filter(x => x.id != props.userDetails.id)\r\n        setUsers(usersArrayAfterDelete)\r\n        Utils.deleteDataFromServer(\"Users\", props.userDetails.id)\r\n    }\r\n\r\n    const clickedDelete = () =>\r\n    {\r\n        confirmAlert({\r\n            title: 'Are you sure you want to delete User:',  // Title dialog\r\n            message: props.userDetails.data.name,               // Message dialog\r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => deleteUser()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n    /*\r\n    <ul>\r\n                {\r\n                    props.userDetails.data.permissions.map((item,index) => {if(item == true) return <li key={index}>{item}</li>})\r\n                }\r\n            </ul>\r\n    */\r\n   \r\n       return(\r\n        <div>\r\n            Name :  {props.userDetails.data.FirstName}  {props.userDetails.data.LastName}<br/>\r\n            User Name : {props.userDetails.data.UserName}<br/>\r\n            Session time out (Minuts) : {props.userDetails.data.SessionTimeOut}<br/>\r\n            Created data : {props.userDetails.data.CreatedDate}<br/>\r\n            Permissions:<br/>\r\n            \r\n            <Grid container direction=\"row\" justify=\"center\" >\r\n                <Grid item>\r\n                    <Link to={`/UsersManagment/Edit/${props.userDetails.id}`} style={{ textDecoration: 'none' }}><Button style={{textTransform: 'none'}} startIcon={<EditIcon />} size='large' variant=\"contained\"></Button></Link>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button style={{textTransform: 'none'}} variant=\"contained\" startIcon={<DeleteIcon />} size='large' onClick={clickedDelete}></Button> \r\n                </Grid>\r\n            </Grid> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditMemberComp.js",["191","192","193","194"],"import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Utils from './Utils'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction EditMemberComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [editMember, setEditMember] = useState(\"\")\r\n\r\n    const clickedUpdate = () =>\r\n    {\r\n        debugger;\r\n        let MemberObjToMembers = {id : props.match.params.id , data : {Name : name, Email : email, City : city}}\r\n        let MemberObjToServer = {Name : name, Email : email, City : city}\r\n        let MembersArray = members\r\n        let MemberIndex = members.findIndex(x => x.id == MemberObjToMembers.id )\r\n        if(MemberIndex >= 0 )\r\n        {\r\n          MembersArray[MemberIndex] = MemberObjToMembers\r\n          setMembers(MembersArray)\r\n          Utils.updateServer('Members', MemberObjToMembers.id, MemberObjToServer)\r\n        }\r\n    }\r\n\r\n    const form = () => \r\n    {\r\n      let memberIndex = members.findIndex(x => x.id == props.match.params.id )\r\n      if(memberIndex >= 0 )\r\n      {\r\n        setEditMember(members[memberIndex])\r\n        setName(members[memberIndex].data.Name)\r\n        setEmail(members[memberIndex].data.Email)\r\n        setCity(members[memberIndex].data.City)\r\n      }     \r\n    }\r\n\r\n    useEffect(() => {\r\n      form()\r\n    },[])\r\n   \r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                <FormGroup className={classes.paper}>   \r\n                    <h3>Edit Member : {name}</h3>\r\n                    Name :  <TextField variant=\"outlined\" placeholder={name} onChange={e =>setName(e.target.value)}/><br/>\r\n                    Email : &nbsp;<TextField variant=\"outlined\" placeholder={email} onChange={e =>setEmail(e.target.value)}/><br/>\r\n                    City : &nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" placeholder={city} onChange={e =>setCity(e.target.value)}/><br/>\r\n                  <br/>\r\n                    <FormGroup row>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Link style={{ textDecoration: 'none' }} to=\"/Subscriptions\"><Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large' onClick={clickedUpdate}></Button></Link> \r\n                        <Link style={{ textDecoration: 'none' }} to=\"/Subscriptions\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size='large'></Button></Link>\r\n                    </FormGroup>\r\n                </FormGroup>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMemberComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditMovieComp.js",["195","196","197"],"import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Utils from './Utils'\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction EditMovieComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [genres, setGenres] = useState(\"\")\r\n    const [imageUrl, setImageUrl] = useState(\"\")\r\n    const [premierd, setPremierd] = useState()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [editMovie, setEditMovie] = useState(\"\")\r\n\r\n    const clickedUpdate = () =>\r\n    {\r\n        debugger;\r\n        let moviesObjtoMovies = {id : props.match.params.id , data : {Title : editMovie.data.Title, date : premierd, ImageUrl : imageUrl, Genres : genres}}\r\n        let moviesObjtoServer = {Title : editMovie.data.Title, date : premierd, ImageUrl : imageUrl, Genres : genres}\r\n        let moviesArray = movies\r\n        let movieIndex = movies.findIndex(x => x.id == moviesObjtoMovies.id )\r\n        if(movieIndex >= 0 )\r\n        {\r\n          moviesArray[movieIndex] = moviesObjtoMovies\r\n          setMovies(moviesArray)\r\n          Utils.updateServer('Movies', moviesObjtoMovies.id, moviesObjtoServer)\r\n        }\r\n    }\r\n\r\n    const updateGenres = (e) =>\r\n    {\r\n      let newGenres = e.target.value\r\n      newGenres = newGenres.split(\" \")\r\n      setGenres(newGenres)\r\n    }\r\n\r\n    const form = () => \r\n    {\r\n      let movieIndex = movies.findIndex(x => x.id == props.match.params.id )\r\n      if(movieIndex >= 0 )\r\n      {\r\n        console.log(movies[movieIndex])\r\n        setEditMovie(movies[movieIndex])\r\n        setGenres(movies[movieIndex].data.Genres)\r\n        setImageUrl(movies[movieIndex].data.ImageUrl)\r\n        setPremierd(movies[movieIndex].data.date)\r\n      }     \r\n    }\r\n\r\n    useEffect(() => {\r\n      form()\r\n    },[])\r\n   \r\n       return(\r\n        <div >\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n            {\r\n                <FormGroup className={classes.paper}>\r\n                  <h2>Edit Movie : {editMovie && editMovie.data.Title}</h2>\r\n                  Name : <TextField variant=\"outlined\" value={editMovie && editMovie.data.Title}/><br/>\r\n                  Genres : <TextField variant=\"outlined\" placeholder={editMovie && editMovie.data.Genres} onChange={updateGenres}/><br/>\r\n                  Image URL :  <TextField variant=\"outlined\" placeholder={editMovie && editMovie.data.ImageUrl} onChange={e =>setImageUrl(e.target.value)}/><br/>\r\n                  Premierd :  <TextField variant=\"outlined\" placeholder={editMovie && editMovie.data.date} onChange={e =>setPremierd(e.target.value)}/>\r\n                  <br/>\r\n                  <br/>\r\n                  <FormGroup row>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/Movies\"><Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large' onClick={clickedUpdate}></Button></Link>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/Movies\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} size='large' variant=\"contained\"></Button></Link>\r\n                 </FormGroup>    \r\n                </FormGroup>\r\n            }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMovieComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesContaxtApi.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MembersContextApi.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UsersContaxtApi.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionsContaxtApi.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\CreatAccountComp.js",["198","199"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\LogInContaxtApi.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EntryComp.js",["200","201","202","203","204","205","206","207","208","209","210","211"],{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":50,"column":1,"nodeType":"218","endLine":50,"endColumn":129},{"ruleId":"219","severity":1,"message":"220","line":4,"column":9,"nodeType":"221","messageId":"222","endLine":4,"endColumn":13},{"ruleId":"219","severity":1,"message":"223","line":4,"column":27,"nodeType":"221","messageId":"222","endLine":4,"endColumn":33},{"ruleId":"219","severity":1,"message":"224","line":4,"column":34,"nodeType":"221","messageId":"222","endLine":4,"endColumn":39},{"ruleId":"219","severity":1,"message":"225","line":28,"column":12,"nodeType":"221","messageId":"222","endLine":28,"endColumn":16},{"ruleId":"219","severity":1,"message":"226","line":29,"column":12,"nodeType":"221","messageId":"222","endLine":29,"endColumn":16},{"ruleId":"219","severity":1,"message":"227","line":52,"column":20,"nodeType":"221","messageId":"222","endLine":52,"endColumn":30},{"ruleId":"219","severity":1,"message":"228","line":53,"column":22,"nodeType":"221","messageId":"222","endLine":53,"endColumn":34},{"ruleId":"219","severity":1,"message":"229","line":54,"column":12,"nodeType":"221","messageId":"222","endLine":54,"endColumn":18},{"ruleId":"219","severity":1,"message":"230","line":55,"column":12,"nodeType":"221","messageId":"222","endLine":55,"endColumn":19},{"ruleId":"219","severity":1,"message":"231","line":56,"column":12,"nodeType":"221","messageId":"222","endLine":56,"endColumn":17},{"ruleId":"219","severity":1,"message":"232","line":57,"column":12,"nodeType":"221","messageId":"222","endLine":57,"endColumn":25},{"ruleId":"233","severity":1,"message":"234","line":99,"column":16,"nodeType":"235","endLine":106,"endColumn":6},{"ruleId":"233","severity":1,"message":"236","line":106,"column":7,"nodeType":"237","endLine":106,"endColumn":9,"suggestions":"238"},{"ruleId":"219","severity":1,"message":"239","line":1,"column":19,"nodeType":"221","messageId":"222","endLine":1,"endColumn":28},{"ruleId":"219","severity":1,"message":"240","line":12,"column":8,"nodeType":"221","messageId":"222","endLine":12,"endColumn":13},{"ruleId":"219","severity":1,"message":"241","line":32,"column":12,"nodeType":"221","messageId":"222","endLine":32,"endColumn":19},{"ruleId":"219","severity":1,"message":"242","line":34,"column":20,"nodeType":"221","messageId":"222","endLine":34,"endColumn":29},{"ruleId":"243","severity":1,"message":"244","line":48,"column":23,"nodeType":"245","messageId":"246","endLine":48,"endColumn":25},{"ruleId":"233","severity":1,"message":"247","line":61,"column":7,"nodeType":"237","endLine":61,"endColumn":27,"suggestions":"248"},{"ruleId":"243","severity":1,"message":"244","line":37,"column":74,"nodeType":"245","messageId":"246","endLine":37,"endColumn":76},{"ruleId":"249","severity":1,"message":"250","line":76,"column":25,"nodeType":"251","endLine":76,"endColumn":95},{"ruleId":"219","severity":1,"message":"239","line":1,"column":19,"nodeType":"221","messageId":"222","endLine":1,"endColumn":28},{"ruleId":"219","severity":1,"message":"252","line":8,"column":26,"nodeType":"221","messageId":"222","endLine":8,"endColumn":42},{"ruleId":"219","severity":1,"message":"253","line":19,"column":12,"nodeType":"221","messageId":"222","endLine":19,"endColumn":19},{"ruleId":"233","severity":1,"message":"254","line":46,"column":7,"nodeType":"237","endLine":46,"endColumn":14,"suggestions":"255"},{"ruleId":"219","severity":1,"message":"239","line":1,"column":19,"nodeType":"221","messageId":"222","endLine":1,"endColumn":28},{"ruleId":"219","severity":1,"message":"256","line":31,"column":21,"nodeType":"221","messageId":"222","endLine":31,"endColumn":31},{"ruleId":"219","severity":1,"message":"257","line":1,"column":9,"nodeType":"221","messageId":"222","endLine":1,"endColumn":17},{"ruleId":"219","severity":1,"message":"239","line":1,"column":19,"nodeType":"221","messageId":"222","endLine":1,"endColumn":28},{"ruleId":"243","severity":1,"message":"244","line":38,"column":76,"nodeType":"245","messageId":"246","endLine":38,"endColumn":78},{"ruleId":"219","severity":1,"message":"242","line":33,"column":20,"nodeType":"221","messageId":"222","endLine":33,"endColumn":29},{"ruleId":"243","severity":1,"message":"258","line":43,"column":83,"nodeType":"245","messageId":"246","endLine":43,"endColumn":85},{"ruleId":"243","severity":1,"message":"244","line":64,"column":66,"nodeType":"245","messageId":"246","endLine":64,"endColumn":68},{"ruleId":"243","severity":1,"message":"258","line":76,"column":82,"nodeType":"245","messageId":"246","endLine":76,"endColumn":84},{"ruleId":"243","severity":1,"message":"258","line":81,"column":61,"nodeType":"245","messageId":"246","endLine":81,"endColumn":63},{"ruleId":"233","severity":1,"message":"259","line":87,"column":7,"nodeType":"237","endLine":87,"endColumn":9,"suggestions":"260"},{"ruleId":"219","severity":1,"message":"261","line":9,"column":8,"nodeType":"221","messageId":"222","endLine":9,"endColumn":25},{"ruleId":"219","severity":1,"message":"262","line":10,"column":8,"nodeType":"221","messageId":"222","endLine":10,"endColumn":18},{"ruleId":"219","severity":1,"message":"263","line":11,"column":8,"nodeType":"221","messageId":"222","endLine":11,"endColumn":21},{"ruleId":"219","severity":1,"message":"264","line":12,"column":8,"nodeType":"221","messageId":"222","endLine":12,"endColumn":22},{"ruleId":"219","severity":1,"message":"265","line":13,"column":8,"nodeType":"221","messageId":"222","endLine":13,"endColumn":20},{"ruleId":"219","severity":1,"message":"266","line":14,"column":8,"nodeType":"221","messageId":"222","endLine":14,"endColumn":25},{"ruleId":"219","severity":1,"message":"267","line":15,"column":8,"nodeType":"221","messageId":"222","endLine":15,"endColumn":25},{"ruleId":"219","severity":1,"message":"268","line":16,"column":8,"nodeType":"221","messageId":"222","endLine":16,"endColumn":17},{"ruleId":"219","severity":1,"message":"220","line":18,"column":9,"nodeType":"221","messageId":"222","endLine":18,"endColumn":13},{"ruleId":"219","severity":1,"message":"223","line":18,"column":15,"nodeType":"221","messageId":"222","endLine":18,"endColumn":21},{"ruleId":"219","severity":1,"message":"224","line":18,"column":22,"nodeType":"221","messageId":"222","endLine":18,"endColumn":27},{"ruleId":"219","severity":1,"message":"269","line":22,"column":11,"nodeType":"221","messageId":"222","endLine":22,"endColumn":30},{"ruleId":"219","severity":1,"message":"270","line":37,"column":11,"nodeType":"221","messageId":"222","endLine":37,"endColumn":29},{"ruleId":"233","severity":1,"message":"234","line":52,"column":16,"nodeType":"235","endLine":55,"endColumn":6},{"ruleId":"219","severity":1,"message":"253","line":17,"column":12,"nodeType":"221","messageId":"222","endLine":17,"endColumn":19},{"ruleId":"233","severity":1,"message":"271","line":39,"column":7,"nodeType":"237","endLine":39,"endColumn":14,"suggestions":"272"},{"ruleId":"219","severity":1,"message":"273","line":32,"column":19,"nodeType":"221","messageId":"222","endLine":32,"endColumn":27},{"ruleId":"219","severity":1,"message":"257","line":1,"column":9,"nodeType":"221","messageId":"222","endLine":1,"endColumn":17},{"ruleId":"243","severity":1,"message":"244","line":21,"column":72,"nodeType":"245","messageId":"246","endLine":21,"endColumn":74},{"ruleId":"219","severity":1,"message":"274","line":34,"column":12,"nodeType":"221","messageId":"222","endLine":34,"endColumn":22},{"ruleId":"243","severity":1,"message":"258","line":42,"column":55,"nodeType":"245","messageId":"246","endLine":42,"endColumn":57},{"ruleId":"243","severity":1,"message":"258","line":53,"column":53,"nodeType":"245","messageId":"246","endLine":53,"endColumn":55},{"ruleId":"233","severity":1,"message":"275","line":65,"column":7,"nodeType":"237","endLine":65,"endColumn":9,"suggestions":"276"},{"ruleId":"243","severity":1,"message":"258","line":42,"column":53,"nodeType":"245","messageId":"246","endLine":42,"endColumn":55},{"ruleId":"243","severity":1,"message":"258","line":60,"column":51,"nodeType":"245","messageId":"246","endLine":60,"endColumn":53},{"ruleId":"233","severity":1,"message":"275","line":73,"column":7,"nodeType":"237","endLine":73,"endColumn":9,"suggestions":"277"},{"ruleId":"219","severity":1,"message":"257","line":1,"column":9,"nodeType":"221","messageId":"222","endLine":1,"endColumn":17},{"ruleId":"219","severity":1,"message":"239","line":1,"column":19,"nodeType":"221","messageId":"222","endLine":1,"endColumn":28},{"ruleId":"219","severity":1,"message":"257","line":1,"column":9,"nodeType":"221","messageId":"222","endLine":1,"endColumn":17},{"ruleId":"219","severity":1,"message":"239","line":1,"column":19,"nodeType":"221","messageId":"222","endLine":1,"endColumn":28},{"ruleId":"219","severity":1,"message":"278","line":2,"column":8,"nodeType":"221","messageId":"222","endLine":2,"endColumn":17},{"ruleId":"219","severity":1,"message":"279","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":14},{"ruleId":"219","severity":1,"message":"220","line":4,"column":9,"nodeType":"221","messageId":"222","endLine":4,"endColumn":13},{"ruleId":"219","severity":1,"message":"280","line":4,"column":15,"nodeType":"221","messageId":"222","endLine":4,"endColumn":25},{"ruleId":"219","severity":1,"message":"223","line":4,"column":27,"nodeType":"221","messageId":"222","endLine":4,"endColumn":33},{"ruleId":"219","severity":1,"message":"224","line":4,"column":34,"nodeType":"221","messageId":"222","endLine":4,"endColumn":39},{"ruleId":"219","severity":1,"message":"281","line":5,"column":10,"nodeType":"221","messageId":"222","endLine":5,"endColumn":20},{"ruleId":"219","severity":1,"message":"282","line":6,"column":8,"nodeType":"221","messageId":"222","endLine":6,"endColumn":17},{"ruleId":"219","severity":1,"message":"283","line":7,"column":8,"nodeType":"221","messageId":"222","endLine":7,"endColumn":12},{"ruleId":"219","severity":1,"message":"284","line":8,"column":9,"nodeType":"221","messageId":"222","endLine":8,"endColumn":21},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'user' is assigned a value but never used.","'pass' is assigned a value but never used.","'setIsAdmin' is assigned a value but never used.","'setIsLogedIn' is assigned a value but never used.","'movies' is assigned a value but never used.","'members' is assigned a value but never used.","'users' is assigned a value but never used.","'subscriptions' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'getMembers', 'getMovies', 'getSubscriptions', 'getUsers', and 'isLogedIn'. Either include them or remove the dependency array.","ArrayExpression",["287"],"'useEffect' is defined but never used.","'Utils' is defined but never used.","'checked' is assigned a value but never used.","'setMovies' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'page'. Either include it or remove the dependency array.",["288"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setSubscriptions' is assigned a value but never used.","'pressed' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'genres', 'imageUrl', 'movies', 'premierd', 'setMovies', and 'title'. Either include them or remove the dependency array.",["289"],"'setMembers' is assigned a value but never used.","'useState' is defined but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'movies', 'props.memberId', and 'subscriptions'. Either include them or remove the dependency array.",["290"],"'SubscriptionsComp' is defined but never used.","'MoviesComp' is defined but never used.","'EditMovieComp' is defined but never used.","'EditMemberComp' is defined but never used.","'EditUserComp' is defined but never used.","'UserManagmentComp' is defined but never used.","'CreateAccountComp' is defined but never used.","'LoginComp' is defined but never used.","'loadMembersToServer' is assigned a value but never used.","'loadMoviesToServer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'city', 'email', 'members', 'name', and 'setMembers'. Either include them or remove the dependency array.",["291"],"'setUsers' is assigned a value but never used.","'editMember' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["292"],["293"],"'TextField' is defined but never used.","'Button' is defined but never used.","'useHistory' is defined but never used.","'makeStyles' is defined but never used.","'FormGroup' is defined but never used.","'Grid' is defined but never used.","'LogInContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"304","fix":"306"},"Update the dependencies array to be: [getMembers, getMovies, getSubscriptions, getUsers, isLogedIn]",{"range":"307","text":"308"},"Update the dependencies array to be: [searchWord, movies, page]",{"range":"309","text":"310"},"Update the dependencies array to be: [genres, imageUrl, movies, newId, premierd, setMovies, title]",{"range":"311","text":"312"},"Update the dependencies array to be: [movies, props.memberId, subscriptions]",{"range":"313","text":"314"},"Update the dependencies array to be: [city, email, members, name, newId, setMembers]",{"range":"315","text":"316"},"Update the dependencies array to be: [form]",{"range":"317","text":"318"},{"range":"319","text":"318"},[3301,3303],"[getMembers, getMovies, getSubscriptions, getUsers, isLogedIn]",[1958,1978],"[searchWord, movies, page]",[1805,1812],"[genres, imageUrl, movies, newId, premierd, setMovies, title]",[3571,3573],"[movies, props.memberId, subscriptions]",[1466,1473],"[city, email, members, name, newId, setMembers]",[2129,2131],"[form]",[2410,2412]]