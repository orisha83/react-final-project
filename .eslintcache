[{"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\index.js":"1","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\App.js":"2","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\reportWebVitals.js":"3","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\firebase.js":"4","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\Utils.js":"5","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\LoginComp.js":"6","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MainComp.js":"7","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditUserComp.js":"8","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddUserComp.js":"9","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesComp.js":"10","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MovieComp.js":"11","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionWatchedComp.js":"12","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddMovieComp.js":"13","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionsComp.js":"14","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MemberComp.js":"15","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesWatchedComp.js":"16","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\WrapperComp.js":"17","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddMemberComp.js":"18","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UsersManagmentComp.js":"19","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UserComp.js":"20","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditMemberComp.js":"21","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditMovieComp.js":"22","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesContaxtApi.js":"23","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MembersContextApi.js":"24","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UsersContaxtApi.js":"25","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionsContaxtApi.js":"26","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\CreatAccountComp.js":"27","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\LogInContaxtApi.js":"28","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EntryComp.js":"29"},{"size":538,"mtime":1611046555530,"results":"30","hashOfConfig":"31"},{"size":173,"mtime":1611178450579,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"33","hashOfConfig":"31"},{"size":649,"mtime":1609859012217,"results":"34","hashOfConfig":"31"},{"size":1342,"mtime":1611048197125,"results":"35","hashOfConfig":"31"},{"size":3797,"mtime":1611520453723,"results":"36","hashOfConfig":"31"},{"size":7479,"mtime":1611520152956,"results":"37","hashOfConfig":"31"},{"size":10423,"mtime":1611519864257,"results":"38","hashOfConfig":"31"},{"size":7804,"mtime":1611782502778,"results":"39","hashOfConfig":"31"},{"size":6112,"mtime":1611780857012,"results":"40","hashOfConfig":"31"},{"size":5102,"mtime":1611784061010,"results":"41","hashOfConfig":"31"},{"size":2051,"mtime":1611519864257,"results":"42","hashOfConfig":"31"},{"size":2869,"mtime":1611520667773,"results":"43","hashOfConfig":"31"},{"size":4333,"mtime":1611782129608,"results":"44","hashOfConfig":"31"},{"size":5043,"mtime":1611783867622,"results":"45","hashOfConfig":"31"},{"size":7894,"mtime":1611783194343,"results":"46","hashOfConfig":"31"},{"size":2192,"mtime":1611784275432,"results":"47","hashOfConfig":"31"},{"size":2486,"mtime":1611047041963,"results":"48","hashOfConfig":"31"},{"size":2719,"mtime":1611519932030,"results":"49","hashOfConfig":"31"},{"size":3033,"mtime":1611781492951,"results":"50","hashOfConfig":"31"},{"size":3444,"mtime":1611520667832,"results":"51","hashOfConfig":"31"},{"size":3818,"mtime":1611520662499,"results":"52","hashOfConfig":"31"},{"size":357,"mtime":1610642808126,"results":"53","hashOfConfig":"31"},{"size":365,"mtime":1610642880044,"results":"54","hashOfConfig":"31"},{"size":349,"mtime":1610803513750,"results":"55","hashOfConfig":"31"},{"size":413,"mtime":1610899358683,"results":"56","hashOfConfig":"31"},{"size":3253,"mtime":1611520032682,"results":"57","hashOfConfig":"31"},{"size":646,"mtime":1611417381240,"results":"58","hashOfConfig":"31"},{"size":335,"mtime":1611769233585,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"ze8j8d",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"62"},"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\index.js",[],["131","132"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\App.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\reportWebVitals.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\firebase.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\Utils.js",["133"],"import firebase from '../firebase'\r\nimport axios from 'axios'\r\n\r\nlet firestore = firebase.firestore();\r\n\r\nconst getDataFromServer = async function (collection) \r\n{\r\n    let snapshot = await firestore.collection(collection).get()\r\n    let DataArr = []\r\n    let myData = \"\"\r\n    snapshot.forEach(doc =>{\r\n        myData = {data : doc.data() , id : doc.id}\r\n        DataArr.push(myData)\r\n    })\r\n    return DataArr\r\n}\r\n\r\nconst getSpecificDocFromServer = async function (collection, docId) \r\n{\r\n    let snapshot = firestore.collection(collection).doc(docId)\r\n    let doc = await snapshot.get()\r\n    if(doc){\r\n        return doc.data()\r\n    }\r\n}\r\n\r\nconst deleteDataFromServer = async function (collection, id ) \r\n{\r\n    let response = await firestore.collection(collection).doc(id).delete()\r\n    return response\r\n}\r\n\r\nconst sendDataToServer = async function (collection, jsonObj ) \r\n{\r\n    let response = await firestore.collection(collection).add(jsonObj)\r\n    return response\r\n}\r\n\r\nconst updateServer = function (collection, id , jsonObj ) \r\n{\r\n    firestore.collection(collection).doc(id).set(jsonObj)\r\n}\r\n\r\nconst getAllItems = async function(url)\r\n{\r\n  let user = await axios.get(url)\r\n  return user.data\r\n}\r\n\r\nexport default {sendDataToServer, getDataFromServer, getAllItems, updateServer, deleteDataFromServer, getSpecificDocFromServer};\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\LoginComp.js",["134","135","136","137","138","139","140"],"import {useState, useContext} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useHistory} from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {LogInContext} from './LogInContaxtApi'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    link: {\r\n        textDecoration: 'none',\r\n      },\r\n    button: {\r\n        color : 'white'\r\n      },\r\n      paper: {\r\n        padding: theme.spacing(3),\r\n        borderColor : 'black',\r\n        borderStyle: 'solid',\r\n        borderWidth: '2px',\r\n      },\r\n  }));\r\n\r\nfunction LoginComp()\r\n{\r\n    const classes = useStyles();\r\n    const [user,setUser] = useState(\"\")\r\n    const [pass,setPass] = useState(\"\")\r\n    const [isLogInFailed, setIsLogInFailed] = useState(false)\r\n    const history = useHistory()\r\n    const {isLogedIn, logInUsers, logInUser, isAdmin } = useContext(LogInContext)\r\n\r\n    const [isLogedInVar,setIsLogedInVar] = isLogedIn\r\n    const [logInUsersVar,setLogInUsersVar] = logInUsers\r\n    const [logInUserVar,setLogInUserVar] = logInUser\r\n    const [isAdminVar,setIsAdminVar] = isAdmin\r\n\r\n    const clickedLogin = () =>\r\n    {\r\n        let logedUser = logInUsersVar.find(x => x.data.UserName == user && x.data.Password == pass)\r\n        if(logedUser)\r\n        {\r\n            let LogedInUser = {user: user , pass : pass}\r\n            setLogInUserVar(LogedInUser)\r\n            if(user == 'orisha')\r\n            {\r\n                setIsAdminVar(true)\r\n            }\r\n            else\r\n            {\r\n                setIsAdminVar(false)\r\n            }\r\n            history.push('/')\r\n            setIsLogedInVar(true)\r\n            setIsLogInFailed(false)\r\n        }\r\n        else\r\n        {\r\n            setIsLogInFailed(true)\r\n            setUser(\"\")\r\n            setPass(\"\")\r\n        }\r\n    }\r\n\r\n    const clickedNewAccount = () =>\r\n    {\r\n        history.push('/NewAccount')\r\n    }\r\n\r\n       return(\r\n        <div> \r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                        <FormGroup className={classes.paper}>\r\n                            <h2>Welcome To The Log In Page</h2>\r\n                            <TextField required id=\"outlined-basic\" label=\"User Name\" variant=\"outlined\" value={user} onChange={e => setUser(e.target.value)}/><br/>\r\n                            <TextField required  id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" value={pass} onChange={e => setPass(e.target.value)}/><br/>\r\n                            <Grid container direction=\"row\" justify=\"center\" >\r\n                                <Grid item>\r\n                                    <Button style={{textTransform: 'none'}} variant=\"contained\" onClick={clickedLogin}>Login</Button>\r\n                                </Grid>\r\n                                <Grid item container direction=\"column\" alignItems=\"center\"><br/>\r\n                                <Grid item>\r\n                                    {isLogInFailed && <h3>Failed To LogIn!</h3>}\r\n                                    {isLogInFailed && <h3>User or Password are Incorrect</h3>} \r\n                                    {isLogInFailed && <h3>please try again</h3>}\r\n                                </Grid>\r\n                                    Don't have an account yet? \r\n                                <Button style={{textTransform: 'none'}} variant=\"contained\" onClick={clickedNewAccount}>Create A New Account</Button>\r\n                            </Grid>\r\n                            </Grid>\r\n                        </FormGroup>       \r\n                    </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MainComp.js",["141","142","143","144","145","146","147","148"],"import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link, Switch,Route, useHistory} from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Utils from './Utils'\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' // Import css\r\nimport { MoviesContext } from \"./MoviesContaxtApi\";\r\nimport {MembersContext} from './MembersContextApi'\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport {LogInContext} from './LogInContaxtApi'\r\nimport { SubscriptionsContext } from './SubscriptionsContaxtApi'\r\nimport SubscriptionsComp from './SubscriptionsComp'\r\nimport MoviesComp from './MoviesComp'\r\nimport MovieComp from './MovieComp'\r\nimport EditMovieComp from './EditMovieComp'\r\nimport EditMemberComp from './EditMemberComp'\r\nimport EditUserComp from './EditUserComp'\r\nimport MemberComp from './MemberComp'\r\nimport UserManagmentComp from './UsersManagmentComp'\r\nimport CreateAccountComp from './CreatAccountComp'\r\nimport LoginComp from './LoginComp'\r\nimport EntryComp from './EntryComp'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appbar: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n      },\r\n    button: {\r\n        color : 'white'\r\n      },\r\n      paper: {\r\n        padding: theme.spacing(3),\r\n        borderColor : 'black',\r\n        borderStyle: 'solid',\r\n        borderWidth: '2px',\r\n      },\r\n  }));\r\n\r\nfunction MainComp()\r\n{\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n\r\n    const {isLogedIn, logInUsers, logInUser , isAdmin} = useContext(LogInContext)\r\n\r\n    const [isLogedInVar,setIsLogedInVar] = isLogedIn\r\n    const [logInUsersVar,setLogInUsersVar] = logInUsers\r\n    const [logInUserVar,setLogInUserVar] = logInUser\r\n    const [isAdminVar,setIsAdminVar] = isAdmin\r\n\r\n    const [movies, setMovies] = useContext(MoviesContext)\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [users, setUsers] = useContext(UsersContext);\r\n    const [subscriptions, setSubscriptions] = useContext(SubscriptionsContext);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    \r\n    const logingOut = () =>\r\n    {\r\n        setLogInUserVar(\"\")\r\n        setIsLogedInVar(false)\r\n        history.push('/LogIn')\r\n    }\r\n\r\n    const clickedLogOut = () =>\r\n    {\r\n        handleClose()\r\n        confirmAlert({\r\n            title: 'Are you sure you want to Log Out?',                \r\n            buttons: [\r\n                {\r\n                  label: 'Yes',\r\n                  onClick: () => logingOut()\r\n                },\r\n                {\r\n                  label: 'No'\r\n                }\r\n              ]\r\n          })\r\n    }\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n\r\n    const getUsers = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Users\")\r\n        setUsers(res)\r\n    }\r\n\r\n    const getMovies = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Movies\")\r\n        setMovies(res)\r\n    }\r\n\r\n    const getMembers = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Members\")\r\n        setMembers(res)\r\n    }\r\n\r\n    const getSubscriptions = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"Subscriptions\")\r\n        setSubscriptions(res)\r\n    }\r\n\r\n    const getUsersLogin = async () =>\r\n    {\r\n        let res = await Utils.getDataFromServer(\"UsersLogin\")\r\n        setLogInUsersVar(res)\r\n    }\r\n\r\n    useEffect( async () => {\r\n        getMovies()\r\n        getMembers()\r\n        getUsers()\r\n        getSubscriptions()\r\n        getUsersLogin()\r\n        setIsLogedInVar(false)\r\n    },[])\r\n   \r\n       return(\r\n        <div >\r\n           <AppBar position=\"sticky\" className={classes.appbar}>\r\n          <Toolbar >\r\n              <Grid container direction=\"row\" justify=\"center\" spacing={5}>\r\n                    <Grid item>\r\n                       {isLogedInVar \r\n                        ? <Link to=\"/Movies\" className={classes.link}><Button className={classes.button} >Movies</Button></Link>\r\n                        : <Link to=\"/LogIn\" className={classes.link}><Button className={classes.button} >Log In</Button></Link> \r\n                       }\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {isLogedInVar \r\n                            ? <Link to=\"/Subscriptions\" className={classes.link}><Button className={classes.button}>Subscriptions</Button></Link>\r\n                            : <Link to=\"/NewAccount\" className={classes.link}><Button className={classes.button}>Sign In</Button></Link>\r\n                        }\r\n                    </Grid>\r\n                    <Grid item>\r\n                        {isAdminVar && isLogedInVar && <Link to=\"/UsersManagment\" className={classes.link}><Button className={classes.button}>User Managment</Button></Link>}\r\n                    </Grid>\r\n                    <Grid item>\r\n                    {isLogedInVar && \r\n                                <div>\r\n                                    <IconButton aria-label=\"account of current user\" aria-controls=\"menu-appbar\" aria-haspopup=\"true\" onClick={handleMenu} color=\"inherit\">\r\n                                        <AccountCircle />\r\n                                    </IconButton>\r\n                                    <Menu id=\"menu-appbar\" anchorEl={anchorEl} anchorOrigin={{vertical: 'top',horizontal: 'right',}} keepMounted \r\n                                                transformOrigin={{vertical: 'top',horizontal: 'right',}} open={open} onClose={handleClose}>\r\n                                        <MenuItem onClick={handleClose}>{logInUserVar.user}</MenuItem>\r\n                                        <MenuItem onClick={clickedLogOut} >Log Out</MenuItem>\r\n                                    </Menu>\r\n                                </div>\r\n                    }\r\n                    </Grid>\r\n                </Grid>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={EntryComp}/>    \r\n            <Route path=\"/LogIn\" component={LoginComp}/>   \r\n            <Route path=\"/NewAccount\" component={CreateAccountComp}/>\r\n            <Route path=\"/Movies/Edit/:id\" component={EditMovieComp}/>\r\n            <Route path=\"/Movies\" component={MoviesComp}/>\r\n            <Route path=\"/Movie/:id\" component={MovieComp}/>\r\n            <Route path=\"/Member/:id\" component={MemberComp}/>\r\n            <Route path=\"/Subscriptions/Edit/:id\" component={EditMemberComp}/>\r\n            <Route path=\"/Subscriptions\" component={SubscriptionsComp}/>\r\n            <Route path=\"/UsersManagment/Edit/:id\" component={EditUserComp}/>\r\n            <Route path=\"/UsersManagment\" component={UserManagmentComp}/>       \r\n        </Switch>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditUserComp.js",["149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167"],"import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {UsersContext} from './UsersContaxtApi'\r\nimport Utils from './Utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\n\r\nfunction EditUserComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [users, setUsers] = useContext(UsersContext);\r\n    const [editUser, setEditUser] = useState(\"\")\r\n    \r\n    const [fname, setFName] = useState(\"\")\r\n    const [lname, setLName] = useState(\"\")\r\n    const [userName, setUserName] = useState(\"\")\r\n    const [sessionTimeOut, setSessionTimeOut] = useState(0)\r\n\r\n    const [viewSubscription, setViewSubscription] = useState(\"\")\r\n    const [createSubscription, setCreateSubscription] = useState(\"\");\r\n    const [deleteSubscription, setDeleteSubscription] = useState(\"\")\r\n    const [updateSubscription, setUpdateSubscription] = useState(\"\")\r\n    const [viewMovies, setViewMovies] = useState(\"\")\r\n    const [createMovies, setCreateMovies] = useState(\"\")\r\n    const [deleteMovies, setDeleteMovies] = useState(\"\")\r\n    const [updateMovies, setUpdateMovies] = useState(\"\")\r\n\r\n\r\n    const assignCheckBoxses = () =>\r\n    {\r\n        if(editUser != \"\")\r\n        {                \r\n            editUser.data.Permissions.forEach(item =>\r\n            {\r\n                switch(item) {\r\n                    case 'Delete Movies': \r\n                    setDeleteMovies(\"Delete Movies\")\r\n                    break;\r\n                \r\n                    case 'Create Movies':  \r\n                    setCreateMovies(\"Create Movies\")\r\n                    break;\r\n\r\n                    case 'Update Movies':  \r\n                    setUpdateMovies(\"Update Movies\")\r\n                    break;\r\n                \r\n                    case 'View Movies':  \r\n                    setViewMovies(\"View Movies\")\r\n                    break;\r\n\r\n                    case 'Create Subscription': \r\n                    setCreateSubscription(\"Create Subscription\")\r\n                    break;\r\n                \r\n                    case 'Delete Subscription': \r\n                    setDeleteSubscription(\"Delete Subscription\")\r\n                    break;\r\n\r\n                    case 'Update Subscription': \r\n                    setUpdateSubscription(\"Update Subscription\")\r\n                    break;\r\n                \r\n                    case 'View Subscription':  \r\n                    setViewSubscription(\"View Subscription\")\r\n                    break;\r\n                \r\n                    default:\r\n                    //code here\r\n                    break;\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const clickedUpdate = () =>\r\n    {\r\n        let permissionsObj = []\r\n        if(viewSubscription != \"\")\r\n        permissionsObj.push(viewSubscription)\r\n        \r\n        if(createSubscription != \"\")\r\n        permissionsObj.push(createSubscription)\r\n        \r\n        if(deleteSubscription != \"\")\r\n        permissionsObj.push(deleteSubscription)\r\n\r\n        if(updateSubscription != \"\")\r\n        permissionsObj.push(updateSubscription)\r\n\r\n        if(viewMovies != \"\")\r\n        permissionsObj.push(viewMovies)\r\n\r\n        if(createMovies != \"\")\r\n        permissionsObj.push(createMovies)\r\n\r\n        if(deleteMovies != \"\")\r\n        permissionsObj.push(deleteMovies)\r\n\r\n        if(updateMovies != \"\")\r\n        permissionsObj.push(updateMovies)\r\n\r\n        let UserToUsers = {id : props.match.params.id , data : {FirstName : fname, LastName : lname, UserName : userName, SessionTimeOut : sessionTimeOut, CreatedDate : editUser.data.CreatedDate, Permissions : permissionsObj}}\r\n        let UserObjToServer = {FirstName : fname, LastName : lname, UserName : userName, SessionTimeOut : sessionTimeOut, CreatedDate : editUser.data.CreatedDate, Permissions : permissionsObj}\r\n        let UsersArray = users\r\n        let UserIndex = users.findIndex(x => x.id == UserToUsers.id )\r\n        if(UserIndex >= 0 )\r\n        {\r\n            UsersArray[UserIndex] = UserToUsers\r\n            setUsers(UsersArray)\r\n             Utils.updateServer('Users', UserToUsers.id, UserObjToServer)\r\n        }\r\n    }\r\n\r\n    const form = () => \r\n    {\r\n      let userIndex = users.findIndex(x => x.id == props.match.params.id )\r\n      if(userIndex >= 0 )\r\n      {\r\n        setEditUser(users[userIndex])\r\n        setFName(users[userIndex].data.FirstName)\r\n        setLName(users[userIndex].data.LastName)\r\n        setUserName(users[userIndex].data.UserName)\r\n        setSessionTimeOut(users[userIndex].data.SessionTimeOut)\r\n      }     \r\n    }\r\n\r\n    useEffect(() => {\r\n      form()\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        assignCheckBoxses()\r\n      },[editUser])\r\n\r\n\r\n      useEffect(() =>\r\n    {\r\n        if(createSubscription != \"\" && deleteSubscription != \"\" && updateSubscription != \"\")\r\n        {\r\n            setViewSubscription(\"View Subscription\")\r\n        }\r\n        else\r\n        {\r\n            setViewSubscription(\"\")\r\n        }\r\n    },[createSubscription, deleteSubscription, updateSubscription])\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(createMovies != \"\" && deleteMovies != \"\" && updateMovies != \"\")\r\n        {\r\n            setViewMovies(\"View Movies\")\r\n        }\r\n        else\r\n        {\r\n            setViewMovies(\"\")\r\n        }\r\n    },[createMovies, deleteMovies, updateMovies])\r\n\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                <FormGroup className={classes.paper}>\r\n                    <h3>Edit User : {props.match.params.name}</h3>\r\n                \r\n                    First Name:<TextField required id=\"outlined-basic\" placeholder={editUser && editUser.data.FirstName} onChange={e =>setFName(e.target.value)} variant=\"outlined\"/><br/>\r\n                    Last Name:<TextField required id=\"outlined-basic\" placeholder={editUser && editUser.data.LastName} onChange={e =>setLName(e.target.value)} variant=\"outlined\" /><br/>\r\n                    User Name:<TextField required id=\"outlined-basic\" placeholder={editUser && editUser.data.UserName} onChange={e =>setUserName(e.target.value)} variant=\"outlined\" /><br/>\r\n                    Session time out (Minuts):\r\n                    <TextField required id=\"outlined-basic\" placeholder={editUser && editUser.data.SessionTimeOut} onChange={e =>setSessionTimeOut(e.target.value)} variant=\"outlined\" /><br/>\r\n                    Created date : {editUser && editUser.data.CreatedDate.toDate().toString()}<br/>\r\n                    <h3>Permissions :</h3>\r\n                    <FormGroup row>\r\n                        <FormControlLabel control={<Checkbox checked={viewSubscription} onChange={e => {if(e.target.checked){setViewSubscription(e.target.name)}else{setViewSubscription(\"\")}}} size=\"small\"/>}label=\"View Subscription\" name=\"View Subscription\"/>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <FormControlLabel control={<Checkbox checked={createSubscription} onChange={e => {if(e.target.checked){setCreateSubscription(e.target.name)}else{setCreateSubscription(\"\")}}} size=\"small\"/>}label=\"Create Subscription\" name=\"Create Subscription\"/>\r\n                        <FormControlLabel control={<Checkbox checked={deleteSubscription} onChange={e => {if(e.target.checked){setDeleteSubscription(e.target.name)}else{setDeleteSubscription(\"\")}}} size=\"small\"/>}label=\"Delete Subscription\" name=\"Delete Subscription\"/>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <FormControlLabel control={<Checkbox checked={updateSubscription} onChange={e => {if(e.target.checked){setUpdateSubscription(e.target.name)}else{setUpdateSubscription(\"\")}}} size=\"small\"/>}label=\"Update Subscription\" name=\"Update Subscription\"/>\r\n                        <FormControlLabel control={<Checkbox checked={viewMovies} onChange={e => {if(e.target.checked){setViewMovies(e.target.name)}else{setViewMovies(\"\")}}} size=\"small\"/>}label=\"View Movies\" name=\"View Movies\"/>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;\r\n                        <FormControlLabel control={<Checkbox checked={createMovies} onChange={e => {if(e.target.checked){setCreateMovies(e.target.name)}else{setCreateMovies(\"\")}}} size=\"small\"/>}label=\"Create Movies\" name=\"Create Movies\"/>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <FormControlLabel control={<Checkbox checked={deleteMovies} onChange={e => {if(e.target.checked){setDeleteMovies(e.target.name)}else{setDeleteMovies(\"\")}}} size=\"small\"/>}label=\"Delete Movies\" name=\"Delete Movies\"/>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <FormControlLabel control={<Checkbox checked={updateMovies} onChange={e => {if(e.target.checked){setUpdateMovies(e.target.name)}else{setUpdateMovies(\"\")}}} size=\"small\"/>}label=\"Update Movies\" name=\"Update Movies\"/>\r\n                    </FormGroup>\r\n                    \r\n                <Grid container direction=\"row\" justify=\"center\" >\r\n                    <Grid item>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/UsersManagment\"><Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large' onClick={clickedUpdate}></Button></Link>\r\n                    </Grid>\r\n                     <Grid item>\r\n                        <Link style={{ textDecoration: 'none' }} to=\"/UsersManagment\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} size='large' variant=\"contained\"></Button></Link> \r\n                    </Grid>\r\n                </Grid> \r\n            </FormGroup>\r\n        </Grid>\r\n            \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default EditUserComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddUserComp.js",["168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesComp.js",["191","192","193","194","195","196","197","198","199","200","201","202","203"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MovieComp.js",["204","205","206","207","208","209","210","211","212","213"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionWatchedComp.js",["214","215","216","217","218"],"import {useState, useEffect, useContext} from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { SubscriptionsContext } from './SubscriptionsContaxtApi'\r\nimport {MembersContext} from './MembersContextApi'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nfunction SubscriptionsWatchedComp(props)\r\n{\r\n   const [subscriptions, setSubscriptions] = useContext(SubscriptionsContext);\r\n   const [members, setMembers] = useContext(MembersContext);\r\n   const [subscriptionAndDatesArray, setSubscriptionAndDatesArray] = useState([])\r\n\r\n   const createSubscriptionsArray = () =>\r\n    {\r\n        let subscriptionAndDatesArray = []\r\n        let subscriptionAndDatesObj = {}\r\n        let Member = {}\r\n\r\n        subscriptions.forEach(function(element)\r\n        {\r\n            element.data.Movies.forEach(function(item)\r\n            {\r\n                if(item.MovieId == props.movieId)\r\n                {\r\n                    Member = members.find(x => x.id == element.data.MemberId)\r\n                    if(Member)\r\n                    {\r\n                        subscriptionAndDatesObj = {memberId : Member.id, MemberName : Member.data.Name, date : item.DateWatched}\r\n                        subscriptionAndDatesArray.push(subscriptionAndDatesObj)\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        setSubscriptionAndDatesArray(subscriptionAndDatesArray)\r\n    }\r\n\r\n   useEffect(() =>\r\n   {\r\n    createSubscriptionsArray()\r\n   },[])\r\n\r\n\r\n       return(\r\n        <div>\r\n          <Typography variant=\"h5\" variantMapping=\"h1\" gutterBottom align=\"center\">\r\n                        Subscriptions watched\r\n                    </Typography>\r\n            \r\n            <ul>\r\n              {\r\n                  subscriptionAndDatesArray.map((item,index) =>{\r\n                      return <li key={index}><Link to={`/Member/${item.memberId}`}>{item.MemberName}</Link>, {item.date}</li>\r\n                  })\r\n              }\r\n            </ul>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsWatchedComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddMovieComp.js",["219","220"],"import {useState, useContext, useEffect, useRef} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\nimport Utils from './Utils'\r\n\r\n\r\nconst AddMovieComp = (params) =>\r\n{\r\n    const [title, setTitle] = useState(\"\")\r\n    const [genres, setGenres] = useState(\"\")\r\n    const [imageUrl, setImageUrl] = useState(\"\")\r\n    const [premierd, setPremierd] = useState()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [newId, setNewId] = useState(0)\r\n    const [pressed, setPressed] = useState(false)\r\n\r\n    const clickedSave = async () =>\r\n    {\r\n        let genresArry = genres.split(\" \")\r\n        let moviesObj = {Title : title, date : premierd, ImageUrl : imageUrl, Genres : genresArry}\r\n        let res = await Utils.sendDataToServer('Movies', moviesObj)\r\n        setNewId(res.id)\r\n        params.clickedAllMovies()\r\n    }\r\n\r\n    const initialRender = useRef(true);\r\n    useEffect(() =>\r\n    {\r\n        console.log(\"useEffect - 1\")\r\n        if(initialRender.current){\r\n            console.log(\"useEffect - 2\")\r\n            initialRender.current = false;\r\n        }else{\r\n                console.log(\"useEffect - 3\")\r\n                let genresArry = genres.split(\" \")\r\n                let moviesObjtoMovies = {id : newId , data : {Title : title, date : premierd, ImageUrl : imageUrl, Genres : genresArry}}\r\n                let currentMoviesArray = movies\r\n                currentMoviesArray.push(moviesObjtoMovies)\r\n                setMovies(currentMoviesArray)\r\n                setPressed(true)\r\n            }\r\n    },[newId])\r\n\r\n    return(\r\n        <div>\r\n            <br/>\r\n            <FormGroup>\r\n                Name :  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setTitle(e.target.value)}/><br/>\r\n                Genres : &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" size=\"small\" onChange={e =>setGenres(e.target.value)}/><br/>\r\n                Image URL : <TextField variant=\"outlined\" size=\"small\" onChange={e =>setImageUrl(e.target.value)}/><br/>\r\n                Premierd : &nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" size=\"small\" onChange={e =>setPremierd(e.target.value)}/>\r\n            </FormGroup><br/><br/>\r\n\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Button style={{textTransform: 'none'}} startIcon={<SaveIcon />} size=\"large\" variant=\"contained\" onClick={clickedSave}></Button>  \r\n            <Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size=\"large\" onClick={() => params.clickedAllMovies()}></Button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMovieComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionsComp.js",["221","222","223","224","225","226","227","228","229"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MemberComp.js",["230","231","232","233","234","235","236","237","238"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesWatchedComp.js",["239","240","241","242","243","244","245","246","247"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\WrapperComp.js",["248","249","250"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\AddMemberComp.js",["251","252"],"import {useState, useContext, useRef, useEffect} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Utils from './Utils'\r\n\r\nfunction AddMemberComp(params)\r\n{\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [newId, setNewId] = useState(0)\r\n    const [pressed, setPressed] = useState(false)\r\n\r\n    const clickedSave = async () =>\r\n    {\r\n        let MemberObj = {Name : name, Email : email, City : city}\r\n        let res = await Utils.sendDataToServer('Members', MemberObj)\r\n        setNewId(res.id)\r\n        params.clickedAllMembers()\r\n    }\r\n\r\n    const initialRender = useRef(true);\r\n    useEffect(() =>\r\n    {\r\n        if(initialRender.current){\r\n            initialRender.current = false;\r\n        }else{\r\n                let MemberObjToMembers = {id : newId , data : {Name : name, Email : email, City : city}}\r\n                let currentMembersArray = members\r\n                currentMembersArray.push(MemberObjToMembers)\r\n                setMembers(currentMembersArray)\r\n                setPressed(true)\r\n            }\r\n    },[newId])\r\n   \r\n       return(\r\n        <div>\r\n            <br/>\r\n            <FormGroup>\r\n           Name :  <TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setName(e.target.value)}/><br/>\r\n           Email : &nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setEmail(e.target.value)}/><br/>\r\n           City  : &nbsp;&nbsp;&nbsp;<TextField required label=\"Required\" variant=\"outlined\" size=\"small\" onChange={e =>setCity(e.target.value)}/><br/>\r\n           </FormGroup>\r\n           <br/>\r\n           &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n            <Button style={{textTransform: 'none'}} startIcon={<SaveIcon />} variant=\"contained\" size=\"large\" onClick={clickedSave}></Button> \r\n            <Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size=\"large\" onClick={() => params.clickedAllMembers()}></Button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMemberComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UsersManagmentComp.js",["253"],"import {useState, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport UserComp from './UserComp'\r\nimport AddUserComp from './AddUserComp'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {UsersContext} from './UsersContaxtApi'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(5),     \r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction SubscriptionsComp()\r\n{\r\n    const classes = useStyles()\r\n    const [allUsersButtonColor,setAllUsersButtonColor] = useState(\"primary\")\r\n    const [addUserButtonColor,setAddUserButtonColor] = useState(\"\")\r\n    const [allUsersPage, setAllUsersPage] = useState(true)\r\n    const [addUserPage, setAddUserPage] = useState(false)\r\n    const [users, setUsers] = useContext(UsersContext);\r\n\r\n\r\n    const clickedAllUsers = () => \r\n    {\r\n        setAddUserButtonColor(\"\")\r\n        setAllUsersButtonColor(\"primary\")\r\n        setAllUsersPage(true)\r\n        setAddUserPage(false)\r\n    }\r\n\r\n    const clickedAddUser = () => \r\n    {\r\n        setAllUsersButtonColor(\"\")\r\n        setAddUserButtonColor(\"primary\")\r\n        setAllUsersPage(false)\r\n        setAddUserPage(true)\r\n    }\r\n\r\n       return(\r\n        <div >\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <Grid  item >\r\n                <Typography variant=\"h5\" gutterBottom align=\"center\">\r\n                Users Managment\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item container direction=\"row\" justify=\"center\">\r\n                    <Grid item >\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={allUsersButtonColor} onClick={clickedAllUsers}>All Users</Button>\r\n                    </Grid>\r\n                    <Grid item >\r\n                        <Button style={{textTransform: 'none'}} variant=\"contained\" color={addUserButtonColor} onClick={clickedAddUser}>Add User</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"center\"> \r\n                    {allUsersPage && users && users.map((item,index) => {return <div><Grid item className={classes.paper}><UserComp userDetails={item}/></Grid><br/></div>})}\r\n                    {addUserPage && <Grid item className={classes.paper}><AddUserComp clickedAllUsers={clickedAllUsers}/></Grid>}\r\n                </Grid>\r\n           </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionsComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UserComp.js",["254","255"],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditMemberComp.js",["256","257","258","259"],"import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {MembersContext} from './MembersContextApi'\r\nimport Utils from './Utils'\r\nimport './Main.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction EditMemberComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [members, setMembers] = useContext(MembersContext);\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [city, setCity] = useState(\"\")\r\n    const [editMember, setEditMember] = useState(\"\")\r\n\r\n    const clickedUpdate = () =>\r\n    {\r\n        debugger;\r\n        let MemberObjToMembers = {id : props.match.params.id , data : {Name : name, Email : email, City : city}}\r\n        let MemberObjToServer = {Name : name, Email : email, City : city}\r\n        let MembersArray = members\r\n        let MemberIndex = members.findIndex(x => x.id == MemberObjToMembers.id )\r\n        if(MemberIndex >= 0 )\r\n        {\r\n          MembersArray[MemberIndex] = MemberObjToMembers\r\n          setMembers(MembersArray)\r\n          Utils.updateServer('Members', MemberObjToMembers.id, MemberObjToServer)\r\n        }\r\n    }\r\n\r\n    const form = () => \r\n    {\r\n      let memberIndex = members.findIndex(x => x.id == props.match.params.id )\r\n      if(memberIndex >= 0 )\r\n      {\r\n        setEditMember(members[memberIndex])\r\n        setName(members[memberIndex].data.Name)\r\n        setEmail(members[memberIndex].data.Email)\r\n        setCity(members[memberIndex].data.City)\r\n      }     \r\n    }\r\n\r\n    useEffect(() => {\r\n      form()\r\n    },[])\r\n   \r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                <FormGroup className={classes.paper}>   \r\n                    <h3>Edit Member : {name}</h3>\r\n                    Name :  <TextField variant=\"outlined\" placeholder={name} onChange={e =>setName(e.target.value)}/><br/>\r\n                    Email : &nbsp;<TextField variant=\"outlined\" placeholder={email} onChange={e =>setEmail(e.target.value)}/><br/>\r\n                    City : &nbsp;&nbsp;&nbsp;<TextField variant=\"outlined\" placeholder={city} onChange={e =>setCity(e.target.value)}/><br/>\r\n                  <br/>\r\n                    <FormGroup row>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Link style={{ textDecoration: 'none' }} to=\"/Subscriptions\"><Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large' onClick={clickedUpdate}></Button></Link> \r\n                        <Link style={{ textDecoration: 'none' }} to=\"/Subscriptions\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} variant=\"contained\" size='large'></Button></Link>\r\n                    </FormGroup>\r\n                </FormGroup>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMemberComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EditMovieComp.js",["260","261","262"],"import {useState, useEffect, useContext} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Link} from 'react-router-dom'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Utils from './Utils'\r\nimport {MoviesContext} from \"./MoviesContaxtApi\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\n\r\nfunction EditMovieComp(props)\r\n{\r\n    const classes = useStyles()\r\n    const [genres, setGenres] = useState(\"\")\r\n    const [imageUrl, setImageUrl] = useState(\"\")\r\n    const [premierd, setPremierd] = useState()\r\n    const [movies, setMovies] = useContext(MoviesContext);\r\n    const [editMovie, setEditMovie] = useState(\"\")\r\n\r\n    const clickedUpdate = () =>\r\n    {\r\n        let moviesObjtoMovies = {id : props.match.params.id , data : {Title : editMovie.data.Title, date : premierd, ImageUrl : imageUrl, Genres : genres}}\r\n        let moviesObjtoServer = {Title : editMovie.data.Title, date : premierd, ImageUrl : imageUrl, Genres : genres}\r\n        let moviesArray = movies\r\n        let movieIndex = movies.findIndex(x => x.id == moviesObjtoMovies.id )\r\n        if(movieIndex >= 0 )\r\n        {\r\n          moviesArray[movieIndex] = moviesObjtoMovies\r\n          setMovies(moviesArray)\r\n          Utils.updateServer('Movies', moviesObjtoMovies.id, moviesObjtoServer)\r\n        }\r\n    }\r\n\r\n    const updateGenres = (e) =>\r\n    {\r\n      let newGenres = e.target.value\r\n      newGenres = newGenres.split(\" \")\r\n      setGenres(newGenres)\r\n    }\r\n\r\n    const form = () => \r\n    {\r\n      let movieIndex = movies.findIndex(x => x.id == props.match.params.id )\r\n      if(movieIndex >= 0 )\r\n      {\r\n        setEditMovie(movies[movieIndex])\r\n        setGenres(movies[movieIndex].data.Genres)\r\n        setImageUrl(movies[movieIndex].data.ImageUrl)\r\n        setPremierd(movies[movieIndex].data.date)\r\n      }     \r\n    }\r\n\r\n    useEffect(() => {\r\n      form()\r\n    },[])\r\n   \r\n       return(\r\n        <div >\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n            {\r\n                <FormGroup className={classes.paper}>\r\n                  <h2>Edit Movie : {editMovie && editMovie.data.Title}</h2>\r\n                  Name : <TextField variant=\"outlined\" value={editMovie && editMovie.data.Title}/><br/>\r\n                  Genres : <TextField variant=\"outlined\" placeholder={editMovie && editMovie.data.Genres} onChange={updateGenres}/><br/>\r\n                  Image URL :  <TextField variant=\"outlined\" placeholder={editMovie && editMovie.data.ImageUrl} onChange={e =>setImageUrl(e.target.value)}/><br/>\r\n                  Premierd :  <TextField variant=\"outlined\" placeholder={editMovie && editMovie.data.date} onChange={e =>setPremierd(e.target.value)}/>\r\n                  <br/>\r\n                  <br/>\r\n                  <FormGroup row>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/Movies\"><Button style={{textTransform: 'none'}} startIcon={<UpdateIcon />} variant=\"contained\" size='large' onClick={clickedUpdate}></Button></Link>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/Movies\"><Button style={{textTransform: 'none'}} startIcon={<CancelIcon />} size='large' variant=\"contained\"></Button></Link>\r\n                 </FormGroup>    \r\n                </FormGroup>\r\n            }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditMovieComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MoviesContaxtApi.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\MembersContextApi.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\UsersContaxtApi.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\SubscriptionsContaxtApi.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\CreatAccountComp.js",["263"],"import {useState, useContext} from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {LogInContext} from './LogInContaxtApi'\r\nimport Utils from './Utils'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(3),\r\n      borderColor : 'black',\r\n      borderStyle: 'solid',\r\n      borderWidth: '2px',\r\n    },\r\n  }));\r\n\r\nfunction CreateAccountComp() \r\n{\r\n    const classes = useStyles()\r\n    const {logInUsers} = useContext(LogInContext)\r\n    const [logInUsersVar,setLogInUsersVar] = logInUsers\r\n    const [user,setUser] = useState(\"\")\r\n    const [pass,setPass] = useState(\"\")\r\n    const [isLogInFailed, setIsLogInFailed] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const ClickedCreated = () =>\r\n    {\r\n        let logedUser = logInUsersVar.find(x => x.data.UserName == user)\r\n        if(logedUser)\r\n        {\r\n            let newUserObjToServer = {UserName : logedUser.data.UserName, Password : pass}\r\n            let newUserObjToUsersLogin = {id : logedUser.id, data : {UserName : logedUser.data.UserName, Password : pass}}\r\n            Utils.updateServer('UsersLogin', logedUser.id, newUserObjToServer)\r\n            let currentUsersLogin = logInUsersVar\r\n            currentUsersLogin.push(newUserObjToUsersLogin)\r\n            setLogInUsersVar(currentUsersLogin)\r\n            history.push('/LogIn')\r\n        }\r\n        else\r\n        {\r\n            setIsLogInFailed(true)\r\n            setUser(\"\")\r\n            setPass(\"\")\r\n        }\r\n    }\r\n       return(\r\n        <div>\r\n            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n            {\r\n            <FormGroup className={classes.paper}>\r\n                       <h2>Create an Account</h2>\r\n                <TextField required id=\"outlined-basic\" label=\"User Name\" variant=\"outlined\" value={user} onChange={e => setUser(e.target.value)}/><br/><br/>\r\n                <TextField required  id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" value={pass} onChange={e => setPass(e.target.value)}/><br/><br/>\r\n            <Grid container direction=\"row\" justify=\"center\" >\r\n            <Grid item>\r\n                {isLogInFailed && <h3>Failed To Create!</h3>}\r\n                {isLogInFailed && <h3>To Create An Account the User Must</h3>} \r\n                {isLogInFailed && <h3>be created in the system by the Admin</h3>}\r\n            </Grid>\r\n                <Grid item>\r\n                    <Button style={{textTransform: 'none'}} variant=\"contained\" size='large' onClick={ClickedCreated}>Create</Button>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Link style={{ textDecoration: 'none' }} to=\"/LogIn\"><Button style={{textTransform: 'none'}}  size='large' variant=\"contained\">Cancel</Button></Link>\r\n                </Grid>\r\n            </Grid>\r\n            </FormGroup>\r\n            }\r\n          </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateAccountComp;\r\n\r\n","C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\LogInContaxtApi.js",[],"C:\\Users\\Ori\\Desktop\\fullstack\\ReactFinalProject\\react-final-project\\src\\components\\EntryComp.js",["264"],"\r\nfunction EntryComp()\r\n{\r\n    \r\n       return(\r\n        <div> \r\n           <img src=\"https://zigzorg.com/wp-content/uploads/2015/12/Collage-Movies-5-50p.jpg\" width=\"1500\" height=\"1000\" \r\n                    style={{display:\"block\",  marginLeft:\"auto\",  marginRight:\"auto\"}}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EntryComp;\r\n\r\n",{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":50,"column":1,"nodeType":"271","endLine":50,"endColumn":129},{"ruleId":"272","severity":1,"message":"273","line":34,"column":12,"nodeType":"274","messageId":"275","endLine":34,"endColumn":24},{"ruleId":"272","severity":1,"message":"276","line":35,"column":26,"nodeType":"274","messageId":"275","endLine":35,"endColumn":42},{"ruleId":"272","severity":1,"message":"277","line":36,"column":12,"nodeType":"274","messageId":"275","endLine":36,"endColumn":24},{"ruleId":"272","severity":1,"message":"278","line":37,"column":12,"nodeType":"274","messageId":"275","endLine":37,"endColumn":22},{"ruleId":"279","severity":1,"message":"280","line":41,"column":65,"nodeType":"281","messageId":"282","endLine":41,"endColumn":67},{"ruleId":"279","severity":1,"message":"280","line":41,"column":92,"nodeType":"281","messageId":"282","endLine":41,"endColumn":94},{"ruleId":"279","severity":1,"message":"280","line":46,"column":21,"nodeType":"281","messageId":"282","endLine":46,"endColumn":23},{"ruleId":"272","severity":1,"message":"283","line":61,"column":12,"nodeType":"274","messageId":"275","endLine":61,"endColumn":25},{"ruleId":"272","severity":1,"message":"284","line":63,"column":23,"nodeType":"274","messageId":"275","endLine":63,"endColumn":36},{"ruleId":"272","severity":1,"message":"285","line":65,"column":12,"nodeType":"274","messageId":"275","endLine":65,"endColumn":18},{"ruleId":"272","severity":1,"message":"286","line":66,"column":12,"nodeType":"274","messageId":"275","endLine":66,"endColumn":19},{"ruleId":"272","severity":1,"message":"287","line":67,"column":12,"nodeType":"274","messageId":"275","endLine":67,"endColumn":17},{"ruleId":"272","severity":1,"message":"288","line":68,"column":12,"nodeType":"274","messageId":"275","endLine":68,"endColumn":25},{"ruleId":"289","severity":1,"message":"290","line":134,"column":16,"nodeType":"291","endLine":141,"endColumn":6},{"ruleId":"289","severity":1,"message":"292","line":141,"column":7,"nodeType":"293","endLine":141,"endColumn":9,"suggestions":"294"},{"ruleId":"279","severity":1,"message":"295","line":53,"column":21,"nodeType":"281","messageId":"282","endLine":53,"endColumn":23},{"ruleId":"279","severity":1,"message":"295","line":101,"column":29,"nodeType":"281","messageId":"282","endLine":101,"endColumn":31},{"ruleId":"279","severity":1,"message":"295","line":104,"column":31,"nodeType":"281","messageId":"282","endLine":104,"endColumn":33},{"ruleId":"279","severity":1,"message":"295","line":107,"column":31,"nodeType":"281","messageId":"282","endLine":107,"endColumn":33},{"ruleId":"279","severity":1,"message":"295","line":110,"column":31,"nodeType":"281","messageId":"282","endLine":110,"endColumn":33},{"ruleId":"279","severity":1,"message":"295","line":113,"column":23,"nodeType":"281","messageId":"282","endLine":113,"endColumn":25},{"ruleId":"279","severity":1,"message":"295","line":116,"column":25,"nodeType":"281","messageId":"282","endLine":116,"endColumn":27},{"ruleId":"279","severity":1,"message":"295","line":119,"column":25,"nodeType":"281","messageId":"282","endLine":119,"endColumn":27},{"ruleId":"279","severity":1,"message":"295","line":122,"column":25,"nodeType":"281","messageId":"282","endLine":122,"endColumn":27},{"ruleId":"279","severity":1,"message":"280","line":128,"column":51,"nodeType":"281","messageId":"282","endLine":128,"endColumn":53},{"ruleId":"279","severity":1,"message":"280","line":139,"column":49,"nodeType":"281","messageId":"282","endLine":139,"endColumn":51},{"ruleId":"289","severity":1,"message":"296","line":152,"column":7,"nodeType":"293","endLine":152,"endColumn":9,"suggestions":"297"},{"ruleId":"289","severity":1,"message":"298","line":156,"column":9,"nodeType":"293","endLine":156,"endColumn":19,"suggestions":"299"},{"ruleId":"279","severity":1,"message":"295","line":161,"column":31,"nodeType":"281","messageId":"282","endLine":161,"endColumn":33},{"ruleId":"279","severity":1,"message":"295","line":161,"column":59,"nodeType":"281","messageId":"282","endLine":161,"endColumn":61},{"ruleId":"279","severity":1,"message":"295","line":161,"column":87,"nodeType":"281","messageId":"282","endLine":161,"endColumn":89},{"ruleId":"279","severity":1,"message":"295","line":173,"column":25,"nodeType":"281","messageId":"282","endLine":173,"endColumn":27},{"ruleId":"279","severity":1,"message":"295","line":173,"column":47,"nodeType":"281","messageId":"282","endLine":173,"endColumn":49},{"ruleId":"279","severity":1,"message":"295","line":173,"column":69,"nodeType":"281","messageId":"282","endLine":173,"endColumn":71},{"ruleId":"272","severity":1,"message":"300","line":23,"column":12,"nodeType":"274","messageId":"275","endLine":23,"endColumn":19},{"ruleId":"272","severity":1,"message":"301","line":24,"column":12,"nodeType":"274","messageId":"275","endLine":24,"endColumn":20},{"ruleId":"272","severity":1,"message":"302","line":25,"column":12,"nodeType":"274","messageId":"275","endLine":25,"endColumn":23},{"ruleId":"272","severity":1,"message":"287","line":34,"column":12,"nodeType":"274","messageId":"275","endLine":34,"endColumn":17},{"ruleId":"272","severity":1,"message":"283","line":36,"column":12,"nodeType":"274","messageId":"275","endLine":36,"endColumn":25},{"ruleId":"279","severity":1,"message":"295","line":41,"column":29,"nodeType":"281","messageId":"282","endLine":41,"endColumn":31},{"ruleId":"279","severity":1,"message":"295","line":44,"column":31,"nodeType":"281","messageId":"282","endLine":44,"endColumn":33},{"ruleId":"279","severity":1,"message":"295","line":47,"column":31,"nodeType":"281","messageId":"282","endLine":47,"endColumn":33},{"ruleId":"279","severity":1,"message":"295","line":50,"column":31,"nodeType":"281","messageId":"282","endLine":50,"endColumn":33},{"ruleId":"279","severity":1,"message":"295","line":53,"column":23,"nodeType":"281","messageId":"282","endLine":53,"endColumn":25},{"ruleId":"279","severity":1,"message":"295","line":56,"column":25,"nodeType":"281","messageId":"282","endLine":56,"endColumn":27},{"ruleId":"279","severity":1,"message":"295","line":59,"column":25,"nodeType":"281","messageId":"282","endLine":59,"endColumn":27},{"ruleId":"279","severity":1,"message":"295","line":62,"column":25,"nodeType":"281","messageId":"282","endLine":62,"endColumn":27},{"ruleId":"289","severity":1,"message":"290","line":78,"column":16,"nodeType":"291","endLine":87,"endColumn":6},{"ruleId":"289","severity":1,"message":"303","line":87,"column":7,"nodeType":"293","endLine":87,"endColumn":19,"suggestions":"304"},{"ruleId":"289","severity":1,"message":"290","line":90,"column":16,"nodeType":"291","endLine":99,"endColumn":6},{"ruleId":"289","severity":1,"message":"305","line":99,"column":7,"nodeType":"293","endLine":99,"endColumn":24,"suggestions":"306"},{"ruleId":"279","severity":1,"message":"295","line":103,"column":31,"nodeType":"281","messageId":"282","endLine":103,"endColumn":33},{"ruleId":"279","severity":1,"message":"295","line":103,"column":59,"nodeType":"281","messageId":"282","endLine":103,"endColumn":61},{"ruleId":"279","severity":1,"message":"295","line":103,"column":87,"nodeType":"281","messageId":"282","endLine":103,"endColumn":89},{"ruleId":"279","severity":1,"message":"295","line":111,"column":25,"nodeType":"281","messageId":"282","endLine":111,"endColumn":27},{"ruleId":"279","severity":1,"message":"295","line":111,"column":47,"nodeType":"281","messageId":"282","endLine":111,"endColumn":49},{"ruleId":"279","severity":1,"message":"295","line":111,"column":69,"nodeType":"281","messageId":"282","endLine":111,"endColumn":71},{"ruleId":"272","severity":1,"message":"307","line":35,"column":20,"nodeType":"274","messageId":"275","endLine":35,"endColumn":29},{"ruleId":"272","severity":1,"message":"308","line":40,"column":25,"nodeType":"274","messageId":"275","endLine":40,"endColumn":40},{"ruleId":"272","severity":1,"message":"309","line":41,"column":19,"nodeType":"274","messageId":"275","endLine":41,"endColumn":27},{"ruleId":"272","severity":1,"message":"300","line":45,"column":12,"nodeType":"274","messageId":"275","endLine":45,"endColumn":19},{"ruleId":"272","severity":1,"message":"301","line":46,"column":12,"nodeType":"274","messageId":"275","endLine":46,"endColumn":20},{"ruleId":"272","severity":1,"message":"310","line":46,"column":22,"nodeType":"274","messageId":"275","endLine":46,"endColumn":33},{"ruleId":"279","severity":1,"message":"280","line":50,"column":57,"nodeType":"281","messageId":"282","endLine":50,"endColumn":59},{"ruleId":"279","severity":1,"message":"280","line":56,"column":19,"nodeType":"281","messageId":"282","endLine":56,"endColumn":21},{"ruleId":"279","severity":1,"message":"280","line":60,"column":19,"nodeType":"281","messageId":"282","endLine":60,"endColumn":21},{"ruleId":"279","severity":1,"message":"280","line":64,"column":19,"nodeType":"281","messageId":"282","endLine":64,"endColumn":21},{"ruleId":"279","severity":1,"message":"280","line":68,"column":19,"nodeType":"281","messageId":"282","endLine":68,"endColumn":21},{"ruleId":"289","severity":1,"message":"311","line":81,"column":7,"nodeType":"293","endLine":81,"endColumn":9,"suggestions":"312"},{"ruleId":"279","severity":1,"message":"295","line":92,"column":23,"nodeType":"281","messageId":"282","endLine":92,"endColumn":25},{"ruleId":"272","severity":1,"message":"308","line":37,"column":25,"nodeType":"274","messageId":"275","endLine":37,"endColumn":40},{"ruleId":"272","severity":1,"message":"309","line":38,"column":19,"nodeType":"274","messageId":"275","endLine":38,"endColumn":27},{"ruleId":"279","severity":1,"message":"295","line":45,"column":74,"nodeType":"281","messageId":"282","endLine":45,"endColumn":76},{"ruleId":"279","severity":1,"message":"280","line":48,"column":25,"nodeType":"281","messageId":"282","endLine":48,"endColumn":27},{"ruleId":"279","severity":1,"message":"280","line":73,"column":57,"nodeType":"281","messageId":"282","endLine":73,"endColumn":59},{"ruleId":"279","severity":1,"message":"280","line":77,"column":19,"nodeType":"281","messageId":"282","endLine":77,"endColumn":21},{"ruleId":"279","severity":1,"message":"280","line":81,"column":19,"nodeType":"281","messageId":"282","endLine":81,"endColumn":21},{"ruleId":"279","severity":1,"message":"280","line":101,"column":50,"nodeType":"281","messageId":"282","endLine":101,"endColumn":52},{"ruleId":"289","severity":1,"message":"313","line":113,"column":7,"nodeType":"293","endLine":113,"endColumn":14,"suggestions":"314"},{"ruleId":"315","severity":1,"message":"316","line":130,"column":35,"nodeType":"317","endLine":130,"endColumn":92},{"ruleId":"272","severity":1,"message":"318","line":11,"column":26,"nodeType":"274","messageId":"275","endLine":11,"endColumn":42},{"ruleId":"272","severity":1,"message":"319","line":12,"column":20,"nodeType":"274","messageId":"275","endLine":12,"endColumn":30},{"ruleId":"279","severity":1,"message":"280","line":25,"column":33,"nodeType":"281","messageId":"282","endLine":25,"endColumn":35},{"ruleId":"279","severity":1,"message":"280","line":27,"column":53,"nodeType":"281","messageId":"282","endLine":27,"endColumn":55},{"ruleId":"289","severity":1,"message":"320","line":42,"column":6,"nodeType":"293","endLine":42,"endColumn":8,"suggestions":"321"},{"ruleId":"272","severity":1,"message":"300","line":19,"column":12,"nodeType":"274","messageId":"275","endLine":19,"endColumn":19},{"ruleId":"289","severity":1,"message":"322","line":46,"column":7,"nodeType":"293","endLine":46,"endColumn":14,"suggestions":"323"},{"ruleId":"272","severity":1,"message":"319","line":27,"column":21,"nodeType":"274","messageId":"275","endLine":27,"endColumn":31},{"ruleId":"272","severity":1,"message":"308","line":33,"column":25,"nodeType":"274","messageId":"275","endLine":33,"endColumn":40},{"ruleId":"272","severity":1,"message":"309","line":34,"column":19,"nodeType":"274","messageId":"275","endLine":34,"endColumn":27},{"ruleId":"279","severity":1,"message":"280","line":41,"column":57,"nodeType":"281","messageId":"282","endLine":41,"endColumn":59},{"ruleId":"279","severity":1,"message":"280","line":47,"column":19,"nodeType":"281","messageId":"282","endLine":47,"endColumn":21},{"ruleId":"279","severity":1,"message":"280","line":51,"column":19,"nodeType":"281","messageId":"282","endLine":51,"endColumn":21},{"ruleId":"279","severity":1,"message":"280","line":55,"column":19,"nodeType":"281","messageId":"282","endLine":55,"endColumn":21},{"ruleId":"279","severity":1,"message":"280","line":59,"column":19,"nodeType":"281","messageId":"282","endLine":59,"endColumn":21},{"ruleId":"289","severity":1,"message":"324","line":71,"column":7,"nodeType":"293","endLine":71,"endColumn":9,"suggestions":"325"},{"ruleId":"272","severity":1,"message":"308","line":39,"column":25,"nodeType":"274","messageId":"275","endLine":39,"endColumn":40},{"ruleId":"272","severity":1,"message":"309","line":40,"column":19,"nodeType":"274","messageId":"275","endLine":40,"endColumn":27},{"ruleId":"279","severity":1,"message":"295","line":47,"column":76,"nodeType":"281","messageId":"282","endLine":47,"endColumn":78},{"ruleId":"279","severity":1,"message":"280","line":50,"column":25,"nodeType":"281","messageId":"282","endLine":50,"endColumn":27},{"ruleId":"279","severity":1,"message":"280","line":75,"column":57,"nodeType":"281","messageId":"282","endLine":75,"endColumn":59},{"ruleId":"279","severity":1,"message":"280","line":79,"column":19,"nodeType":"281","messageId":"282","endLine":79,"endColumn":21},{"ruleId":"279","severity":1,"message":"280","line":83,"column":19,"nodeType":"281","messageId":"282","endLine":83,"endColumn":21},{"ruleId":"279","severity":1,"message":"280","line":103,"column":52,"nodeType":"281","messageId":"282","endLine":103,"endColumn":54},{"ruleId":"289","severity":1,"message":"313","line":115,"column":7,"nodeType":"293","endLine":115,"endColumn":14,"suggestions":"326"},{"ruleId":"272","severity":1,"message":"307","line":33,"column":20,"nodeType":"274","messageId":"275","endLine":33,"endColumn":29},{"ruleId":"272","severity":1,"message":"300","line":39,"column":12,"nodeType":"274","messageId":"275","endLine":39,"endColumn":19},{"ruleId":"279","severity":1,"message":"280","line":47,"column":83,"nodeType":"281","messageId":"282","endLine":47,"endColumn":85},{"ruleId":"289","severity":1,"message":"327","line":80,"column":7,"nodeType":"293","endLine":80,"endColumn":14,"suggestions":"328"},{"ruleId":"279","severity":1,"message":"295","line":90,"column":66,"nodeType":"281","messageId":"282","endLine":90,"endColumn":68},{"ruleId":"279","severity":1,"message":"280","line":102,"column":82,"nodeType":"281","messageId":"282","endLine":102,"endColumn":84},{"ruleId":"279","severity":1,"message":"280","line":107,"column":61,"nodeType":"281","messageId":"282","endLine":107,"endColumn":63},{"ruleId":"289","severity":1,"message":"329","line":122,"column":7,"nodeType":"293","endLine":122,"endColumn":9,"suggestions":"330"},{"ruleId":"289","severity":1,"message":"329","line":127,"column":7,"nodeType":"293","endLine":127,"endColumn":29,"suggestions":"331"},{"ruleId":"272","severity":1,"message":"332","line":13,"column":11,"nodeType":"274","messageId":"275","endLine":13,"endColumn":30},{"ruleId":"272","severity":1,"message":"333","line":28,"column":11,"nodeType":"274","messageId":"275","endLine":28,"endColumn":29},{"ruleId":"289","severity":1,"message":"290","line":43,"column":16,"nodeType":"291","endLine":46,"endColumn":6},{"ruleId":"272","severity":1,"message":"300","line":17,"column":12,"nodeType":"274","messageId":"275","endLine":17,"endColumn":19},{"ruleId":"289","severity":1,"message":"334","line":39,"column":7,"nodeType":"293","endLine":39,"endColumn":14,"suggestions":"335"},{"ruleId":"272","severity":1,"message":"309","line":29,"column":19,"nodeType":"274","messageId":"275","endLine":29,"endColumn":27},{"ruleId":"279","severity":1,"message":"295","line":23,"column":72,"nodeType":"281","messageId":"282","endLine":23,"endColumn":74},{"ruleId":"279","severity":1,"message":"295","line":29,"column":82,"nodeType":"281","messageId":"282","endLine":29,"endColumn":84},{"ruleId":"272","severity":1,"message":"336","line":34,"column":12,"nodeType":"274","messageId":"275","endLine":34,"endColumn":22},{"ruleId":"279","severity":1,"message":"280","line":42,"column":55,"nodeType":"281","messageId":"282","endLine":42,"endColumn":57},{"ruleId":"279","severity":1,"message":"280","line":53,"column":53,"nodeType":"281","messageId":"282","endLine":53,"endColumn":55},{"ruleId":"289","severity":1,"message":"296","line":65,"column":7,"nodeType":"293","endLine":65,"endColumn":9,"suggestions":"337"},{"ruleId":"279","severity":1,"message":"280","line":40,"column":53,"nodeType":"281","messageId":"282","endLine":40,"endColumn":55},{"ruleId":"279","severity":1,"message":"280","line":58,"column":51,"nodeType":"281","messageId":"282","endLine":58,"endColumn":53},{"ruleId":"289","severity":1,"message":"296","line":70,"column":7,"nodeType":"293","endLine":70,"endColumn":9,"suggestions":"338"},{"ruleId":"279","severity":1,"message":"280","line":35,"column":65,"nodeType":"281","messageId":"282","endLine":35,"endColumn":67},{"ruleId":"315","severity":1,"message":"316","line":7,"column":12,"nodeType":"317","endLine":8,"endColumn":89},"no-native-reassign",["339"],"no-negated-in-lhs",["340"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'isLogedInVar' is assigned a value but never used.","Identifier","unusedVar","'setLogInUsersVar' is assigned a value but never used.","'logInUserVar' is assigned a value but never used.","'isAdminVar' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'logInUsersVar' is assigned a value but never used.","'setIsAdminVar' is assigned a value but never used.","'movies' is assigned a value but never used.","'members' is assigned a value but never used.","'users' is assigned a value but never used.","'subscriptions' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'getMembers', 'getMovies', 'getSubscriptions', 'getUsers', 'getUsersLogin', and 'setIsLogedInVar'. Either include them or remove the dependency array.","ArrayExpression",["341"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["342"],"React Hook useEffect has a missing dependency: 'assignCheckBoxses'. Either include it or remove the dependency array.",["343"],"'pressed' is assigned a value but never used.","'pressed2' is assigned a value but never used.","'permissions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setUsers'. Either include it or remove the dependency array.",["344"],"React Hook useEffect has a missing dependency: 'setLogInUsersVar'. Either include it or remove the dependency array.",["345"],"'setMovies' is assigned a value but never used.","'setLogInUserVar' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'setPressed2' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkWhichBottonsToShow' and 'movies'. Either include them or remove the dependency array.",["346"],"React Hook useEffect has a missing dependency: 'loadPage'. Either include it or remove the dependency array.",["347"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setSubscriptions' is assigned a value but never used.","'setMembers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'createSubscriptionsArray'. Either include it or remove the dependency array.",["348"],"React Hook useEffect has missing dependencies: 'genres', 'imageUrl', 'movies', 'premierd', 'setMovies', and 'title'. Either include them or remove the dependency array.",["349"],"React Hook useEffect has a missing dependency: 'checkWhichBottonsToShow'. Either include it or remove the dependency array.",["350"],["351"],"React Hook useEffect has missing dependencies: 'date', 'props.memberId', 'selectedMovie.id', 'setSubscriptions', and 'subscriptions'. Either include them or remove the dependency array.",["352"],"React Hook useEffect has a missing dependency: 'createMoviesAndDatesArray'. Either include it or remove the dependency array.",["353"],["354"],"'loadMembersToServer' is assigned a value but never used.","'loadMoviesToServer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'city', 'email', 'members', 'name', and 'setMembers'. Either include them or remove the dependency array.",["355"],"'editMember' is assigned a value but never used.",["356"],["357"],"no-global-assign","no-unsafe-negation",{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"370","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"360","fix":"387"},{"desc":"360","fix":"388"},"Update the dependencies array to be: [getMembers, getMovies, getSubscriptions, getUsers, getUsersLogin, setIsLogedInVar]",{"range":"389","text":"390"},"Update the dependencies array to be: [form]",{"range":"391","text":"392"},"Update the dependencies array to be: [assignCheckBoxses, editUser]",{"range":"393","text":"394"},"Update the dependencies array to be: [newUsersId, setUsers]",{"range":"395","text":"396"},"Update the dependencies array to be: [newUsersLoginId, setLogInUsersVar]",{"range":"397","text":"398"},"Update the dependencies array to be: [checkWhichBottonsToShow, movies]",{"range":"399","text":"400"},"Update the dependencies array to be: [loadPage, props]",{"range":"401","text":"402"},"Update the dependencies array to be: [createSubscriptionsArray]",{"range":"403","text":"404"},"Update the dependencies array to be: [genres, imageUrl, movies, newId, premierd, setMovies, title]",{"range":"405","text":"406"},"Update the dependencies array to be: [checkWhichBottonsToShow]",{"range":"407","text":"408"},{"range":"409","text":"402"},"Update the dependencies array to be: [date, newId, props.memberId, selectedMovie.id, setSubscriptions, subscriptions]",{"range":"410","text":"411"},"Update the dependencies array to be: [createMoviesAndDatesArray]",{"range":"412","text":"413"},"Update the dependencies array to be: [subscribePage, props, createMoviesAndDatesArray]",{"range":"414","text":"415"},"Update the dependencies array to be: [city, email, members, name, newId, setMembers]",{"range":"416","text":"417"},{"range":"418","text":"392"},{"range":"419","text":"392"},[4279,4281],"[getMembers, getMovies, getSubscriptions, getUsers, getUsersLogin, setIsLogedInVar]",[5277,5279],"[form]",[5344,5354],"[assignCheckBoxses, editUser]",[3407,3419],"[newUsersId, setUsers]",[3765,3782],"[newUsersLoginId, setLogInUsersVar]",[2893,2895],"[checkWhichBottonsToShow, movies]",[3510,3517],"[loadPage, props]",[1506,1508],"[createSubscriptionsArray]",[1805,1812],"[genres, imageUrl, movies, newId, premierd, setMovies, title]",[2398,2400],"[checkWhichBottonsToShow]",[3514,3521],[3624,3631],"[date, newId, props.memberId, selectedMovie.id, setSubscriptions, subscriptions]",[4932,4934],"[createMoviesAndDatesArray]",[5010,5032],"[subscribePage, props, createMoviesAndDatesArray]",[1466,1473],"[city, email, members, name, newId, setMembers]",[2129,2131],[2329,2331]]